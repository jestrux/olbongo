{"version":3,"sources":["Notifications/NotificationItem.jsx","Notifications/index.jsx","Login/index.jsx","Header/index.jsx","constants.js","PostList/PostItem/PostMedia/PostImages.jsx","PostList/PostItem/PostMedia/PostVideo.jsx","PostList/PostItem/PostMedia/index.jsx","Utils/index.jsx","PostList/PostItem/PostComments/PostComment.jsx","PostList/PostItem/PostComments/index.jsx","PostList/PostItem/PostCommenter/index.jsx","PostList/PostItem/index.jsx","PostList/NewPost/NewPostImage/index.jsx","PostList/NewPost/NewPostVideo/index.jsx","PostList/NewPost/NewPostMedia.jsx","PostList/NewPost/NewPostMobile/NewPostCamera/Camera.jsx","PostList/NewPost/NewPostMobile/NewPostCamera/index.jsx","PostList/NewPost/NewPostMobile/index.jsx","PostList/NewPost/index.jsx","components/Loader/index.jsx","PostList/index.jsx","components/BottomSheet/index.jsx","UserProfile/index.jsx","App/index.jsx","serviceWorker.js","index.js","Login/logo.png","Header/logo.png"],"names":["NotificationItem","props","notification","message","Object","objectWithoutProperties","react_default","a","createElement","className","dangerouslySetInnerHTML","__html","_len","arguments","length","rest","Array","_key","options","CustomEvent","detail","notify","event","document","dispatchEvent","Notifications","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","notifications","showNotification","_notification","setState","toConsumableArray","concat","setTimeout","_notifications","filter","n","id","wrapper","React","createRef","_this2","addEventListener","e","Math","random","toString","substr","reverse","map","i","Notifications_NotificationItem","key","Component","Login","username","password","inputChanged","defineProperty","target","name","value","_this$state","isValid","autoComplete","src","logo","height","alt","autoFocus","required","type","onChange","htmlFor","onClick","onLogin","Header","dp","onViewProfile","API_BASE_URL","PostImage","images","templateClass","extras","shown_image_count","slice","photo","_parseYoutubeURL","str","test","match","PostVideo","video","is_youtube_url","embed","url","_getEmbedUrl","title","frameBorder","allow","allowFullScreen","controls","PostMedia","videos","PostImages","PostMedia_PostVideo","FavoritedIcon","fill","viewBox","d","FavoriteIcon","FavToggle","Fragment","faved","Utils_FavoritedIcon","Utils_FavoriteIcon","PostComment","comment","publisher","published_at","content","is_liked","display_name","indexOf","onToggleLiked","Utils_FavToggle","PostComments","initial_fetch","comments","_this$props","loading","index","PostComments_PostComment","onToggleCommentLiked","PostCommenter","handleChange","handleKeyup","sendComment","JSON","parse","stringify","onNewComment","animate_icon","user","animation_duration","placeholder","onKeyUp","lib","width","duration","rotation","PostItem","post","fetching_comments","owned","total_likes","total_comments","total_commenets","like_text","comment_text","onViewUser","xmlns","PostItem_PostMedia","onShowComments","PostItem_PostComments","PostItem_PostCommenter","NewPostImage","was_setup","processImage","_callee","image","worker","regenerator_default","wrap","_context","prev","next","workerize","load","sent","onImageLoaded","stop","file","uploadImage","params","formData","FormData","append","config","headers","content-type","token","fileUpload","then","_ref2","response","data","console","log","onImageUploaded","catch","error","err","request","is_temp","onRemoveImage","NewPostVideo","videoUpload","_ref","onRemoveVideo","NewPostMedia","readonly","NewPost_NewPostVideo","onVideoUploaded","res","NewPost_NewPostImage","new_image","Camera","facingMode","setup","audio","navigator","mediaDevices","getUserMedia","mediaStream","srcObject","play","getVideoTracks","mediaStreamTrack","window","ImageCapture","takePhoto","_this3","style","children","ref","defaultProps","NewPostCamera","takePicture","camera","capture","blob","URL","createObjectURL","img","onload","revokeObjectURL","switchCameraMode","switchMode","handleRepeat","NewPostCamera_Camera","cam","onCancel","onAddPicture","NewPostMobile","takingPicture","closeCamera","onCloseCamera","inputField","current","textarea","focus","handleAddPicture","picture","posting","dist_default","enabled","NewPostCamera_NewPostCamera","onBackClicked","onSubmitClicked","react_autosize_textarea_lib_default","rows","NewPost_NewPostMedia","onFilesPicked","onOpenCamera","MAX_IMAGE_COUNT","NewPost","creatingOnMobile","dragover","focused","FileDragHover","stopPropagation","preventDefault","hovering","FileSelectHandler","files","dataTransfer","processFiles","openCamera","history","pushState","back","imageLoaded","new_images","splice","imageUpLoaded","videoUpLoaded","removeVideo","removeImage","pic","lastModifiedDate","Date","from","f","diff","forEach","fname","trim","setFocus","fromClick","innerWidth","openMobileCreate","creating","closeMobileCreate","video_index","replace","submitClicked","sendPost","aPost","asyncToGenerator","mark","form_data","set","status","onNewPost","_isMounted","onpopstate","hash","location","NewPost_NewPostMobile","onFocus","onBlur","Loader","thin","PostList","posts","fetchUserPosts","axios","get","toggleCommentLiked","comment_index","isLiked","new_posts","comment_id","toggleLiked","post_id","_ref3","newPost","unshift","addComment","objectSpread","push","method","_ref4","showComments","_ref5","scrolled","_this$props2","PostList_NewPost","components_Loader","PostList_PostItem","BottomSheet","visible","fixed","handleIntersection","isIntersecting","handleClose","onClose","root","rootMargin","innerHeight","contentLoaded","peekHeight","tx","es","transform","UserProfile","profileLoaded","postsLoaded","fetchUserProfile","sessionUser","user_id","onPostsLoaded","onLogout","followers","following","friends","src_PostList","App","profileUser","userProfilePostsLoaded","user_fetched","fetchUser","session_user","localStorage","getItem","handleProfilePostsLoaded","login","result","setItem","logout","removeItem","closeProfileUser","viewProfileUser","user_logged_in","context","src_Notifications","src_Header","src_Login","components_BottomSheet","src_UserProfile","Boolean","hostname","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c3250633.chunk.js","sourcesContent":["import React from 'react';\n\nconst NotificationItem = (props) => {\n    const { notification } = props\n    const { message, ...options } = notification;\n    return ( \n        <div className=\"notif show\" dangerouslySetInnerHTML={{ __html: message }}></div>\n    );\n}\n \nexport default NotificationItem;","import React from 'react';\n\nimport './notifications.css';\nimport NotificationItem from './NotificationItem';\n\nexport const notification = (message, ...rest) => {\n    const options = rest && rest.length ? rest[0] : {};\n    return new CustomEvent('ot-notification', { detail: { message, options: options } })\n}\n\nexport const notify = ( event ) => {\n    document.dispatchEvent(event);\n}\n\nclass Notifications extends React.Component {\n    state = { notifications: [] }\n    constructor(props){\n        super(props);\n        this.wrapper = React.createRef();\n    }\n\n    componentDidMount(){\n        document.addEventListener('ot-notification', (e) => {\n            const _notification = e.detail;\n            _notification.id = 'ot-notif-' + Math.random().toString(36).substr(2, 5);\n\n            this.showNotification(_notification)\n        }, false);\n    }\n\n    showNotification = (_notification) => {\n        this.setState({ notifications: [ ...this.state.notifications, _notification] }, () => {\n            setTimeout(() => {\n                const _notifications = [...this.state.notifications].filter( ( n ) => n.id !== _notification.id);\n                this.setState({ notifications: _notifications });\n            }, 3000);\n        });\n    }\n\n    render() { \n        const { notifications } = this.state;\n        return ( \n            <div className=\"ot-notifications-wrapper\">\n                { notifications.reverse().map( (n, i) => <NotificationItem key={i} notification={n} />) }\n            </div>\n        );\n    }\n}\n \nexport default Notifications;","import React from 'react';\n\nimport \"./login.css\";\nimport logo from \"./logo.png\";\n\nclass Login extends React.Component {\n    state = { username: \"\", password: \"\" }\n\n    inputChanged = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n    };\n\n    render() { \n        const { username, password } = this.state;\n        const isValid = username.length > 0 && password.length > 0;\n        return (\n            <div className=\"ot-login-page\">\n                <form className=\"ot-login-form\" autoComplete=\"off\">\n                    <div className=\"ot-login-title layout center\">\n                        <img src={logo} height=\"50px\" alt=\"\"/>\n                        Otalk Login\n                    </div>\n\n                    <div className=\"ot-input-box\">\n                        <input autoFocus autoComplete=\"off\" id=\"username\" className={ username.length ? 'valid' : '' }\n                            required type=\"text\" name=\"username\"\n                            value={username} \n                            onChange={this.inputChanged} />\n                        <label htmlFor=\"username\">Username</label>\n                    </div>\n\n                    <div className=\"ot-input-box\">\n                        <input autoComplete=\"off\" id=\"password\" className={ password.length ? 'valid' : '' }\n                            required type=\"password\" name=\"password\"\n                            value={password} \n                            onChange={this.inputChanged} />\n                        <label htmlFor=\"password\">Password</label>\n                    </div>\n\n                    <button type=\"button\" className={ 'ot-btn primary rounded ' + ( !isValid ? 'disabled' : '' ) }\n                        onClick={() => this.props.onLogin({username, password})}>LOGIN</button>\n                </form>\n            </div>\n        );\n    }\n}\n \nexport default Login;","import React from 'react';\nimport logo from \"./logo.png\"\n\nimport './header.css';\n\nconst Header = (props) => {\n    const { dp } = props;\n\n    return ( \n        <div className=\"ot-header layout center\">\n            <img className=\"ot-logo\" src={logo} alt=\"\"/>\n            &emsp;\n            <span className=\"ot-header-title\">\n                Otalk\n            </span>\n\n            <span className=\"flex\"></span>\n\n            <div className=\"ot-dp\">\n                <img src={dp} alt=\"\" onClick={props.onViewProfile} />\n            </div>\n        </div>\n    );\n}\n \nexport default Header;","export const LOGIN_URL = \"https://www.olbongo.com/api/login\"\nexport const API_BASE_URL = \"https://www.olbongo.com/api/otalk\"","import React from 'react';\n\nconst PostImage = ( props ) => {\n    const { images } = props;\n    let templateClass = '';\n    let extras = ''; \n\n    if(images.length > 1){\n        switch (images.length) {\n            case 2:\n                templateClass = 'two';\n                break;\n            case 3:\n                templateClass = 'three';\n                break;\n            case 4:\n                templateClass = 'four';\n                break;\n            case 5:\n                templateClass = 'five';\n                break;\n        \n            default:\n                templateClass = 'four';\n                break;\n        }\n        templateClass += '-image-grid';\n\n        if(images.length > 5)\n            templateClass += ' has-more';\n    \n        extras = images.length > 5 ? images.length - 4 : '';\n    }\n\n    const shown_image_count = images.length > 5 ? 4 : images.length;\n\n    return ( \n        <div className={'ot-post-images ' + templateClass } extras={extras}>\n            {   \n                images.slice(0, shown_image_count).map( i => \n                    <div key={i.id} className=\"ot-post-image\">\n                        <img src={i.photo} alt=\"\"/> \n                    </div>\n                )\n            }\n        </div>\n    );\n}\n \nexport default PostImage;","import React from 'react';\n\nexport function _parseYoutubeURL(str){\n    var pattern = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\n    \n    if(!pattern.test(str)) {\n        return false;\n    } else {\n        var reg = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/\n        return str.match(reg);\n    }\n}\n\nexport function _getEmbedUrl(url) {\n    return `https://www.youtube.com/embed/${url}?rel=0&amp;showinfo=0`;\n}\n\nconst PostVideo = ( props ) => {\n    const { video } = props;\n    const is_youtube_url = video ? _parseYoutubeURL(video.video) : false;\n\n    let url = \"\";\n    let embed = \"\";\n    \n    if(is_youtube_url){\n        url = is_youtube_url[2];\n        embed = _getEmbedUrl(url);\n    }\n\n    return ( \n        <div className={'ot-post-video ' + ( is_youtube_url ? 'for-youtube' : '' )}>\n            { is_youtube_url && <iframe title=\"post video\" src={embed} frameBorder=\"0\" allow=\"autoplay; encrypted-media\" allowFullScreen></iframe> }\n            { video && !is_youtube_url && \n                (\n                    <video controls>\n                        <source src={video.video} />\n                    </video>\n                )\n            }\n        </div>\n    );\n}\n \nexport default PostVideo;","import React from 'react';\n\nimport './post-media.css';\n\nimport PostImages from \"./PostImages\";\nimport PostVideo from \"./PostVideo\";\n\nconst PostMedia = (props) => {\n    const { images, videos } = props;\n\n    return ( \n        <div className=\"ot-post-media\">\n            {/* <PostImages images={images} /> */}\n            {/* <PostVideo videos={videos} /> */}\n            { images.length > 0 && (<PostImages images={images} /> ) }\n            { !images.length && videos.length > 0 && ( <PostVideo video={videos[0]} /> )}\n        </div>\n    );\n}\n \nexport default PostMedia;","import React from 'react';\n\nexport const FavoritedIcon = () => {\n    return (<svg fill=\"#ffa200\" className=\"ot-post-like-icon\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/></svg>);\n}\n \nexport const FavoriteIcon = () => {\n    return (<svg fill=\"#656565\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"/></svg>);\n}\n\nexport const FavToggle = (props) => {\n    return ( \n        <React.Fragment>{ props.faved ? <FavoritedIcon key=\"favorited_icon\" /> : <FavoriteIcon key=\"favorite_icon\" /> }</React.Fragment>\n    );\n}","import React from 'react';\nimport { FavToggle } from '../../../Utils';\n\nconst PostComment = ( props ) => {\n    const { comment } = props;\n    const { id, published_at, publisher, content, is_liked } = comment;\n    const { dp, display_name } = publisher;\n\n    return ( \n        <div className={'ot-post-comment layout ' + ( id.toString().indexOf('ot-temp-id') !== -1 ? 'temp' : '' )}>\n            <div className=\"ot-dp small\">\n                <img src={dp} alt=\"\"/>\n            </div>\n            <p>\n                <strong>{ display_name }</strong> { content }\n            </p>\n\n            <button className=\"ot-comment-liker ot-btn action\" onClick={ props.onToggleLiked }>\n                { <FavToggle faved={is_liked} /> }\n            </button>\n        </div>\n    );\n}\n \nexport default PostComment;","import React from 'react';\nimport './post-comments.css';\n\nimport PostComment from \"./PostComment\";\n\nclass PostComments extends React.Component {\n    state = { initial_fetch: false, comments: [] };\n\n    componentDidMount(){\n        const { comments, loading } = this.props;\n        this.setState({ comments });\n    }\n\n    render() { \n        const { comments, initial_fetch } = this.state;\n        const { loading } = this.props;\n\n        return ( \n            <div className=\"ot-post-comments\">\n                {!comments.length > 0 && !initial_fetch && <span>Fetching comments....</span>}\n\n                {(comments.length > 0 || initial_fetch) && (\n                    <React.Fragment>\n                        { comments.map( (comment, index) => \n                            <PostComment \n                                key={comment.id} \n                                comment={comment} \n                                onToggleLiked={() => this.props.onToggleCommentLiked(index) } />) \n                        }\n                    </React.Fragment>\n                )}\n\n                { loading && (\n                    <span className=\"ot-comments-loader\">\n                        { comments.length > 0 ? 'loading more comments....' : 'loading comments....'}\n                    </span>\n                ) }\n            </div>\n        );\n    }\n}\n \nexport default PostComments;","import React from 'react';\nimport { FavoriteIcon, FavoritedIcon } from '../../../Utils';\nimport { MorphReplace } from 'react-svg-morph';\n\nimport './post-commenter.css';\n\nclass PostCommenter extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = { comment: '', animate_icon: true };\n    }\n\n    handleChange = (event) => {\n        this.setState({comment: event.target.value});\n    }\n    \n    handleKeyup = (event) => {\n        if(event.key === 'Enter')\n            this.sendComment();\n    }\n\n    sendComment = () => {\n        const state_copy = JSON.parse(JSON.stringify(this.state));\n        const comment = state_copy.comment;\n\n        if(comment.length){\n            this.props.onNewComment(comment);\n            this.setState({comment : \"\"});\n        }\n    }\n\n    render(){\n        const { comment, animate_icon } = this.state;\n        const { user, faved } = this.props;\n\n        const animation_duration = animate_icon ? 500 : 0;\n\n        return (\n            <div className=\"ot-post-commenter layout center\">\n                <div className=\"ot-dp small\">\n                    <img src={user.dp} alt=\"\" />\n                </div>\n\n                <input className=\"flex\" type=\"text\" placeholder=\"Write a Comment\" \n                    value={comment} \n                    onChange={this.handleChange}\n                    onKeyUp={this.handleKeyup} />\n\n                <div className={'ot-post-commenter-actions' + ((!comment.length) ? ' can-like' : '')}>\n                    <button className=\"ot-btn flat\" onClick={ this.sendComment } >\n                        POST\n                    </button>\n                    <button className=\"ot-post-liker ot-btn action\" onClick={ this.props.onToggleLiked }>\n                        <MorphReplace width={20} height={20} duration={animation_duration} rotation={'none'}>\n                            { faved ? <FavoritedIcon key=\"favorited_icon\" /> : <FavoriteIcon key=\"favorite_icon\" /> }\n                        </MorphReplace>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default PostCommenter;","import React from 'react';\n\nimport './post-item.css';\n\nimport PostMedia from \"./PostMedia\";\n\nimport PostComments from \"./PostComments\";\nimport PostCommenter from \"./PostCommenter\";\n\nconst PostItem = (props) => {\n    const { user, post } = props;\n    const { fetching_comments, is_liked, publisher, owned, published_at, content, images, videos, comments, total_likes, total_commenets } = post;\n    const total_comments = total_commenets;\n    \n    let like_text = total_likes + ' Like';\n    like_text += ( total_likes != 1) ? 's' : '';\n    \n    let comment_text = total_comments + ' Comment';\n    comment_text += ( total_comments != 1) ? 's' : '';\n\n    function handleShowComments(){\n        if(comments && total_comments > 0 && total_comments !== comments.length)\n            props.onShowComments()\n    }\n\n    return ( \n        <div className=\"ot-post-item\">\n            <div className=\"ot-post-item-title layout center\">\n                <div className=\"ot-dp\" onClick={props.onViewUser}>\n                    <img src={publisher.dp} alt=\"\" />\n                </div>\n                \n                <div>\n                    <span className=\"ot-post-item-owner\" onClick={props.onViewUser}>\n                        { publisher.display_name }\n                    </span>\n                    <span className=\"ot-post-item-date\">\n                        { published_at }\n                    </span>\n                </div>\n\n                {/* { !owned && \n                    (\n                        <button className=\"ot-btn ot-follow-btn flat primary\">\n                            Follow\n                        </button>\n                    )\n                } */}\n\n                <span className=\"flex\"></span>\n\n                <button className=\"ot-post-options-btn ot-btn action\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\n                </button>\n            </div>\n            \n            <p className=\"ot-post-item-content\">\n                { content }\n            </p>\n\n            { (images.length > 0 || videos.length > 0) && (<PostMedia images={images} videos={videos} />) }\n\n            <div className=\"ot-post-reactions\">\n                <small>{ like_text }</small>\n                <span></span>\n                <small className={total_comments > 0 ? 'can-click' : ''}\n                    onClick={ handleShowComments }>{ comment_text }</small>\n            </div>\n\n            { ((comments && comments.length > 0) || fetching_comments) && (\n                <PostComments comments={comments} loading={fetching_comments}\n                    onToggleCommentLiked={props.onToggleCommentLiked} />\n            ) }\n\n            <PostCommenter \n                user={user} faved={is_liked}\n                onToggleLiked={ props.onToggleLiked }\n                onNewComment = { props.onNewComment } />\n        </div>\n    );\n}\n \nexport default PostItem;","import React from 'react';\nimport workerize from 'workerize'\nimport axios, { post } from 'axios'\n\nimport { API_BASE_URL } from \"../../../constants\";\n\nclass NewPostImage extends React.Component {\n    state = { was_setup: false };\n    // ctx;\n    // constructor(props){\n    //     super(props);\n    //     this.canvas = React.createRef();\n    //     this.ctx = this.canvas.getContext('2d')\n    // }\n\n    componentWillReceiveProps(props){\n        const { image } = props;\n        const { file, src } = image;\n\n        if(!this.state.was_setup && image){\n            this.setState({ image, was_setup: true })\n\n            if(file){\n                this.processImage(file);\n                this.uploadImage(file);\n                // loader(file).then(img => {\n                    // console.log(\"Loaded image\", img);\n                    // this.props.onImageLoaded(img);\n                    // this.ctx.drawImage(img, 0, 0, ctx.canvas.width, ctx.canvas.height);\n                // });\n            }else{\n                this.uploadImage(src);\n            }\n        }\n    }\n\n    processImage = async ( image ) => {\n        let worker = workerize(`\n            export function load(file) {\n                return new Promise((resolve, reject) => {\n                    var reader = new FileReader();\n                    reader.onload = function(e) {\n                        resolve(e.target.result);\n                    }\n                    reader.readAsDataURL(file);\n                });\n            }\n        `);\n        const src = await worker.load(image);\n        this.props.onImageLoaded(src);\n    }\n\n    fileUpload(url, file, name, params){\n        const formData = new FormData();\n        formData.append(name, file)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            },\n            params\n        }\n        return  post(url, formData, config)\n    }\n\n    uploadImage(file){\n        const params = { token: this.props.token };\n        this.fileUpload(API_BASE_URL + '/upload_post_images/', file, 'photo', params)\n            .then(({data}) => {\n                const response = data.images[0];\n                console.log(\"Upload image result: \", response);\n                this.props.onImageUploaded( response );\n            })\n            .catch((error) => {\n                let err = \"\";\n                if (error.response) {\n                    err = error.response.data;\n                } else if (error.request) {\n                    err = error.request;\n                } else {\n                    err = error.message;\n                }\n\n                console.error(\"Upload image Error\", err);;\n            });\n    }\n\n    render() {\n        const { image } = this.props;\n        const { id, src, loading } = image;\n        const is_temp = id.toString().indexOf('ot-temp-id') !== -1;\n        // const is_temp = false;\n        return ( \n            <div className={'ot-new-post-image ' + ( loading ? 'loading' : '' ) + ( is_temp ? ' is-temp' : '' )}>\n                <img src={src} alt=\"\"/>\n                <button className=\"ot-btn action\" onClick={this.props.onRemoveImage}>\n                    <svg viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\n                </button>\n            </div>\n        );\n    }\n}\n \nexport default NewPostImage;","import React from 'react';\nimport { post } from 'axios'\n\nimport { API_BASE_URL } from \"../../../constants\";\nimport PostVideo from '../../PostItem/PostMedia/PostVideo';\n\nclass NewPostVideo extends React.Component {\n    state = { was_setup: false };\n\n    componentWillReceiveProps(props){\n        const { video } = props;\n\n        // if(!this.state.was_setup && video){\n        //     this.setState({ video, was_setup: true })\n        //     this.uploadVideo(video.video);\n        // }\n    }\n\n    videoUpload(url, video, params){\n        const formData = new FormData();\n        formData.append('video', video)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            },\n            params\n        }\n        return  post(url, formData, config)\n    }\n\n    uploadVideo(video){\n        const params = { token: this.props.token };\n        this.videoUpload(API_BASE_URL + '/upload_post_videos/', video, params)\n            .then(({data}) => {\n                // const response = data.videos[0];\n                console.log(\"Upload video result: \", data);\n                // this.props.onVideoUploaded( response );\n            })\n            .catch((error) => {\n                let err = \"\";\n                if (error.response) {\n                    err = error.response.data;\n                } else if (error.request) {\n                    err = error.request;\n                } else {\n                    err = error.message;\n                }\n\n                console.error(\"Upload video Error\", err);;\n            });\n    }\n\n    render() {\n        const { video } = this.props;\n        const { id, loading } = video;\n        // const is_temp = id.toString().indexOf('ot-temp-id') !== -1;\n        const is_temp = false;\n        return ( \n            <div className={'ot-new-post-video ' + ( loading ? 'loading' : '' ) + ( is_temp ? ' is-temp' : '' )}>\n                <PostVideo video={video} />\n                <button className=\"ot-btn action\" onClick={this.props.onRemoveVideo}>\n                    <svg viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\n                </button>\n            </div>\n        );\n    }\n}\n \nexport default NewPostVideo;","import React from 'react';\n\nimport NewPostImage from \"./NewPostImage\";\nimport NewPostVideo from \"./NewPostVideo\";\n\nconst NewPostMedia = ( props ) => {\n    const { readonly, images, videos, token } = props;\n    const video = videos && videos.length ? videos[0] : null;\n\n    return ( \n        <div className=\"ot-new-post-media\">\n            { videos && videos.length > 0 && \n                <NewPostVideo video={video}\n                    token={token}\n                    onVideoUploaded={ ( res ) => { if(!readonly) props.onVideoUploaded(res) } }\n                    onRemoveVideo={ props.onRemoveVideo } />\n            }\n            { images && images.length > 0 &&\n                <div className=\"layout ot-new-post-images\">\n                    { images.map( (image, index) => \n                        <NewPostImage key={ index } image={image}\n                            token={token}\n                            onImageLoaded={ (src) => { if(!readonly) props.onImageLoaded(image, index, src) } }\n                            onImageUploaded={ (new_image) => { if(!readonly) props.onImageUploaded(image, index, new_image) } }\n                            onRemoveImage={ () =>  props.onRemoveImage(index) } />\n                    )}\n                </div>\n            }\n        </div>\n    );\n}\n \nexport default NewPostMedia;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Camera extends Component {\n  state = { facingMode: \"user\" };\n  componentWillMount() {\n    this.setup();\n  }\n\n  componentWillUnmount(){\n    this.state.mediaStream.getVideoTracks()[0].stop();\n  }\n\n  setup = () => {\n    const { video, audio } = this.props;\n    if (navigator.mediaDevices) {\n      navigator.mediaDevices\n      // .getUserMedia({ video, audio, facingMode: this.state.facingMode })\n      .getUserMedia({ video: { facingMode: this.state.facingMode }, audio })\n      .then((mediaStream) => {\n        this.setState({ mediaStream });\n        this.video.srcObject = mediaStream;\n        this.video.play();\n      })\n      .catch(error => error);\n    }\n  }\n\n  capture() {\n    const mediaStreamTrack = this.state.mediaStream.getVideoTracks()[0];\n    const imageCapture = new window.ImageCapture(mediaStreamTrack);\n\n    return imageCapture.takePhoto();\n  }\n  \n  switchMode() {\n    const facingMode = this.state.facingMode === \"environment\" ? \"user\" : \"environment\";\n    this.setState({facingMode}, () => {\n      this.state.mediaStream.getVideoTracks()[0].stop();\n      this.setState({ mediaStream: null });\n      // return this.setState({ mediaStream: null });\n      setTimeout(() => {\n        this.setup();\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div style={this.props.style}>\n        { this.props.children }\n        <video ref={(video) => { this.video = video; }} />\n      </div>\n    );\n  }\n}\n\nCamera.propTypes = {\n  audio: PropTypes.bool,\n  video: PropTypes.bool,\n  children: PropTypes.element\n};\n\nCamera.defaultProps = {\n  audio: false,\n  video: true,\n  style: {},\n  children: null\n};\n\nexport default Camera;\n\n\nconst styles = {\n  base: {\n    width: '100%',\n    height: '100%'\n  }\n};","import React, { Component } from 'react';\n// import Camera from 'react-camera';\nimport Camera from './Camera';\n\nexport default class NewPostCamera extends Component {\n  state = { image: null }\n\n  takePicture = () => {\n    this.camera.capture()\n    .then(blob => {\n      const src = URL.createObjectURL(blob);\n      this.img.src = src;\n      this.setState({image: blob});\n      console.log(src);\n      this.img.onload = () => { URL.revokeObjectURL(this.src); }\n    })\n  }\n\n  switchCameraMode = () => {\n    this.camera.switchMode()\n  }\n\n  handleRepeat = () => {\n    this.setState({image: null});\n  }\n\n  render() {\n    const { image } = this.state;\n    return (\n      <div id=\"newPostCamera\">\n        { !image &&\n          <Camera\n            ref={(cam) => { this.camera = cam; }}>\n\n            <div id=\"captureContainer\">\n              <button className=\"ot-btn flat\" onClick={this.props.onCancel}>\n                CANCEL\n              </button>\n              <div id=\"captureButton\" onClick={this.takePicture} />\n              <button className=\"ot-btn action\" onClick={this.switchCameraMode}>\n                <svg viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M20 4h-3.17L15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 11.5V13H9v2.5L5.5 12 9 8.5V11h6V8.5l3.5 3.5-3.5 3.5z\"/></svg>\n              </button>\n            </div>\n\n          </Camera>\n        }\n\n        <img id=\"captureImage\" className={!image ? 'hidden': ''}\n          ref={(img) => { this.img = img; }}\n          alt=\"\"\n        />\n\n        { image && \n          <div id=\"captureContainer\">\n            <button className=\"ot-btn flat\" onClick={this.handleRepeat}>\n              REPEAT\n            </button>\n            \n            \n            <button className=\"ot-btn flat\" onClick={() => this.props.onAddPicture(image)}>\n              CONTINUE\n            </button>\n          </div>\n        }\n      </div>\n    );\n  }\n}","import React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\nimport Fullscreen from \"react-full-screen\";\n\nimport './new-post-mobile.css'\nimport NewPostMedia from '../NewPostMedia';\nimport NewPostCamera from './NewPostCamera';\n\nclass NewPostMobile extends React.Component {\n    state = { takingPicture: false }\n\n    constructor(props){\n        super(props);\n        this.inputField = React.createRef();\n    }\n\n    componentDidMount(){\n        if(this.inputField){\n            this.inputField.current.textarea.focus();\n        }\n    }\n\n    closeCamera = () => {\n        this.props.onCloseCamera();\n        if(this.inputField){\n            this.inputField.current.textarea.focus();\n        }\n    }\n\n    handleAddPicture = (picture) => {\n        this.closeCamera();\n        this.props.onAddPicture(picture);\n    }\n\n    render() { \n        const { takingPicture, posting, user, content, videos, images } = this.props;\n        return (\n            <React.Fragment>\n                { takingPicture && \n                    <Fullscreen\n                        enabled={takingPicture}>\n                        <NewPostCamera\n                            onCancel={this.closeCamera}\n                            onAddPicture={this.handleAddPicture} /> \n                    </Fullscreen>\n                }\n                <div className={'ot-new-post-mobile ' + ( posting ? 'posting ' : ' ')}>\n                    <div className=\"ot-new-post-mobile-nav layout center\">\n                        <button className=\"ot-btn action\" onClick={this.props.onBackClicked}>\n                            <svg viewBox=\"0 0 24 24\"><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"/></svg>\n                        </button>\n\n                        <span>New Post</span>\n\n                        <span className=\"flex\"></span>\n\n                        <button className=\"ot-btn flat\" onClick={this.props.onSubmitClicked}>\n                            SEND\n                        </button>\n                    </div>\n\n                    <div className=\"ot-new-post-mobile-content\">\n                        <div className=\"ot-new-post-wrapper layout\">\n                            <div className=\"ot-dp\">\n                                <img src={user.dp} alt=\"\"/>\n                            </div>\n\n                            <TextareaAutosize\n                                ref={this.inputField} \n                                placeholder=\"Share your inisights...\" className=\"ot-new-post-text\" rows={1}\n                                value={content}\n                                onChange={this.props.onChange}\n                                onKeyUp={this.props.onKeyUp} />\n\n                        </div>\n                        \n                        <NewPostMedia\n                            readonly\n                            token={user.token}\n                            videos={videos}\n                            images={images}\n                            onRemoveImage={this.props.onRemoveImage}\n                            onRemoveVideo={this.props.onRemoveVideo} />\n                    </div>\n                    \n                    <div className=\"ot-new-post-mobile-actions layout center-center\">\n                        <input type=\"file\" id=\"mobileImages\" onChange={this.props.onFilesPicked}/>\n                        <label className=\"ot-btn flat\" htmlFor=\"mobileImages\">\n                            {/* <svg viewBox=\"0 0 24 24\"><path d=\"M19 7v2.99s-1.99.01-2 0V7h-3s.01-1.99 0-2h3V2h2v3h3v2h-3zm-3 4V8h-3V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-8h-3zM5 19l3-4 2 3 3-4 4 5H5z\"/></svg> */}\n                            ADD FILES\n                        </label>\n                        &emsp;&emsp;\n                        <button className=\"ot-btn flat\" onClick={this.props.onOpenCamera}>\n                            {/* <svg viewBox=\"0 0 24 24\"><path d=\"M19 7v2.99s-1.99.01-2 0V7h-3s.01-1.99 0-2h3V2h2v3h3v2h-3zm-3 4V8h-3V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-8h-3zM5 19l3-4 2 3 3-4 4 5H5z\"/></svg> */}\n                            TAKE PICTURE\n                        </button>\n                    </div>\n                </div>\n            </React.Fragment> \n        );\n    }\n}\n \nexport default NewPostMobile;","import React from 'react';\n\nimport './new-post.css';\n\nimport { slice } from 'lodash'\n\nimport axios, { post as aPost } from 'axios';\n\nimport PostVideo, { _parseYoutubeURL, _getEmbedUrl } from \"../PostItem/PostMedia/PostVideo\";\n\nimport TextareaAutosize from 'react-autosize-textarea';\nimport NewPostMobile from \"./NewPostMobile\";\nimport NewPostMedia from \"./NewPostMedia\";\n\nimport { notification, notify } from '../../Notifications';\nimport { API_BASE_URL } from '../../constants';\n\nconst MAX_IMAGE_COUNT = 5;\nclass NewPost extends React.Component {\n    state = { creatingOnMobile: false, takingPicture: false, posting: false, dragover: false, focused: false, content: '', images: [], videos: [] }\n\n    constructor(props){\n        super(props);\n        this.wrapper = React.createRef();\n    }\n\n    componentDidMount(){\n        window.addEventListener(\"dragover\", this.FileDragHover, false);\n        window.addEventListener(\"dragleave\", this.FileDragHover, false);\n        window.addEventListener(\"drop\", this.FileSelectHandler, false);\n\n        this._isMounted = true;\n        window.onpopstate = () => {\n            console.log(\"State popped!\");\n            if(this._isMounted) {\n                const { hash } = window.location;\n                console.log(\"Popstate hash: \", hash, hash.indexOf('creatingOnMobile'));\n                if(hash.indexOf('creatingOnMobile') === -1 && this.state.creatingOnMobile)\n                    this.setState({creatingOnMobile: false})\n\n                if(hash.indexOf('takingPicture') === -1 && this.state.takingPicture)\n                    this.setState({takingPicture: false})\n            }\n        }\n    }\n\n    FileDragHover = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const hovering = e.type !== \"dragleave\" && e.type !== \"drop\";\n        \n        setTimeout(() => {\n            this.setState({dragover: hovering});\n        }, 20);\n    }\n\n    FileSelectHandler = (e) => {\n        this.FileDragHover(e);\n    \n        var files = e.target.files || e.dataTransfer.files;\n    \n        if(!files || !files.length)\n            return;\n    \n        this.processFiles(files);\n    }\n\n    openCamera = () => {\n        console.log(\"Opening camera....\");\n        window.history.pushState({takingPicture: true}, 'takingPicture', '#creatingOnMobile/takingPicture');\n        this.setState({takingPicture: true})\n    }\n\n    closeCamera = () => {\n        window.history.back();\n        this.setState({takingPicture: false});\n    }\n\n    imageLoaded = (image, index, src) => {\n        let new_images = [...this.state.images]\n\n        image.src = src;\n        image.loading = false;\n\n        new_images.splice(index, 1, image);\n\n        this.setState({ images: new_images });\n    }\n    \n    imageUpLoaded = (image, index, res) => {\n        let new_images = [...this.state.images]\n\n        image.id = res.id;\n        image.photo = res.photo;\n\n        new_images.splice(index, 1, image);\n\n        this.setState({ images: new_images });\n    }\n    \n    videoUpLoaded = (res) => {\n        let new_videos = [...this.state.videos];\n        let video = new_videos[0];\n        video.id = res.id;\n\n        this.setState({ videos: [video] });\n    }\n    \n    removeVideo = () => {\n        this.setState({ videos: [] });\n    }\n    \n    removeImage = (index) => {\n        let new_images = [...this.state.images]\n\n        new_images.splice(index, 1);\n\n        this.setState({ images: new_images });\n    }\n\n    handleAddPicture = (pic) => {\n        if(this.state.images.length === MAX_IMAGE_COUNT){\n            notify( notification(`You can not upload more than ${MAX_IMAGE_COUNT} images`) );\n            return;\n        }\n\n        const id = 'ot-temp-id' + Math.random().toString(36).substr(2, 5);\n        pic.lastModifiedDate = new Date();\n        pic.name = 'ot-file-' + Math.random().toString(36).substr(2, 5);\n        this.setState({ images: [...this.state.images, { id, file: pic, loading: true, src: \"\"}] });\n    }\n\n    processFiles = (files) => {\n        const valid_files = Array.from(files).filter(f => f.type.indexOf(\"image\") !== -1);\n        const images = valid_files.map( f => { \n            const id = 'ot-temp-id' + Math.random().toString(36).substr(2, 5);\n            return { id, file: f, loading: true, src: \"\"}; \n        });\n\n        let diff = MAX_IMAGE_COUNT - this.state.images.length;\n        if(diff < 0)\n            diff = 0;\n        \n        if(diff < images.length){\n            notify( notification(`You can not upload more than ${MAX_IMAGE_COUNT} images`) )\n        }\n        this.setState({ images: this.state.images.concat(slice(images, 0, diff)) });\n        \n        Array.from(files).filter(f => f.type.indexOf(\"image\") === -1)\n            .forEach( f => {\n                let fname = f.name.substr(0, 15).trim();\n                fname += f.name.length > 15 ? '...' : '';\n                notify( notification(`<strong>${fname}</strong> is not an image`) )\n            });\n    }\n\n    setFocus = (state, fromClick) => {\n        if(!fromClick)\n            this.setState({focused: state});\n        \n        if(state && fromClick && window.innerWidth < 541){\n            this.openMobileCreate();\n        }\n    }\n\n    openMobileCreate = () => {\n        window.history.pushState({creating: true}, 'creating', '#creatingOnMobile');\n        this.setState({creatingOnMobile: true})\n    }\n\n    closeMobileCreate = () => {\n        window.history.back();\n        this.setState({creatingOnMobile: false})\n    }\n    \n    handleChange = (event) => {\n        let content = event.target.value;\n        const video_index = content.indexOf(\"https\");\n        const src = content.substr(video_index, content.length);\n\n        this.setState({content}, () => {\n            if(video_index !== -1 && _parseYoutubeURL(src)){\n                const id = 'ot-temp-id' + Math.random().toString(36).substr(2, 5);\n                const videos = [ { id, video: src } ];\n                content = content.replace(src, \"\");\n\n                this.setState({ content, videos });\n            }\n        });\n    }\n    \n    handleKeyup = (event) => {\n        if(event.key === 'Enter' && this.state.content.length)\n            this.submitClicked();\n    }\n\n    sendPost = (url, formData, params) => {\n        const config = {\n            headers: {\n                'content-type': 'application/x-www-form-urlencode'\n            },\n            params\n        }\n        return aPost(url, formData, config)\n    }\n\n    submitClicked = async () => {\n        this.setState({posting: true})\n\n        let form_data = new FormData();\n        form_data.append('content', this.state.content);\n\n        if(this.state.images.length){\n            await this.state.images.map( i => { \n                i.photo = i.file;\n                console.log(i.id);\n                form_data.append('photo_list', i.id);\n                return i.id;\n            });\n        }\n        \n        if(this.state.videos.length && !this.state.images.length){\n            const video = this.state.videos[0];\n            // if(video.id)\n            //     form_data.append('video_list', video.id);\n            // else\n            //     form_data.set('content', this.state.content + video);\n\n            form_data.set('content', this.state.content + video.video);\n        }\n\n        const params = { token: this.props.user.token };\n        this.sendPost(API_BASE_URL + '/publish_post/', form_data, params)\n            .then(({data}) => {\n                this.setState({posting: false});\n                const response = data[0];\n                console.log(\"Submit post result: \", response);\n                // this.props.onImageUpLoaded( response );\n\n                if(response.status){\n                    this.props.onNewPost(response.post);\n                    if(this.state.creatingOnMobile){\n                        this.closeMobileCreate();\n                    }\n                    this.setState({ posting: false, dragover: false, focused: false, content: '', images: [], videos: [] });\n                }\n            })\n            .catch((error) => {\n                this.setState({posting: false});\n                notify( notification(`Error submitting post`) )\n\n                let err = \"\";\n                if (error.response) {\n                    err = error.response.data;\n                } else if (error.request) {\n                    err = error.request;\n                } else {\n                    err = error.message;\n                }\n\n                console.error(\"Submit post Error\", err);;\n            });\n    }\n\n    render() {\n        const { user } = this.props;\n        const { creatingOnMobile, takingPicture, posting, dragover, focused, content, images, videos } = this.state;\n        const has_media = images.length || videos.length;\n        const media_type = has_media ? images.length ? 'image' : 'video' : null;\n\n        return (\n            <React.Fragment>\n                { creatingOnMobile && \n                    <NewPostMobile\n                        user={user}\n                        content={content}\n                        images={images} \n                        videos={videos}\n                        takingPicture={takingPicture}\n                        posting={posting}\n                        onChange={this.handleChange}\n                        onKeyUp={this.handleKeyup}\n                        onFilesPicked={this.FileSelectHandler}\n                        onRemoveImage={this.removeImage}\n                        onRemoveVideo={this.removeVideo}\n                        onSubmitClicked={this.submitClicked}\n                        onBackClicked={this.closeMobileCreate}\n                        onOpenCamera={this.openCamera}\n                        onCloseCamera={this.closeCamera}\n                        onAddPicture={this.handleAddPicture} />\n                }\n\n                <div ref={this.wrapper} className={ 'ot-new-post ' + ( posting ? 'posting ' : ' ') + ( dragover ? images.length ? 'dragging has-images' : 'dragging' : '' ) }>\n                    <div className=\"ot-new-post-wrapper layout\">\n                        <div className=\"ot-dp\">\n                            <img src={user.dp} alt=\"\"/>\n                        </div>\n\n                        <TextareaAutosize \n                            placeholder=\"Share your inisights...\" className=\"ot-new-post-text\" rows={1}\n                            onClick={ () => this.setFocus(true, true) }\n                            onFocus={ () => this.setFocus(true) }\n                            onBlur={ () => this.setFocus(false) }\n                            onChange={this.handleChange}\n                            onKeyUp={this.handleKeyup}\n                            value={content} />\n                    </div>\n\n                    <NewPostMedia\n                        token={user.token}\n                        videos={videos}\n                        images={images}\n                        onImageLoaded={this.imageLoaded}\n                        onImageUploaded={this.imageUpLoaded}\n                        onRemoveImage={this.removeImage}\n                        onVideoUploaded={this.videoUpLoaded}\n                        onRemoveVideo={this.removeVideo} />\n\n                    <div className={'layout end-justified ot-new-post-button-wrapper' + (content.length || focused ? ' visible' : '')}>\n                        <button className={'ot-btn flat' + (!content.length ? ' disabled' : '') }\n                            onClick={ this.submitClicked }>\n                            POST\n                        </button>\n                    </div>\n                </div>\n\n                <button className=\"ot-btn fab ot-post-creator-fab\" onClick={this.openMobileCreate}>\n                    <svg viewBox=\"0 0 24 24\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/></svg>\n                </button>\n            </React.Fragment> \n        );\n    }\n}\n \nexport default NewPost;","import React from 'react';\n\nimport \"./loader.css\";\n\nconst Loader = ( props ) => {\n    const { thin } = props;\n    return ( \n        <div className={'ot-loader ' + (thin ? 'thin' : '')}><div></div><div></div><div></div><div></div></div>\n    );\n}\n \nexport default Loader;","import React from 'react';\nimport axios from 'axios';\n\nimport './post-list.css';\n\nimport sample_posts from './posts';\n\nimport { API_BASE_URL } from '../constants';\n\nimport PostItem from \"./PostItem\";\nimport NewPost from './NewPost';\nimport { notification, notify } from '../Notifications';\nimport Loader from '../components/Loader';\n\nclass PostList extends React.Component {\n    state = { initial_fetch: false, posts: [] };\n\n    componentDidMount(){\n        const { user, posts, readonly } = this.props;\n        // this.setState({user, posts: sample_posts, initial_fetch: true});\n\n        if(!readonly){\n            this.setState({token: user.token}, () => {\n                this.fetchUserPosts();\n            });\n        }else if(user){\n            this.setState({posts, initial_fetch: true})\n        }\n    }\n\n    fetchUserPosts = () => {\n        // console.log(`Fetching posts for ${id}, with token ${token}`);\n        // setTimeout(() => {\n        //     this.setState({posts: sample_posts, initial_fetch: true});\n        // }, 2000);\n        const params = { token: this.state.token };\n            \n        axios.get(API_BASE_URL + '/wall/', { params })\n        .then(({data}) => {\n            console.log(\"Fetch posts result\", data);\n            this.setState({posts: data, initial_fetch: true})\n        })\n        .catch((err) => {\n            console.error(\"Fetch posts Error\", err);\n            this.setState({initial_fetch: true});\n        });\n\n    }\n\n    toggleCommentLiked = (post, index, comment_index) => {\n        let comment = JSON.parse(JSON.stringify(post.comments[comment_index]));\n        const isLiked = comment.is_liked;\n        let new_posts = [...this.state.posts]\n\n\n        comment.is_liked = !isLiked;\n        // comment.total_likes += isLiked ? -1 : 1;\n        post.comments.splice(comment_index, 1, comment);\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const url = API_BASE_URL + ( isLiked ? '/unlike_comment/' : '/like_comment/' );\n        const params = { token: this.state.token, comment_id: comment.id };\n        axios.get(url, { params })\n            .then(({data}) => {\n                const response = data[0];\n                console.log(\"Toggle Comment like response\", response);\n                if(!response.status){\n                    comment.is_liked = isLiked;\n                    post.comments.splice(comment_index, 1, comment);\n                    \n                    new_posts.splice(index, 1, post);\n                    this.setState({ posts: new_posts });\n                }\n            })\n            .catch((error) => {\n                console.error(\"Toggle comment like Error\", error);\n                comment.is_liked = isLiked;\n                post.comments.splice(comment_index, 1, comment);\n                \n                new_posts.splice(index, 1, post);\n                this.setState({ posts: new_posts });\n            });\n    }\n    \n    toggleLiked = (post, index) => {\n        const isLiked = post.is_liked;\n        let new_posts = [...this.state.posts]\n\n        post.is_liked = !isLiked;\n        post.total_likes += isLiked ? -1 : 1;\n\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const url = API_BASE_URL + ( isLiked ? '/unlike_post/' : '/like_post/' );\n        const params = { token: this.state.token, post_id: post.id };\n        axios.get(url, { params })\n            .then(({data}) => {\n                const response = data[0];\n                if(!response.status){\n                    post.is_liked = isLiked;\n                    \n                    new_posts.splice(index, 1, post);\n                    this.setState({ posts: new_posts });\n                }\n            })\n            .catch((error) => {\n                console.error(\"Toggle like Error\", error);\n                post.is_liked = isLiked;\n                \n                new_posts.splice(index, 1, post);\n                this.setState({ posts: new_posts });\n            });\n    }\n    \n    newPost = (post) => {\n        let new_posts = [...this.state.posts];\n        new_posts.unshift(post);\n\n        console.log(post, new_posts);\n        notify( notification(`Your post has been submitted`) )\n\n        this.setState({ posts: new_posts });\n    }\n\n    addComment = (post, index, content) => {\n        let post_copy = {...post}\n        const comment_index = post_copy.comments.length;\n        \n        console.log(post.comments.length);\n        post.total_comments += 1;\n        post.total_commenets += 1;\n\n        const comment = {\n            id: 'ot-temp-id' + Math.random().toString(36).substr(2, 5),\n            content,\n            published_at: new Date(),\n            is_liked: false,\n            publisher: this.props.user\n        }\n\n        post.comments.push(comment);\n\n        let new_posts = [...this.state.posts]\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const params = { token: this.state.token };\n\n        axios({\n            method: 'POST',\n            url: API_BASE_URL + '/publish_comment/',\n            params,\n            data: { post_id: post.id, content }\n        })\n        .then(({data}) => {\n            const response = data[0];\n            console.log(\"Comment result: \", response);\n            \n            if(!response.status){\n                post.comments.splice(comment_index, 1);\n                post.total_comments -= 1;\n                post.total_commenets -= 1;\n            }else{\n                comment.id = comment.id.replace('ot-temp-id', '');\n            }\n\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        })\n        .catch((error) => {\n            let err = \"\";\n            if (error.response) {\n                err = error.response.data;\n            } else if (error.request) {\n                err = error.request;\n            } else {\n                err = error.message;\n            }\n\n            console.error(\"Comment Error\", err);\n\n            post.comments.splice(comment_index, 1);\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        });\n    }\n    \n    showComments = (post, index) => {\n        post.fetching_comments = true;\n\n        let new_posts = [...this.state.posts]\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const params = { token: this.state.token, post_id: post.id };\n\n        axios.get(API_BASE_URL + '/comments/', { params })\n        .then(({data}) => {\n            const response = data[0];\n            console.log(\"Post Comments result: \", response);\n            \n            if(response.status){\n                post.comments = data;\n            }\n\n            post.fetching_comments = false;\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        })\n        .catch((error) => {\n            let err = \"\";\n            if (error.response) {\n                err = error.response.data;\n            } else if (error.request) {\n                err = error.request;\n            } else {\n                err = error.message;\n            }\n\n            console.error(\"Post Comments Error\", err);\n\n            post.fetching_comments = false;\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        });\n    }\n\n    render() { \n        const { scrolled, posts, initial_fetch } = this.state;\n        const { user, readonly } = this.props;\n\n        return ( \n            <div className={ 'ot-post-list-wrapper ' + ( scrolled ? 'scrolled' : '' )}>\n                { !readonly && <NewPost user={ user } onNewPost={ this.newPost } /> }\n            \n                <div className=\"ot-post-list\">\n                    {!initial_fetch && <div className=\"layout center-justified\"><Loader/></div>}\n\n                    {initial_fetch && (\n                        <React.Fragment>\n                            { posts.map( (post, index) => \n                                <PostItem key={post.id} post={post} user={user}\n                                    onToggleLiked={ () => this.toggleLiked(post, index) }\n                                    onNewComment={ (comment) => this.addComment(post, index, comment) }\n                                    onToggleCommentLiked={ (comment_index) => this.toggleCommentLiked(post, index, comment_index) }\n                                    onShowComments={ () => this.showComments(post, index) }\n                                    onViewUser={() => this.props.onViewUser(post.publisher)} />\n                            )}\n                        </React.Fragment>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default PostList;","import React from 'react';\nimport Observer from '@researchgate/react-intersection-observer';\n\nimport \"./bottom-sheet.css\";\n\nclass BottomSheet extends React.Component {\n    state = { visible: false, fixed: false };\n\n    componentDidMount(){\n        this.setState({visible: true});\n    }\n\n    handleIntersection = (event) => {\n        console.log(\"Intersection Event\", event);\n        if(event.isIntersecting){\n            this.setState({fixed: true});\n        }else{\n            this.setState({fixed: false});\n        }\n    }\n\n    handleClose = () => { \n        this.setState({visible: false});\n\n        setTimeout(() => {\n            if(this.props.onClose) \n                this.props.onClose()\n        }, 350);\n    }\n\n    render() { \n        const options = {\n            onChange: this.handleIntersection,\n            root: '.ot-bottom-sheet',\n            rootMargin: `0% 0% -${window.innerHeight}px`,\n        };\n        const { visible, fixed } = this.state;\n        let {contentLoaded, peekHeight} = this.props;\n        if(!peekHeight)\n            peekHeight = 300;\n\n        const tx = window.innerHeight - (peekHeight + 32);\n\n        return (\n            <div className={'ot-bottom-sheet ' + ( visible ? 'visible ' : '' ) + ( fixed ? 'fixed ' : '') + ( contentLoaded ? 'content-loaded' : '' ) }>\n                <div className=\"ot-bottom-sheet-bg\" onClick={ this.handleClose }></div>\n                <Observer {...options}>\n                    <div className=\"ot-bottom-sheet-content\"\n                        style={ { transform: `translateY( ${(tx)}px)` } }>\n                        { this.props.children }\n                    </div>\n                </Observer>\n            </div>\n        );\n    }\n}\n \nexport default BottomSheet;","import React from 'react';\n\nimport \"./profile.css\";\nimport axios from 'axios';\nimport { API_BASE_URL } from '../constants';\nimport BottomSheet from '../components/BottomSheet';\nimport Loader from '../components/Loader';\nimport PostList from '../PostList';\n\nclass UserProfile extends React.Component {\n    state = { user: {}, profileLoaded: false, postsLoaded: false }\n\n    componentDidMount(){\n        this.setState({user: this.props.user});\n        this.fetchUserProfile();\n        this.fetchUserPosts();\n    }\n\n    fetchUserProfile = () => {\n        const { user, sessionUser } = this.props;\n        const token = sessionUser.token;\n        const params = { token, user_id: user.id };\n        axios.get(API_BASE_URL + '/profile/', { params })\n            .then(({data}) => {\n                const res = data[0];\n                console.log(\"Fetch user profile result\", data);\n                this.setState({ profileLoaded: true, user: {...this.state.user, ...res.user}})\n            })\n            .catch((err) => {\n                console.error(\"Fetch user profile Error\", err);\n                this.setState({initial_fetch: true});\n            });\n    }\n   \n    fetchUserPosts = () => {\n        const { user, sessionUser } = this.props;\n        const token = sessionUser.token;\n        const params = { token, user_id: user.id };\n        axios.get(API_BASE_URL + '/user_wall/', { params })\n            .then(({data}) => {\n                console.log(\"Fetch user posts result\", data);\n                if(this.props.onPostsLoaded){\n                    this.props.onPostsLoaded();\n                }\n                this.setState({ postsLoaded: true, user: {...this.state.user, posts: data}})\n            })\n            .catch((err) => {\n                console.error(\"Fetch user posts Error\", err);\n            });\n    }\n\n    render() { \n        const { sessionUser } = this.props;\n        const { user, profileLoaded, postsLoaded } = this.state;\n        const loading = !profileLoaded && !postsLoaded;\n        const { display_name, dp, posts } = user;\n        \n        return (\n            <div className=\"ot-user-profile\">\n                <div className=\"ot-user-profile-title layout vertical center\">\n                    <div className=\"ot-dp\">\n                        <img src={dp} alt=\"\"/>\n                    </div>\n                    <h5>{display_name}</h5>\n\n                    { sessionUser.id === user.id &&  \n                        <button className=\"ot-btn logout-btn\" onClick={this.props.onLogout}>\n                            LOGOUT\n                        </button>\n                    }\n                    \n                    { loading && <Loader thin /> }\n\n\n                    { profileLoaded &&\n                        <React.Fragment>\n                            <div className=\"user-stats layout center-center\">\n                                <div className=\"user-stat\">\n                                    <div className=\"number\">\n                                        { user.followers }\n                                    </div>\n                                    <div className=\"label\">\n                                        Followers\n                                    </div>\n                                </div>\n                                <div className=\"user-stat\">\n                                    <div className=\"number\">\n                                        { user.following }\n                                    </div>\n                                    <div className=\"label\">\n                                        Following\n                                    </div>\n                                </div>\n                                <div className=\"user-stat\">\n                                    <div className=\"number\">\n                                        { user.friends }\n                                    </div>\n                                    <div className=\"label\">\n                                        Friends\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            {  sessionUser.id !== user.id &&  \n                                <button className=\"ot-btn fla\">\n                                    FOLLOW\n                                </button>\n                            }\n                        </React.Fragment>\n                    }\n                </div>\n                \n                { postsLoaded && <PostList readonly user={sessionUser} posts={ posts } /> }\n            </div>\n        );\n    }\n}\n \nexport default UserProfile;","import React from 'react';\nimport './app.css';\n\nimport axios from \"axios\";\n\nimport Notifications, { notify, notification } from '../Notifications';\n\nimport Login from '../Login';\nimport Header from '../Header';\nimport PostList from '../PostList';\nimport UserProfile from '../UserProfile';\nimport BottomSheet from '../components/BottomSheet';\n\n// const profileUser = {display_name: \"Daniel Kindimba\", id: 290, dp: \"https://olbongo.blob.core.windows.net/olbongo/stuff_images/2018/12/01/takescripter.jpg\"}\n// const profileUser = {\"status\":\"wacky\",\"display_name\":\"walter\",\"id\":10,\"dp\":\"https://olbongo.blob.core.windows.net/olbongo/CACHE/images/stuff_images/2017/04/28/20170416_121348_s8ddhse/444c59972c18921ada293c2c40bfe2a4.png\",\"token\":\"51w-fe20639ab5c964bb1c15:@olb:dXE=\"}\nclass App extends React.Component {\n    state = {user: {}, profileUser: null, userProfilePostsLoaded: false, user_fetched: false};\n\n    componentWillMount(){\n        this.fetchUser();\n    }\n\n    fetchUser = async () => {\n        const session_user = await localStorage.getItem('ot-user');\n        this.setState({user_fetched: true});\n\n        if(session_user != null){\n        this.setState({user: JSON.parse(session_user)});\n        }\n    }\n\n    handleProfilePostsLoaded = () => {\n        this.setState({userProfilePostsLoaded: true});\n    }\n\n    login = ({username, password}) => {\n        const params = {username, password}\n        axios({\n        method: 'POST',\n        url: \"https://www.olbongo.com/api/login/\",\n        params\n        })\n        .then( response => {\n            const result = response.data;\n\n            if(!result.status){    \n                notify( notification(\"Wrong credentials!\") )\n                return;\n            }\n\n            let { user, token } = result;\n            user.token = token;\n            localStorage.setItem('ot-user', JSON.stringify(user));\n            \n            this.setState({user});\n        })\n        .catch( err => {\n            console.error(\"Login Error\", err);\n            notify( notification(\"Wrong credentials!\") )\n        });\n    }\n\n    logout = () => {\n        localStorage.removeItem('ot-user');\n        this.setState({profileUser: null, user_fetched: true, user: null});\n    }\n\n    closeProfileUser = () => {\n        this.setState({profileUser: null});\n    }\n    \n    viewProfileUser = ( user ) => {\n        if(window.innerWidth < 541){\n            this.setState({profileUser: user});\n        }\n    }\n  \n    render() { \n        const { user, user_fetched, profileUser, userProfilePostsLoaded } = this.state;\n        const user_logged_in = user && user.id && user.token;\n        return (\n            <div className=\"ot-app-wrapper\" context=\"counter1\">\n                <Notifications />\n                { user_logged_in && ( \n                    <Header dp={user.dp} onViewProfile={ () => this.viewProfileUser(user) } />\n                )}\n\n                <main>\n                    { !user_logged_in && user_fetched && ( \n                        <Login user={user} onLogin={this.login} /> \n                    )}\n\n                    { user_logged_in && \n                        <React.Fragment>\n                            <PostList\n                                user={ user }\n                                onViewUser={this.viewProfileUser} />\n                            \n                            { profileUser && \n                                <BottomSheet contentLoaded={userProfilePostsLoaded} peekHeight={320} onClose={this.closeProfileUser}>\n                                    <UserProfile onLogout={this.logout} onPostsLoaded={this.handleProfilePostsLoaded} sessionUser={ user } user={profileUser} />\n                                </BottomSheet>\n                            }\n                        </React.Fragment>\n                    }\n                </main>\n            </div>\n        );\n    }\n}\n\n// App.contextType = MyContext\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.43803f22.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.43803f22.png\";"],"sourceRoot":""}