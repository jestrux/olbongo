{"version":3,"sources":["Notifications/NotificationItem.jsx","Notifications/index.jsx","Login/index.jsx","constants.js","Popups/index.jsx","Home/PostList/PostItem/PostMedia/PostImages.jsx","Home/PostList/PostItem/PostMedia/PostVideo.jsx","Home/PostList/PostItem/PostMedia/index.jsx","Utils/index.jsx","Home/PostList/PostItem/PostComments/PostComment.jsx","Home/PostList/PostItem/PostComments/index.jsx","Home/PostList/PostItem/PostCommenter/index.jsx","Home/PostList/PostItem/index.jsx","Home/PostList/NewPost/NewPostImage/index.jsx","Home/PostList/NewPost/NewPostVideo/index.jsx","Home/PostList/NewPost/NewPostMedia.jsx","Home/PostList/NewPost/NewPostMobile/NewPostCamera/Camera.jsx","Home/PostList/NewPost/NewPostMobile/NewPostCamera/index.jsx","Home/PostList/NewPost/NewPostMobile/index.jsx","Home/PostList/NewPost/index.jsx","components/Loader/index.jsx","Home/PostList/EditPost/index.jsx","Home/PostList/index.jsx","components/Header/index.jsx","Home/index.jsx","UserProfile/index.jsx","components/BottomSheet/index.jsx","App/index.jsx","serviceWorker.js","index.js","Login/logo.png","components/logo.png"],"names":["NotificationItem","props","notification","message","Object","objectWithoutProperties","react_default","a","createElement","className","dangerouslySetInnerHTML","__html","_len","arguments","length","rest","Array","_key","options","CustomEvent","detail","notify","event","document","dispatchEvent","Notifications","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","notifications","showNotification","_notification","setState","toConsumableArray","concat","setTimeout","_notifications","filter","n","id","wrapper","React","createRef","_this2","addEventListener","e","Math","random","toString","substr","reverse","map","i","Notifications_NotificationItem","key","Component","Login","username","password","inputChanged","defineProperty","target","name","value","_this$state","isValid","autoComplete","src","logo","height","alt","autoFocus","required","type","onChange","htmlFor","onClick","onLogin","API_BASE_URL","confirm","title","action","callback","window","PostImage","images","templateClass","extras","shown_image_count","slice","photo","_parseYoutubeURL","str","test","match","PostVideo","video","is_youtube_url","embed","url","_getEmbedUrl","frameBorder","allow","allowFullScreen","controls","PostMedia","videos","PostImages","PostMedia_PostVideo","FavoritedIcon","fill","viewBox","d","FavoriteIcon","FavToggle","Fragment","faved","Utils_FavoritedIcon","Utils_FavoriteIcon","PostComment","comment","publisher","published_at","author","content","is_liked","_ref","dp","display_name","indexOf","onToggleLiked","Utils_FavToggle","PostComments","_this$props","comments","loading","index","PostComments_PostComment","onToggleCommentLiked","PostCommenter","handleChange","handleKeyup","sendComment","JSON","parse","stringify","replace","onNewComment","animate_icon","user","animation_duration","react_autosize_textarea_lib_default","placeholder","rows","onKeyUp","lib","width","duration","rotation","PostItem","post","fetching_comments","total_likes","total_comments","total_commenets","owned","like_text","comment_text","onViewUser","xmlns","onEditPost","onDeletePost","PostItem_PostMedia","onShowComments","PostItem_PostComments","PostItem_PostCommenter","NewPostImage","was_setup","processImage","_callee","image","worker","regenerator_default","wrap","_context","prev","next","workerize","load","sent","onImageLoaded","stop","file","uploadImage","params","formData","FormData","append","config","headers","content-type","token","fileUpload","then","_ref2","response","data","console","log","onImageUploaded","catch","error","err","request","is_temp","onRemoveImage","NewPostVideo","videoUpload","onRemoveVideo","NewPostMedia","readonly","NewPost_NewPostVideo","onVideoUploaded","res","NewPost_NewPostImage","new_image","Camera","facingMode","setup","audio","navigator","mediaDevices","getUserMedia","mediaStream","srcObject","play","getVideoTracks","mediaStreamTrack","ImageCapture","takePhoto","_this3","style","children","ref","defaultProps","NewPostCamera","takePicture","camera","capture","blob","URL","createObjectURL","img","onload","revokeObjectURL","switchCameraMode","switchMode","handleRepeat","NewPostCamera_Camera","cam","onCancel","onAddPicture","NewPostMobile","takingPicture","closeCamera","onCloseCamera","inputField","current","textarea","focus","handleAddPicture","picture","posting","editting","dist_default","enabled","NewPostCamera_NewPostCamera","onBackClicked","onSubmitClicked","NewPost_NewPostMedia","onFilesPicked","onOpenCamera","MAX_IMAGE_COUNT","NewPost","creatingOnMobile","dragover","focused","post_id","FileDragHover","stopPropagation","preventDefault","hovering","FileSelectHandler","files","dataTransfer","processFiles","openCamera","history","pushState","back","imageLoaded","new_images","splice","imageUpLoaded","videoUpLoaded","removeVideo","removeImage","pic","lastModifiedDate","Date","from","f","diff","forEach","fname","trim","setFocus","fromClick","innerWidth","openMobileCreate","creating","closeMobileCreate","onCancelEditting","video_index","submitClicked","sendPost","aPost","asyncToGenerator","mark","form_data","set","status","onNewPost","_this$props$post","_isMounted","hash","location","saving","NewPost_NewPostMobile","onFocus","onBlur","Loader","thin","EditPost","PostList_NewPost","PostList","initial_fetch","fetching","page","postToEdit","posts","fetchUserPosts","axios","get","toggleCommentLiked","comment_index","isLiked","new_posts","comment_id","toggleLiked","_ref3","newPost","unshift","addComment","objectSpread","push","method","_ref4","showComments","editPost","savePost","cancelEditPost","deletePost","accepted","_ref5","handleReachedBottom","isIntersecting","scrolled","_this$props2","root","rootMargin","PostList_EditPost","PostList_PostItem","components_Loader","es","Header","Home","onViewProfile","components_Header","Home_PostList","UserProfile","profileLoaded","postsLoaded","fetchUserProfile","sessionUser","user_id","onPostsLoaded","onLogout","followers","following","friends","BottomSheet","visible","closing","fixed","handleIntersection","handleClose","closeBottomSheet","onClose","contentWrapper","scrollTop","innerHeight","contentLoaded","peekHeight","tx","transform","App","profileUser","userProfilePostsLoaded","user_fetched","fetchUser","session_user","localStorage","getItem","handleProfilePostsLoaded","login","result","setItem","logout","removeItem","closeProfileUser","viewProfileUser","onpopstate","user_logged_in","context","src_Notifications","src_Login","src_Home","components_BottomSheet","src_UserProfile","Boolean","hostname","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.fc4781df.chunk.js","sourcesContent":["import React from 'react';\n\nconst NotificationItem = (props) => {\n    const { notification } = props\n    const { message, ...options } = notification;\n    return ( \n        <div className=\"notif show\" dangerouslySetInnerHTML={{ __html: message }}></div>\n    );\n}\n \nexport default NotificationItem;","import React from 'react';\n\nimport './notifications.css';\nimport NotificationItem from './NotificationItem';\n\nexport const notification = (message, ...rest) => {\n    const options = rest && rest.length ? rest[0] : {};\n    return new CustomEvent('ot-notification', { detail: { message, options: options } })\n}\n\nexport const notify = ( event ) => {\n    document.dispatchEvent(event);\n}\n\nclass Notifications extends React.Component {\n    state = { notifications: [] }\n    constructor(props){\n        super(props);\n        this.wrapper = React.createRef();\n    }\n\n    componentDidMount(){\n        document.addEventListener('ot-notification', (e) => {\n            const _notification = e.detail;\n            _notification.id = 'ot-notif-' + Math.random().toString(36).substr(2, 5);\n\n            this.showNotification(_notification)\n        }, false);\n    }\n\n    showNotification = (_notification) => {\n        this.setState({ notifications: [ ...this.state.notifications, _notification] }, () => {\n            setTimeout(() => {\n                const _notifications = [...this.state.notifications].filter( ( n ) => n.id !== _notification.id);\n                this.setState({ notifications: _notifications });\n            }, 3000);\n        });\n    }\n\n    render() { \n        const { notifications } = this.state;\n        return ( \n            <div className=\"ot-notifications-wrapper\">\n                { notifications.reverse().map( (n, i) => <NotificationItem key={i} notification={n} />) }\n            </div>\n        );\n    }\n}\n \nexport default Notifications;","import React from 'react';\n\nimport \"./login.css\";\nimport logo from \"./logo.png\";\n\nclass Login extends React.Component {\n    state = { username: \"\", password: \"\" }\n\n    inputChanged = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n    };\n\n    render() { \n        const { username, password } = this.state;\n        const isValid = username.length > 0 && password.length > 0;\n        return (\n            <div className=\"ot-login-page\">\n                <form className=\"ot-login-form\" autoComplete=\"off\">\n                    <div className=\"ot-login-title layout center\">\n                        <img src={logo} height=\"50px\" alt=\"\"/>\n                        Otalk Login\n                    </div>\n\n                    <div className=\"ot-input-box\">\n                        <input autoFocus autoComplete=\"off\" id=\"username\" className={ username.length ? 'valid' : '' }\n                            required type=\"text\" name=\"username\"\n                            value={username} \n                            onChange={this.inputChanged} />\n                        <label htmlFor=\"username\">Username</label>\n                    </div>\n\n                    <div className=\"ot-input-box\">\n                        <input autoComplete=\"off\" id=\"password\" className={ password.length ? 'valid' : '' }\n                            required type=\"password\" name=\"password\"\n                            value={password} \n                            onChange={this.inputChanged} />\n                        <label htmlFor=\"password\">Password</label>\n                    </div>\n\n                    <button type=\"button\" className={ 'ot-btn primary rounded ' + ( !isValid ? 'disabled' : '' ) }\n                        onClick={() => this.props.onLogin({username, password})}>LOGIN</button>\n                </form>\n            </div>\n        );\n    }\n}\n \nexport default Login;","export const LOGIN_URL = \"https://www.olbongo.com/api/login\"\nexport const API_BASE_URL = \"https://www.olbongo.com/api/otalk\"","import React from 'react';\n\nimport './popups.css';\n\nexport const confirm = ( title, message, action, callback ) => {\n    callback(window.confirm(message));\n}\n\nexport const alert = ( title, message ) => {\n    window.alert(message);\n}","import React from 'react';\n\nconst PostImage = ( props ) => {\n    const { images } = props;\n    let templateClass = '';\n    let extras = ''; \n\n    if(images.length > 1){\n        switch (images.length) {\n            case 2:\n                templateClass = 'two';\n                break;\n            case 3:\n                templateClass = 'three';\n                break;\n            case 4:\n                templateClass = 'four';\n                break;\n            case 5:\n                templateClass = 'five';\n                break;\n        \n            default:\n                templateClass = 'four';\n                break;\n        }\n        templateClass += '-image-grid';\n\n        if(images.length > 5)\n            templateClass += ' has-more';\n    \n        extras = images.length > 5 ? images.length - 4 : '';\n    }\n\n    const shown_image_count = images.length > 5 ? 4 : images.length;\n\n    return ( \n        <div className={'ot-post-images ' + templateClass } extras={extras}>\n            {   \n                images.slice(0, shown_image_count).map( i => \n                    <div key={i.id} className=\"ot-post-image\">\n                        <img src={i.photo} alt=\"\"/> \n                    </div>\n                )\n            }\n        </div>\n    );\n}\n \nexport default PostImage;","import React from 'react';\n\nexport function _parseYoutubeURL(str){\n    var pattern = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\n    \n    if(!pattern.test(str)) {\n        return false;\n    } else {\n        var reg = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/\n        return str.match(reg);\n    }\n}\n\nexport function _getEmbedUrl(url) {\n    return `https://www.youtube.com/embed/${url}?rel=0&amp;showinfo=0`;\n}\n\nconst PostVideo = ( props ) => {\n    const { video } = props;\n    const is_youtube_url = video ? _parseYoutubeURL(video.video) : false;\n\n    let url = \"\";\n    let embed = \"\";\n    \n    if(is_youtube_url){\n        url = is_youtube_url[2];\n        embed = _getEmbedUrl(url);\n    }\n\n    return ( \n        <div className={'ot-post-video ' + ( is_youtube_url ? 'for-youtube' : '' )}>\n            { is_youtube_url && <iframe title=\"post video\" src={embed} frameBorder=\"0\" allow=\"autoplay; encrypted-media\" allowFullScreen></iframe> }\n            { video && !is_youtube_url && \n                (\n                    <video controls>\n                        <source src={video.video} />\n                    </video>\n                )\n            }\n        </div>\n    );\n}\n \nexport default PostVideo;","import React from 'react';\n\nimport './post-media.css';\n\nimport PostImages from \"./PostImages\";\nimport PostVideo from \"./PostVideo\";\n\nconst PostMedia = (props) => {\n    const { images, videos } = props;\n\n    return ( \n        <div className=\"ot-post-media\">\n            {/* <PostImages images={images} /> */}\n            {/* <PostVideo videos={videos} /> */}\n            { images.length > 0 && (<PostImages images={images} /> ) }\n            { !images.length && videos.length > 0 && ( <PostVideo video={videos[0]} /> )}\n        </div>\n    );\n}\n \nexport default PostMedia;","import React from 'react';\n\nexport const FavoritedIcon = () => {\n    return (<svg fill=\"#ffa200\" className=\"ot-post-like-icon\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/></svg>);\n}\n \nexport const FavoriteIcon = () => {\n    return (<svg fill=\"#656565\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"/></svg>);\n}\n\nexport const FavToggle = (props) => {\n    return ( \n        <React.Fragment>{ props.faved ? <FavoritedIcon key=\"favorited_icon\" /> : <FavoriteIcon key=\"favorite_icon\" /> }</React.Fragment>\n    );\n}","import React from 'react';\nimport { FavToggle } from '../../../../Utils';\n\nconst PostComment = ( props ) => {\n    const { comment } = props;\n    const { id, published_at, publisher, author, content, is_liked } = comment;\n    const { dp, display_name } = publisher || author;\n\n    return ( \n        <div className={'ot-post-comment layout ' + ( id.toString().indexOf('ot-temp-id') !== -1 ? 'temp' : '' )}>\n            <div className=\"ot-dp small\">\n                <img src={dp} alt=\"\"/>\n            </div>\n            <p>\n                <strong>{ display_name }</strong>&nbsp;\n                <span dangerouslySetInnerHTML={{ __html: content }}></span>\n            </p>\n\n            <button className=\"ot-comment-liker ot-btn action\" onClick={ props.onToggleLiked }>\n                { <FavToggle faved={is_liked} /> }\n            </button>\n        </div>\n    );\n}\n \nexport default PostComment;","import React from 'react';\nimport './post-comments.css';\n\nimport PostComment from \"./PostComment\";\n\nclass PostComments extends React.Component {\n    render() { \n        const { comments, loading } = this.props;\n\n        return ( \n            <div className=\"ot-post-comments\">\n                {comments.length > 0 && (\n                   comments.map( (comment, index) => \n                        <PostComment \n                            key={comment.id} \n                            comment={comment} \n                            onToggleLiked={() => this.props.onToggleCommentLiked(index) } />) \n                        \n                )}\n\n                { loading && (\n                    <span className=\"ot-comments-loader\">\n                        { comments.length > 0 ? 'loading more comments....' : 'loading comments....'}\n                    </span>\n                ) }\n            </div>\n        );\n    }\n}\n \nexport default PostComments;","import React from 'react';\nimport { FavoriteIcon, FavoritedIcon } from '../../../../Utils';\nimport { MorphReplace } from 'react-svg-morph';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\n\nimport './post-commenter.css';\n\nclass PostCommenter extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = { comment: '', animate_icon: true };\n    }\n\n    handleChange = (event) => {\n        this.setState({comment: event.target.value});\n        // const bold = /\\*(.*)\\*/;\n        // const boldeds = value.match(bold);\n        // console.log(value.replace(/\\*([^*]+)\\*/g , '<b>$1</b>'));\n        // // for(var bolded in boldeds) {\n        // //     console.log(bolded, \"\\n\\n\");\n        // // }\n    }\n    \n    handleKeyup = (event) => {\n        if(event.key === 'Enter' && this.state.comment.length)\n            this.sendComment();\n    }\n\n    sendComment = () => {\n        const state_copy = JSON.parse(JSON.stringify(this.state));\n        const comment = state_copy.comment.replace(/\\*([^*]+)\\*/g , '<b>$1</b>');\n        // return console.log(comment);\n        if(comment.length){\n            this.props.onNewComment(comment);\n            this.setState({comment : \"\"});\n        }\n    }\n\n    render(){\n        const { comment, animate_icon } = this.state;\n        // const formatted_comment = comment.replace(/\\*([^*]+)\\*/g , '<b>$1</b>');\n        const { user, faved } = this.props;\n\n        const animation_duration = animate_icon ? 500 : 0;\n\n        return (\n            <div className=\"ot-post-commenter layout center\">\n                <div className=\"ot-dp small self-start\">\n                    <img src={user.dp} alt=\"\" />\n                </div>\n\n                <TextareaAutosize \n                    placeholder=\"Write a Comment\" \n                    className=\"flex input\" rows={1}\n                    onChange={this.handleChange}\n                    onKeyUp={this.handleKeyup}\n                    value={comment} />\n\n                {/* <ContentEditable\n                    tagName=\"div\"\n                    className=\"flex input\"\n                    content={comment}\n                    editable={true}\n                    multiLine={false}\n                    onChange={this.handleChange} /> */}\n\n                {/* <input className=\"flex\" type=\"text\" placeholder=\"Write a Comment\" \n                    value={comment} \n                    onChange={this.handleChange}\n                    onKeyUp={this.handleKeyup} /> */}\n\n                <div className={'ot-post-commenter-actions self-end' + ((!comment.length) ? ' can-like' : '')}>\n                    <button className=\"ot-btn flat\" onClick={ this.sendComment } >\n                        POST\n                    </button>\n                    <button className=\"ot-post-liker ot-btn action\" onClick={ this.props.onToggleLiked }>\n                        <MorphReplace width={20} height={20} duration={animation_duration} rotation={'none'}>\n                            { faved ? <FavoritedIcon key=\"favorited_icon\" /> : <FavoriteIcon key=\"favorite_icon\" /> }\n                        </MorphReplace>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default PostCommenter;","import React from 'react';\n\nimport './post-item.css';\n\nimport PostMedia from \"./PostMedia\";\n\nimport PostComments from \"./PostComments\";\nimport PostCommenter from \"./PostCommenter\";\n\nconst PostItem = (props) => {\n    const { user, post } = props;\n    const { fetching_comments, is_liked, publisher, published_at, content, images, videos, comments, total_likes, total_commenets } = post;\n    const total_comments = total_commenets;\n    const owned = publisher.id === user.id;\n    \n    let like_text = total_likes + ' Like';\n    like_text += ( total_likes !== 1) ? 's' : '';\n    \n    let comment_text = total_comments + ' Comment';\n    comment_text += ( total_comments != 1) ? 's' : '';\n\n    function handleShowComments(){\n        if(comments && total_comments > 0 && total_comments !== comments.length)\n            props.onShowComments()\n    }\n\n    return ( \n        <div className=\"ot-post-item\">\n            <div className=\"ot-post-item-title layout center\">\n                <div className=\"ot-dp\" onClick={props.onViewUser}>\n                    <img src={publisher.dp} alt=\"\" />\n                </div>\n                \n                <div>\n                    <span className=\"ot-post-item-owner\" onClick={props.onViewUser}>\n                        { publisher.display_name }\n                    </span>\n                    <span className=\"ot-post-item-date\">\n                        { published_at }\n                    </span>\n                </div>\n\n                {/* { !owned && \n                    (\n                        <button className=\"ot-btn ot-follow-btn flat primary\">\n                            Follow\n                        </button>\n                    )\n                } */}\n\n                <span className=\"flex\"></span>\n\n                { owned &&  \n                    <div className=\"ot-post-manager\">\n                        <button className=\"ot-post-options-btn ot-btn action\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\n                        </button>\n\n                        <div className=\"ot-post-manager-options\">\n                            <button onClick={props.onEditPost} className=\"ot-btn flat\">Edit</button>\n                            <button onClick={props.onDeletePost} className=\"ot-btn flat\">Delete</button>\n                        </div>\n                    </div>\n                }\n            </div>\n            \n            <p className=\"ot-post-item-content\">\n                { content }\n            </p>\n\n            { (images.length > 0 || videos.length > 0) && (<PostMedia images={images} videos={videos} />) }\n\n            <div className=\"ot-post-reactions\">\n                <small>{ like_text }</small>\n                <span></span>\n                <small className={total_comments > 0 && total_comments !== comments.length ? 'can-click' : ''}\n                    onClick={ handleShowComments }>{ comment_text }</small>\n            </div>\n\n            { ((comments && comments.length > 0) || fetching_comments) && (\n                <PostComments comments={comments} loading={fetching_comments}\n                    onToggleCommentLiked={props.onToggleCommentLiked} />\n            ) }\n\n            <PostCommenter \n                user={user} faved={is_liked}\n                onToggleLiked={ props.onToggleLiked }\n                onNewComment = { props.onNewComment } />\n        </div>\n    );\n}\n \nexport default PostItem;","import React from 'react';\nimport workerize from 'workerize'\nimport axios, { post } from 'axios'\n\nimport { API_BASE_URL } from \"../../../../constants\";\n\nclass NewPostImage extends React.Component {\n    state = { was_setup: false };\n    // ctx;\n    // constructor(props){\n    //     super(props);\n    //     this.canvas = React.createRef();\n    //     this.ctx = this.canvas.getContext('2d')\n    // }\n\n    componentWillReceiveProps(props){\n        const { image } = props;\n        const { file, src } = image;\n\n        if(!this.state.was_setup && image){\n            this.setState({ image, was_setup: true })\n\n            if(file){\n                this.processImage(file);\n                this.uploadImage(file);\n                // loader(file).then(img => {\n                    // console.log(\"Loaded image\", img);\n                    // this.props.onImageLoaded(img);\n                    // this.ctx.drawImage(img, 0, 0, ctx.canvas.width, ctx.canvas.height);\n                // });\n            }else if(src){\n                this.uploadImage(src);\n            }\n        }\n    }\n\n    processImage = async ( image ) => {\n        let worker = workerize(`\n            export function load(file) {\n                return new Promise((resolve, reject) => {\n                    var reader = new FileReader();\n                    reader.onload = function(e) {\n                        resolve(e.target.result);\n                    }\n                    reader.readAsDataURL(file);\n                });\n            }\n        `);\n        const src = await worker.load(image);\n        this.props.onImageLoaded(src);\n    }\n\n    fileUpload(url, file, name, params){\n        const formData = new FormData();\n        formData.append(name, file)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            },\n            params\n        }\n        return  post(url, formData, config)\n    }\n\n    uploadImage(file){\n        const params = { token: this.props.token };\n        this.fileUpload(API_BASE_URL + '/upload_post_images/', file, 'photo', params)\n            .then(({data}) => {\n                const response = data.images[0];\n                console.log(\"Upload image result: \", response);\n                this.props.onImageUploaded( response );\n            })\n            .catch((error) => {\n                let err = \"\";\n                if (error.response) {\n                    err = error.response.data;\n                } else if (error.request) {\n                    err = error.request;\n                } else {\n                    err = error.message;\n                }\n\n                console.error(\"Upload image Error\", err);;\n            });\n    }\n\n    render() {\n        const { image } = this.props;\n        const { id, src, photo, loading } = image;\n        const is_temp = id.toString().indexOf('ot-temp-id') !== -1;\n        // const is_temp = false;\n        return ( \n            <div className={'ot-new-post-image ' + ( loading ? 'loading' : '' ) + ( is_temp ? ' is-temp' : '' )}>\n                <img src={src || photo} alt=\"\"/>\n                <button className=\"ot-btn action\" onClick={this.props.onRemoveImage}>\n                    <svg viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\n                </button>\n            </div>\n        );\n    }\n}\n \nexport default NewPostImage;","import React from 'react';\nimport { post } from 'axios'\n\nimport { API_BASE_URL } from \"../../../../constants\";\nimport PostVideo from '../../PostItem/PostMedia/PostVideo';\n\nclass NewPostVideo extends React.Component {\n    state = { was_setup: false };\n\n    componentWillReceiveProps(props){\n        const { video } = props;\n\n        // if(!this.state.was_setup && video){\n        //     this.setState({ video, was_setup: true })\n        //     this.uploadVideo(video.video);\n        // }\n    }\n\n    videoUpload(url, video, params){\n        const formData = new FormData();\n        formData.append('video', video)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            },\n            params\n        }\n        return  post(url, formData, config)\n    }\n\n    uploadVideo(video){\n        const params = { token: this.props.token };\n        this.videoUpload(API_BASE_URL + '/upload_post_videos/', video, params)\n            .then(({data}) => {\n                // const response = data.videos[0];\n                console.log(\"Upload video result: \", data);\n                // this.props.onVideoUploaded( response );\n            })\n            .catch((error) => {\n                let err = \"\";\n                if (error.response) {\n                    err = error.response.data;\n                } else if (error.request) {\n                    err = error.request;\n                } else {\n                    err = error.message;\n                }\n\n                console.error(\"Upload video Error\", err);;\n            });\n    }\n\n    render() {\n        const { video } = this.props;\n        const { id, loading } = video;\n        // const is_temp = id.toString().indexOf('ot-temp-id') !== -1;\n        const is_temp = false;\n        return ( \n            <div className={'ot-new-post-video ' + ( loading ? 'loading' : '' ) + ( is_temp ? ' is-temp' : '' )}>\n                <PostVideo video={video} />\n                <button className=\"ot-btn action\" onClick={this.props.onRemoveVideo}>\n                    <svg viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\n                </button>\n            </div>\n        );\n    }\n}\n \nexport default NewPostVideo;","import React from 'react';\n\nimport NewPostImage from \"./NewPostImage\";\nimport NewPostVideo from \"./NewPostVideo\";\n\nconst NewPostMedia = ( props ) => {\n    const { readonly, images, videos, token } = props;\n    const video = videos && videos.length ? videos[0] : null;\n\n    return ( \n        <div className=\"ot-new-post-media\">\n            { videos && videos.length > 0 && \n                <NewPostVideo video={video}\n                    token={token}\n                    onVideoUploaded={ ( res ) => { if(!readonly) props.onVideoUploaded(res) } }\n                    onRemoveVideo={ props.onRemoveVideo } />\n            }\n            { images && images.length > 0 &&\n                <div className=\"layout ot-new-post-images\">\n                    { images.map( (image, index) => \n                        <NewPostImage key={ index } image={image}\n                            token={token}\n                            onImageLoaded={ (src) => { if(!readonly) props.onImageLoaded(image, index, src) } }\n                            onImageUploaded={ (new_image) => { if(!readonly) props.onImageUploaded(image, index, new_image) } }\n                            onRemoveImage={ () =>  props.onRemoveImage(index) } />\n                    )}\n                </div>\n            }\n        </div>\n    );\n}\n \nexport default NewPostMedia;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Camera extends Component {\n  state = { facingMode: \"user\" };\n  componentWillMount() {\n    this.setup();\n  }\n\n  componentWillUnmount(){\n    this.state.mediaStream.getVideoTracks()[0].stop();\n  }\n\n  setup = () => {\n    const { video, audio } = this.props;\n    if (navigator.mediaDevices) {\n      navigator.mediaDevices\n      // .getUserMedia({ video, audio, facingMode: this.state.facingMode })\n      .getUserMedia({ video: { facingMode: this.state.facingMode }, audio })\n      .then((mediaStream) => {\n        this.setState({ mediaStream });\n        this.video.srcObject = mediaStream;\n        this.video.play();\n      })\n      .catch(error => error);\n    }\n  }\n\n  capture() {\n    const mediaStreamTrack = this.state.mediaStream.getVideoTracks()[0];\n    const imageCapture = new window.ImageCapture(mediaStreamTrack);\n\n    return imageCapture.takePhoto();\n  }\n  \n  switchMode() {\n    const facingMode = this.state.facingMode === \"environment\" ? \"user\" : \"environment\";\n    this.setState({facingMode}, () => {\n      this.state.mediaStream.getVideoTracks()[0].stop();\n      this.setState({ mediaStream: null });\n      // return this.setState({ mediaStream: null });\n      setTimeout(() => {\n        this.setup();\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div style={this.props.style}>\n        { this.props.children }\n        <video ref={(video) => { this.video = video; }} />\n      </div>\n    );\n  }\n}\n\nCamera.propTypes = {\n  audio: PropTypes.bool,\n  video: PropTypes.bool,\n  children: PropTypes.element\n};\n\nCamera.defaultProps = {\n  audio: false,\n  video: true,\n  style: {},\n  children: null\n};\n\nexport default Camera;\n\n\nconst styles = {\n  base: {\n    width: '100%',\n    height: '100%'\n  }\n};","import React, { Component } from 'react';\n// import Camera from 'react-camera';\nimport Camera from './Camera';\n\nexport default class NewPostCamera extends Component {\n  state = { image: null }\n\n  takePicture = () => {\n    this.camera.capture()\n    .then(blob => {\n      const src = URL.createObjectURL(blob);\n      this.img.src = src;\n      this.setState({image: blob});\n      console.log(src);\n      this.img.onload = () => { URL.revokeObjectURL(this.src); }\n    })\n  }\n\n  switchCameraMode = () => {\n    this.camera.switchMode()\n  }\n\n  handleRepeat = () => {\n    this.setState({image: null});\n  }\n\n  render() {\n    const { image } = this.state;\n    return (\n      <div id=\"newPostCamera\">\n        { !image &&\n          <Camera\n            ref={(cam) => { this.camera = cam; }}>\n\n            <div id=\"captureContainer\">\n              <button className=\"ot-btn flat\" onClick={this.props.onCancel}>\n                CANCEL\n              </button>\n              <div id=\"captureButton\" onClick={this.takePicture} />\n              <button className=\"ot-btn action\" onClick={this.switchCameraMode}>\n                <svg viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M20 4h-3.17L15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 11.5V13H9v2.5L5.5 12 9 8.5V11h6V8.5l3.5 3.5-3.5 3.5z\"/></svg>\n              </button>\n            </div>\n\n          </Camera>\n        }\n\n        <img id=\"captureImage\" className={!image ? 'hidden': ''}\n          ref={(img) => { this.img = img; }}\n          alt=\"\"\n        />\n\n        { image && \n          <div id=\"captureContainer\">\n            <button className=\"ot-btn flat\" onClick={this.handleRepeat}>\n              REPEAT\n            </button>\n            \n            \n            <button className=\"ot-btn flat\" onClick={() => this.props.onAddPicture(image)}>\n              CONTINUE\n            </button>\n          </div>\n        }\n      </div>\n    );\n  }\n}","import React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\nimport Fullscreen from \"react-full-screen\";\n\nimport './new-post-mobile.css'\nimport NewPostMedia from '../NewPostMedia';\nimport NewPostCamera from './NewPostCamera';\n\nclass NewPostMobile extends React.Component {\n    state = { takingPicture: false }\n\n    constructor(props){\n        super(props);\n        this.inputField = React.createRef();\n    }\n\n    componentDidMount(){\n        if(this.inputField){\n            this.inputField.current.textarea.focus();\n        }\n    }\n\n    closeCamera = () => {\n        this.props.onCloseCamera();\n        if(this.inputField){\n            this.inputField.current.textarea.focus();\n        }\n    }\n\n    handleAddPicture = (picture) => {\n        this.closeCamera();\n        this.props.onAddPicture(picture);\n    }\n\n    render() { \n        const { takingPicture, posting, editting, user, content, videos, images } = this.props;\n        return (\n            <React.Fragment>\n                { takingPicture && \n                    <Fullscreen\n                        enabled={takingPicture}>\n                        <NewPostCamera\n                            onCancel={this.closeCamera}\n                            onAddPicture={this.handleAddPicture} /> \n                    </Fullscreen>\n                }\n                <div className={'ot-new-post-mobile ' + ( posting ? 'posting ' : ' ') + ( posting && editting ? 'saving ' : ' ')}>\n                    <div className=\"ot-new-post-mobile-nav layout center\">\n                        <button className=\"ot-btn action\" onClick={this.props.onBackClicked}>\n                            <svg viewBox=\"0 0 24 24\"><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"/></svg>\n                        </button>\n\n                        <span>{ editting ? 'Edit' : 'New' } Post</span>\n\n                        <span className=\"flex\"></span>\n\n                        <button className=\"ot-btn flat\" onClick={this.props.onSubmitClicked}>\n                            { editting ? 'SAVE' : 'SUBMIT' }\n                        </button>\n                    </div>\n\n                    <div className=\"ot-new-post-mobile-content\">\n                        <div className=\"ot-new-post-wrapper layout\">\n                            <div className=\"ot-dp\">\n                                <img src={user.dp} alt=\"\"/>\n                            </div>\n\n                            <TextareaAutosize\n                                ref={this.inputField} \n                                placeholder=\"Share your inisights...\" className=\"ot-new-post-text\" rows={1}\n                                value={content}\n                                onChange={this.props.onChange}\n                                onKeyUp={this.props.onKeyUp} />\n\n                        </div>\n                        \n                        <NewPostMedia\n                            readonly\n                            token={user.token}\n                            videos={videos}\n                            images={images}\n                            onRemoveImage={this.props.onRemoveImage}\n                            onRemoveVideo={this.props.onRemoveVideo} />\n                    </div>\n                    \n                    { videos.length < 1 &&\n                        <div className=\"ot-new-post-mobile-actions layout center-center\">\n                            <input type=\"file\" id=\"mobileImages\" onChange={this.props.onFilesPicked}/>\n                            <label className=\"ot-btn flat\" htmlFor=\"mobileImages\">\n                                {/* <svg viewBox=\"0 0 24 24\"><path d=\"M19 7v2.99s-1.99.01-2 0V7h-3s.01-1.99 0-2h3V2h2v3h3v2h-3zm-3 4V8h-3V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-8h-3zM5 19l3-4 2 3 3-4 4 5H5z\"/></svg> */}\n                                ADD FILES\n                            </label>\n                            &emsp;&emsp;\n                            <button className=\"ot-btn flat\" onClick={this.props.onOpenCamera}>\n                                {/* <svg viewBox=\"0 0 24 24\"><path d=\"M19 7v2.99s-1.99.01-2 0V7h-3s.01-1.99 0-2h3V2h2v3h3v2h-3zm-3 4V8h-3V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-8h-3zM5 19l3-4 2 3 3-4 4 5H5z\"/></svg> */}\n                                TAKE PICTURE\n                            </button>\n                        </div>\n                    }\n                </div>\n            </React.Fragment> \n        );\n    }\n}\n \nexport default NewPostMobile;","import React from 'react';\n\nimport './new-post.css';\n\nimport { slice } from 'lodash'\n\nimport axios, { post as aPost } from 'axios';\n\nimport PostVideo, { _parseYoutubeURL, _getEmbedUrl } from \"../PostItem/PostMedia/PostVideo\";\n\nimport TextareaAutosize from 'react-autosize-textarea';\nimport NewPostMobile from \"./NewPostMobile\";\nimport NewPostMedia from \"./NewPostMedia\";\n\nimport { notification, notify } from '../../../Notifications';\nimport { API_BASE_URL } from '../../../constants';\n\nconst MAX_IMAGE_COUNT = 5;\nclass NewPost extends React.Component {\n    state = { creatingOnMobile: false, takingPicture: false, posting: false, dragover: false, focused: false, post_id: null, content: '', images: [], videos: [] }\n\n    constructor(props){\n        super(props);\n        this.wrapper = React.createRef();\n    }\n\n    componentDidMount(){\n        if(this.props.post){\n            const { id, content, images, videos } = this.props.post;\n            this.setState({post_id: id, content, images, videos}, () => {\n                if(window.innerWidth < 541){\n                    this.openMobileCreate();\n                }\n            });\n        }\n\n        window.addEventListener(\"dragover\", this.FileDragHover, false);\n        window.addEventListener(\"dragleave\", this.FileDragHover, false);\n        window.addEventListener(\"drop\", this.FileSelectHandler, false);\n\n        this._isMounted = true;\n\n        document.addEventListener('ot-popstate', (e) => {\n            if(this._isMounted) {\n                const { hash } = window.location;\n                console.log(\"Popstate hash: \", hash, hash.indexOf('creatingOnMobile'));\n                if(hash.indexOf('creatingOnMobile') === -1 && this.state.creatingOnMobile){\n                    this.setState({creatingOnMobile: false});\n                    if(this.state.post_id){\n                        this.props.onCancelEditting();\n                    }\n                }\n    \n                if(hash.indexOf('takingPicture') === -1 && this.state.takingPicture)\n                    this.setState({takingPicture: false})\n            }\n        }, false);\n    }\n\n    FileDragHover = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if(this.state.videos.length)\n            return;\n            \n        const hovering = e.type !== \"dragleave\" && e.type !== \"drop\";\n        \n        setTimeout(() => {\n            this.setState({dragover: hovering});\n        }, 20);\n    }\n\n    FileSelectHandler = (e) => {\n        if(this.state.videos.length)\n            return notify( notification(`You can not upload both videos and images`) )\n\n        this.FileDragHover(e);\n    \n        var files = e.target.files || e.dataTransfer.files;\n    \n        if(!files || !files.length)\n            return;\n    \n        this.processFiles(files);\n    }\n\n    openCamera = () => {\n        console.log(\"Opening camera....\");\n        window.history.pushState({takingPicture: true}, 'takingPicture', '#creatingOnMobile/takingPicture');\n        this.setState({takingPicture: true})\n    }\n\n    closeCamera = () => {\n        window.history.back();\n        this.setState({takingPicture: false});\n    }\n\n    imageLoaded = (image, index, src) => {\n        let new_images = [...this.state.images]\n\n        image.src = src;\n        image.loading = false;\n\n        new_images.splice(index, 1, image);\n\n        this.setState({ images: new_images });\n    }\n    \n    imageUpLoaded = (image, index, res) => {\n        let new_images = [...this.state.images]\n\n        image.id = res.id;\n        image.photo = res.photo;\n\n        new_images.splice(index, 1, image);\n\n        this.setState({ images: new_images });\n    }\n    \n    videoUpLoaded = (res) => {\n        let new_videos = [...this.state.videos];\n        let video = new_videos[0];\n        video.id = res.id;\n\n        this.setState({ videos: [video] });\n    }\n    \n    removeVideo = () => {\n        this.setState({ videos: [] });\n    }\n    \n    removeImage = (index) => {\n        let new_images = [...this.state.images]\n\n        new_images.splice(index, 1);\n\n        this.setState({ images: new_images });\n    }\n\n    handleAddPicture = (pic) => {\n        if(this.state.images.length === MAX_IMAGE_COUNT){\n            notify( notification(`You can not upload more than ${MAX_IMAGE_COUNT} images`) );\n            return;\n        }\n\n        const id = 'ot-temp-id' + Math.random().toString(36).substr(2, 5);\n        pic.lastModifiedDate = new Date();\n        pic.name = 'ot-file-' + Math.random().toString(36).substr(2, 5);\n        this.setState({ images: [...this.state.images, { id, file: pic, loading: true, src: \"\"}] });\n    }\n\n    processFiles = (files) => {\n        const valid_files = Array.from(files).filter(f => f.type.indexOf(\"image\") !== -1);\n        const images = valid_files.map( f => { \n            const id = 'ot-temp-id' + Math.random().toString(36).substr(2, 5);\n            return { id, file: f, loading: true, src: \"\"}; \n        });\n\n        let diff = MAX_IMAGE_COUNT - this.state.images.length;\n        if(diff < 0)\n            diff = 0;\n        \n        if(diff < images.length){\n            notify( notification(`You can not upload more than ${MAX_IMAGE_COUNT} images`) )\n        }\n        this.setState({ images: this.state.images.concat(slice(images, 0, diff)) });\n        \n        Array.from(files).filter(f => f.type.indexOf(\"image\") === -1)\n            .forEach( f => {\n                let fname = f.name.substr(0, 15).trim();\n                fname += f.name.length > 15 ? '...' : '';\n                notify( notification(`<strong>${fname}</strong> is not an image`) )\n            });\n    }\n\n    setFocus = (state, fromClick) => {\n        if(!fromClick)\n            this.setState({focused: state});\n        \n        if(state && fromClick && window.innerWidth < 541){\n            this.openMobileCreate();\n        }\n    }\n\n    openMobileCreate = () => {\n        window.history.pushState({creating: true}, 'creating', '#creatingOnMobile');\n        this.setState({creatingOnMobile: true})\n    }\n\n    closeMobileCreate = () => {\n        window.history.back();\n        this.setState({creatingOnMobile: false})\n        if(this.state.post_id){\n            this.props.onCancelEditting();\n        }\n    }\n    \n    handleChange = (event) => {\n        let content = event.target.value;\n        const video_index = content.indexOf(\"https\");\n        const src = content.substr(video_index, content.length);\n\n        this.setState({content}, () => {\n            if(video_index !== -1 && _parseYoutubeURL(src)){\n                const id = 'ot-temp-id' + Math.random().toString(36).substr(2, 5);\n                const videos = [ { id, video: src } ];\n                content = content.replace(src, \"\");\n\n                this.setState({ content, videos });\n            }\n        });\n    }\n    \n    handleKeyup = (event) => {\n        if(event.key === 'Enter' && this.state.content.length)\n            this.submitClicked();\n    }\n\n    sendPost = (url, formData, params) => {\n        const config = {\n            headers: {\n                'content-type': 'application/x-www-form-urlencode'\n            },\n            params\n        }\n        return aPost(url, formData, config)\n    }\n\n    submitClicked = async () => {\n        this.setState({posting: true})\n\n        let form_data = new FormData();\n        form_data.append('content', this.state.content);\n\n        if(this.state.images.length){\n            await this.state.images.map( i => { \n                i.photo = i.file;\n                console.log(i.id);\n                form_data.append('photo_list', i.id);\n                return i.id;\n            });\n        }\n        \n        if(this.state.videos.length && !this.state.images.length){\n            const video = this.state.videos[0];\n            // if(video.id)\n            //     form_data.append('video_list', video.id);\n            // else\n            //     form_data.set('content', this.state.content + video);\n\n            form_data.set('content', this.state.content + video.video);\n        }\n\n        const params = { token: this.props.user.token };\n        const url = API_BASE_URL + ( this.state.post_id ? '/edit_post' : '/publish_post/');\n\n        if(this.state.post_id){\n            form_data.append('id', this.state.post_id);\n        }\n        \n        this.sendPost(url, form_data, params)\n            .then(({data}) => {\n                this.setState({posting: false});\n                const response = data[0];\n                console.log(\"Submit post result: \", response);\n                // this.props.onImageUpLoaded( response );\n\n                if(response.status){\n                    this.props.onNewPost(response.post);\n                    if(this.state.creatingOnMobile){\n                        this.closeMobileCreate();\n                    }\n                    this.setState({ posting: false, dragover: false, focused: false, content: '', images: [], videos: [] });\n                }\n            })\n            .catch((error) => {\n                this.setState({posting: false});\n                notify( notification(`Error submitting post`) )\n\n                let err = \"\";\n                if (error.response) {\n                    err = error.response.data;\n                } else if (error.request) {\n                    err = error.request;\n                } else {\n                    err = error.message;\n                }\n\n                console.error(\"Submit post Error\", err);;\n            });\n    }\n\n    render() {\n        const { user } = this.props;\n        const { creatingOnMobile, takingPicture, posting, post_id, dragover, focused, content, images, videos } = this.state;\n        const saving = posting && post_id;\n\n        const has_media = images.length || videos.length;\n        const media_type = has_media ? images.length ? 'image' : 'video' : null;\n\n        return (\n            <React.Fragment>\n                { creatingOnMobile && \n                    <NewPostMobile\n                        user={user}\n                        content={content}\n                        images={images} \n                        videos={videos}\n                        takingPicture={takingPicture}\n                        posting={posting}\n                        editting={post_id != null}\n                        onChange={this.handleChange}\n                        onKeyUp={this.handleKeyup}\n                        onFilesPicked={this.FileSelectHandler}\n                        onRemoveImage={this.removeImage}\n                        onRemoveVideo={this.removeVideo}\n                        onSubmitClicked={this.submitClicked}\n                        onBackClicked={this.closeMobileCreate}\n                        onOpenCamera={this.openCamera}\n                        onCloseCamera={this.closeCamera}\n                        onAddPicture={this.handleAddPicture} />\n                }\n\n                <div ref={this.wrapper} className={ 'ot-new-post ' + ( saving ? 'saving ' : ' ') + ( posting ? 'posting ' : ' ') + ( dragover ? images.length ? 'dragging has-images' : 'dragging' : '' ) }>\n                    <div className=\"ot-new-post-wrapper layout\">\n                        <div className=\"ot-dp\">\n                            <img src={user.dp} alt=\"\"/>\n                        </div>\n\n                        <TextareaAutosize \n                            placeholder=\"Share your inisights...\" className=\"ot-new-post-text\" rows={1}\n                            onClick={ () => this.setFocus(true, true) }\n                            onFocus={ () => this.setFocus(true) }\n                            onBlur={ () => this.setFocus(false) }\n                            onChange={this.handleChange}\n                            onKeyUp={this.handleKeyup}\n                            value={content} />\n                    </div>\n\n                    <NewPostMedia\n                        token={user.token}\n                        videos={videos}\n                        images={images}\n                        onImageLoaded={this.imageLoaded}\n                        onImageUploaded={this.imageUpLoaded}\n                        onRemoveImage={this.removeImage}\n                        onVideoUploaded={this.videoUpLoaded}\n                        onRemoveVideo={this.removeVideo} />\n\n                    <div className={'layout end-justified ot-new-post-button-wrapper' + (content.length || focused ? ' visible' : '')}>\n                        <button className={'ot-btn flat' + (!content.length ? ' disabled' : '') }\n                            onClick={ this.submitClicked }>\n                            { post_id ? 'SAVE' : 'POST' }\n                        </button>\n                    </div>\n                </div>\n\n                <button className=\"ot-btn fab ot-post-creator-fab\" onClick={this.openMobileCreate}>\n                    <svg viewBox=\"0 0 24 24\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/></svg>\n                </button>\n            </React.Fragment> \n        );\n    }\n}\n \nexport default NewPost;","import React from 'react';\n\nimport \"./loader.css\";\n\nconst Loader = ( props ) => {\n    const { thin } = props;\n    return ( \n        <div className={'ot-loader ' + (thin ? 'thin' : '')}><div></div><div></div><div></div><div></div></div>\n    );\n}\n \nexport default Loader;","import React from 'react';\n\nimport './edit-post.css'\n\nimport NewPost from \"../NewPost\";\n\nclass EditPost extends React.Component {\n    render() { \n        const { post, user } = this.props;\n        return (\n            <div className=\"ot-edit-post-wrapper\">\n                <div className=\"ot-edit-post\">\n                    <div className=\"ot-edit-post-title layout center justified\">\n                        Edit Post\n\n                        <button className=\"ot-btn action\" onClick={ this.props.onCancelEditting }>\n                            <svg viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\n                        </button>\n                    </div>\n                    <NewPost \n                        post={post} \n                        user={ user } \n                        onNewPost={ this.props.onNewPost }\n                        onCancelEditting={ this.props.onCancelEditting } />\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default EditPost;","import React from 'react';\nimport axios from 'axios';\n\nimport Observer from '@researchgate/react-intersection-observer';\n\nimport './post-list.css';\n\nimport sample_posts from './posts';\n\nimport { API_BASE_URL } from '../../constants';\nimport { confirm } from '../../Popups';\n\nimport PostItem from \"./PostItem\";\nimport NewPost from './NewPost';\nimport { notification, notify } from '../../Notifications';\nimport Loader from '../../components/Loader';\nimport EditPost from './EditPost';\n\nclass PostList extends React.Component {\n    state = { initial_fetch: false, fetching: false, page: 1, postToEdit: null, posts: [] };\n\n    componentDidMount(){\n        const { user, posts, readonly } = this.props;\n        // this.setState({user, posts: sample_posts, initial_fetch: true});\n\n        if(!readonly){\n            this.setState({token: user.token}, () => {\n                this.fetchUserPosts();\n            });\n        }else if(user){\n            this.setState({posts, initial_fetch: true})\n        }\n    }\n\n    fetchUserPosts = () => {\n        // console.log(`Fetching posts for ${id}, with token ${token}`);\n        // setTimeout(() => {\n        //     this.setState({posts: sample_posts, initial_fetch: true});\n        // }, 2000);\n        this.setState({fetching: true});\n        const params = { token: this.state.token, page: this.state.page };\n            \n        axios.get(API_BASE_URL + '/wall/', { params })\n        .then(({data}) => {\n            console.log(\"Fetch posts result\", data);\n            this.setState({posts: [...this.state.posts, ...data], fetching: false, initial_fetch: true, page: this.state.page + 1})\n        })\n        .catch((err) => {\n            console.error(\"Fetch posts Error\", err);\n            this.setState({initial_fetch: true, fetching: false});\n        });\n\n    }\n\n    toggleCommentLiked = (post, index, comment_index) => {\n        let comment = JSON.parse(JSON.stringify(post.comments[comment_index]));\n        const isLiked = comment.is_liked;\n        let new_posts = [...this.state.posts]\n\n\n        comment.is_liked = !isLiked;\n        // comment.total_likes += isLiked ? -1 : 1;\n        post.comments.splice(comment_index, 1, comment);\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const url = API_BASE_URL + ( isLiked ? '/unlike_comment/' : '/like_comment/' );\n        const params = { token: this.state.token, comment_id: comment.id };\n        axios.get(url, { params })\n            .then(({data}) => {\n                const response = data[0];\n                console.log(\"Toggle Comment like response\", response);\n                if(!response.status){\n                    comment.is_liked = isLiked;\n                    post.comments.splice(comment_index, 1, comment);\n                    \n                    new_posts.splice(index, 1, post);\n                    this.setState({ posts: new_posts });\n                }\n            })\n            .catch((error) => {\n                console.error(\"Toggle comment like Error\", error);\n                comment.is_liked = isLiked;\n                post.comments.splice(comment_index, 1, comment);\n                \n                new_posts.splice(index, 1, post);\n                this.setState({ posts: new_posts });\n            });\n    }\n    \n    toggleLiked = (post, index) => {\n        const isLiked = post.is_liked;\n        let new_posts = [...this.state.posts]\n\n        post.is_liked = !isLiked;\n        post.total_likes += isLiked ? -1 : 1;\n\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const url = API_BASE_URL + ( isLiked ? '/unlike_post/' : '/like_post/' );\n        const params = { token: this.state.token, post_id: post.id };\n        axios.get(url, { params })\n            .then(({data}) => {\n                const response = data[0];\n                if(!response.status){\n                    post.is_liked = isLiked;\n                    \n                    new_posts.splice(index, 1, post);\n                    this.setState({ posts: new_posts });\n                }\n            })\n            .catch((error) => {\n                console.error(\"Toggle like Error\", error);\n                post.is_liked = isLiked;\n                \n                new_posts.splice(index, 1, post);\n                this.setState({ posts: new_posts });\n            });\n    }\n    \n    newPost = (post) => {\n        let new_posts = [...this.state.posts];\n        new_posts.unshift(post);\n\n        console.log(post, new_posts);\n        notify( notification(`Your post has been submitted`) )\n\n        this.setState({ posts: new_posts });\n    }\n\n    addComment = (post, index, content) => {\n        let post_copy = {...post}\n        const comment_index = post_copy.comments.length;\n        \n        console.log(post.comments.length);\n        post.total_comments += 1;\n        post.total_commenets += 1;\n\n        const comment = {\n            id: 'ot-temp-id' + Math.random().toString(36).substr(2, 5),\n            content,\n            published_at: new Date(),\n            is_liked: false,\n            publisher: this.props.user\n        }\n\n        post.comments.push(comment);\n\n        let new_posts = [...this.state.posts]\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const params = { token: this.state.token };\n        let form_data = new FormData();\n        form_data.append('content', content);\n        form_data.append('post_id', post.id);\n\n        axios({\n            method: 'POST',\n            url: API_BASE_URL + '/publish_comment/',\n            headers: {\n                'content-type': 'application/x-www-form-urlencode'\n            },\n            params,\n            data: form_data\n        })\n        .then(({data}) => {\n            const response = data[0];\n            console.log(\"Comment result: \", response);\n            \n            if(!response.status){\n                post.comments.splice(comment_index, 1);\n                post.total_comments -= 1;\n                post.total_commenets -= 1;\n            }else{\n                comment.id = comment.id.replace('ot-temp-id', '');\n            }\n\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        })\n        .catch((error) => {\n            let err = \"\";\n            if (error.response) {\n                err = error.response.data;\n            } else if (error.request) {\n                err = error.request;\n            } else {\n                err = error.message;\n            }\n\n            console.error(\"Comment Error\", err);\n\n            post.comments.splice(comment_index, 1);\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        });\n    }\n    \n    showComments = (post, index) => {\n        post.fetching_comments = true;\n\n        let new_posts = [...this.state.posts]\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const params = { token: this.state.token, post_id: post.id };\n\n        axios.get(API_BASE_URL + '/comments/', { params })\n        .then((response) => {\n            console.log(\"Post Comments result: \", response, response.status === 200);\n            \n            if(response.status === 200){\n                post.comments = response.data;\n            }\n\n            post.fetching_comments = false;\n            new_posts.splice(index, 1, post);\n            console.log(new_posts[0]);\n            this.setState({ posts: new_posts });\n        })\n        .catch((error) => {\n            let err = \"\";\n            if (error.response) {\n                err = error.response.data;\n            } else if (error.request) {\n                err = error.request;\n            } else {\n                err = error.message;\n            }\n\n            console.error(\"Post Comments Error\", err);\n\n            post.fetching_comments = false;\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        });\n    }\n\n    editPost = (post, index) => {\n        this.setState({ postToEdit: { post, index } });\n    }\n    \n    savePost = (post) => {\n        let posts = [...this.state.posts];\n        const index = this.state.postToEdit.index;\n        posts.splice(index, 1, post);\n\n        this.setState({ posts });\n    }\n    \n    cancelEditPost = () => {\n        this.setState({ postToEdit: null });\n    }\n\n    deletePost = (post, index) => {\n        let posts = [...this.state.posts];\n        const url = API_BASE_URL + '/delete_post';\n        const params = { token: this.state.token, post_id: post.id };\n\n        confirm(\"Delete Post\", \"Are you sure you want to delete post\", \n            \"Delete\", ( accepted ) => {\n                if(!accepted)\n                    return;\n                \n                axios.get(url, { params })\n                    .then(({data}) => {\n                        const response = data[0];\n\n                        if(response.status){\n                            notify( notification(`Post Deleted`) );\n                            posts.splice(index, 1);\n                            \n                            this.setState({ posts });\n                        }\n                    })\n                    .catch((error) => {\n                        console.error(\"Delete post Error\", error);\n                    });\n            });\n    }\n\n    handleReachedBottom = (event) => {\n        console.log(\"ReachedBottom Event\", event);\n        if(event.isIntersecting && !this.state.fetching){\n            this.fetchUserPosts();\n        }\n    }\n\n    render() { \n        const { scrolled, posts, postToEdit, initial_fetch, fetching } = this.state;\n        const { user, readonly } = this.props;\n        const options = {\n            onChange: this.handleReachedBottom,\n            root: 'body',\n            rootMargin: `60px 0%`,\n        };\n\n        return (\n            <React.Fragment>\n                { postToEdit && \n                    <EditPost \n                        user={user} \n                        post={postToEdit.post}\n                        onNewPost={this.savePost}\n                        onCancelEditting={this.cancelEditPost} /> \n                }\n\n                <div className={ 'ot-post-list-wrapper ' + ( scrolled ? 'scrolled' : '' )}>\n                    { !readonly && <NewPost user={ user } onNewPost={ this.newPost } /> }\n                \n                    <div className=\"ot-post-list\">\n                        {initial_fetch && (\n                            posts.map( (post, index) => \n                                <PostItem key={post.id} post={post} user={user}\n                                    onToggleLiked={ () => this.toggleLiked(post, index) }\n                                    onNewComment={ (comment) => this.addComment(post, index, comment) }\n                                    onToggleCommentLiked={ (comment_index) => this.toggleCommentLiked(post, index, comment_index) }\n                                    onShowComments={ () => this.showComments(post, index) }\n                                    onEditPost={ () => this.editPost(post, index) }\n                                    onDeletePost={ () => this.deletePost(post, index) }\n                                    onViewUser={() => this.props.onViewUser(post.publisher)} />\n                            )\n                        )}\n                    </div>\n\n                    { fetching && \n                        <div className=\"layout center-justified\">\n                            <Loader/>\n                        </div>\n                    }\n\n                    { <Observer {...options}>\n                            <div style={{height: 20+'px'}} \n                                className=\"layout center-justified\" />\n                        </Observer>\n                    }\n                </div>\n            </React.Fragment> \n        );\n    }\n}\n \nexport default PostList;","import React from 'react';\n\nimport './header.css';\n\nconst Header = (props) => {\n    return ( \n        <div className=\"ot-header layout center\">\n            { props.children }\n        </div>\n    );\n}\n \nexport default Header;","import React from 'react';\n\nimport logo from '../components/logo.png';\n\nimport PostList from './PostList';\nimport Header from '../components/Header';\n\nclass Home extends React.Component {\n    render() { \n        const { user, onViewProfile, onViewUser } = this.props;\n\n        return (\n            <React.Fragment>\n                <Header>\n                    <img className=\"ot-logo\" src={logo} alt=\"\"/>\n                    &emsp;\n                    <span className=\"ot-header-title\">\n                        Otalk\n                    </span>\n\n                    <span className=\"flex\"></span>\n\n                    <div className=\"ot-dp\">\n                        <img src={user.dp} alt=\"\" onClick={onViewProfile} />\n                    </div>\n                </Header>\n\n                <PostList\n                    user={ user }\n                    onViewUser={onViewUser} />\n            </React.Fragment> \n        );\n    }\n}\n \nexport default Home;","import React from 'react';\n\nimport \"./profile.css\";\nimport axios from 'axios';\nimport { API_BASE_URL } from '../constants';\nimport Loader from '../components/Loader';\nimport PostList from '../Home/PostList';\n\nclass UserProfile extends React.Component {\n    state = { user: {}, profileLoaded: false, postsLoaded: false }\n\n    componentDidMount(){\n        this.setState({user: this.props.user});\n        this.fetchUserProfile();\n        this.fetchUserPosts();\n    }\n\n    fetchUserProfile = () => {\n        const { user, sessionUser } = this.props;\n        const token = sessionUser.token;\n        const params = { token, user_id: user.id };\n        axios.get(API_BASE_URL + '/profile/', { params })\n            .then(({data}) => {\n                const res = data[0];\n                console.log(\"Fetch user profile result\", data);\n                this.setState({ profileLoaded: true, user: {...this.state.user, ...res.user}})\n            })\n            .catch((err) => {\n                console.error(\"Fetch user profile Error\", err);\n                this.setState({initial_fetch: true});\n            });\n    }\n   \n    fetchUserPosts = () => {\n        const { user, sessionUser } = this.props;\n        const token = sessionUser.token;\n        const params = { token, user_id: user.id };\n        axios.get(API_BASE_URL + '/user_wall/', { params })\n            .then(({data}) => {\n                console.log(\"Fetch user posts result\", data);\n                if(this.props.onPostsLoaded){\n                    this.props.onPostsLoaded();\n                }\n                this.setState({ postsLoaded: true, user: {...this.state.user, posts: data}})\n            })\n            .catch((err) => {\n                console.error(\"Fetch user posts Error\", err);\n            });\n    }\n\n    render() { \n        const { sessionUser } = this.props;\n        const { user, profileLoaded, postsLoaded } = this.state;\n        const loading = !profileLoaded && !postsLoaded;\n        const { display_name, dp, posts } = user;\n        \n        return (\n            <div className=\"ot-user-profile\">\n                <div className=\"ot-user-profile-title layout vertical center\">\n                    <div className=\"ot-dp\">\n                        <img src={dp} alt=\"\"/>\n                    </div>\n                    <h5>{display_name}</h5>\n\n                    { sessionUser.id === user.id &&  \n                        <button className=\"ot-btn logout-btn\" onClick={this.props.onLogout}>\n                            LOGOUT\n                        </button>\n                    }\n                    \n                    { loading && <Loader thin /> }\n\n\n                    { profileLoaded &&\n                        <React.Fragment>\n                            <div className=\"user-stats layout center-center\">\n                                <div className=\"user-stat\">\n                                    <div className=\"number\">\n                                        { user.followers }\n                                    </div>\n                                    <div className=\"label\">\n                                        Followers\n                                    </div>\n                                </div>\n                                <div className=\"user-stat\">\n                                    <div className=\"number\">\n                                        { user.following }\n                                    </div>\n                                    <div className=\"label\">\n                                        Following\n                                    </div>\n                                </div>\n                                <div className=\"user-stat\">\n                                    <div className=\"number\">\n                                        { user.friends }\n                                    </div>\n                                    <div className=\"label\">\n                                        Friends\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            {  sessionUser.id !== user.id &&  \n                                <button className=\"ot-btn fla\">\n                                    FOLLOW\n                                </button>\n                            }\n                        </React.Fragment>\n                    }\n                </div>\n                \n                { postsLoaded && <PostList readonly user={sessionUser} posts={ posts } /> }\n            </div>\n        );\n    }\n}\n \nexport default UserProfile;","import React from 'react';\nimport Observer from '@researchgate/react-intersection-observer';\n\nimport \"./bottom-sheet.css\";\n\nclass BottomSheet extends React.Component {\n    state = { visible: false, closing: false, fixed: false };\n\n    constructor(props){\n        super(props)\n        this.contentWrapper = React.createRef();\n    }\n\n    componentDidMount(){\n        this.setState({visible: true});\n\n        const { id } = this.props;\n        window.history.pushState({[id]: true}, id, '#'+id);\n\n        document.addEventListener('ot-popstate', (e) => {\n            const { hash } = window.location;\n            console.log(\"State was popped yo!\", hash, hash.indexOf(id));\n            if(hash.indexOf(id) === -1 && this.state.visible){\n                if(this.contentWrapper && this.contentWrapper.current){\n                    this.contentWrapper.current.scrollTop = 0\n                }\n                this.setState({closing: true}, () => {\n                    this.closeBottomSheet();\n                });\n            }\n        }, false);\n    }\n\n    handleIntersection = (event) => {\n        console.log(\"Intersection Event\", event);\n        if(event.isIntersecting){\n            this.setState({fixed: true});\n        }else{\n            this.setState({fixed: false});\n        }\n    }\n\n    handleClose = () => {\n        window.history.back();\n    }\n    \n    closeBottomSheet = () => {\n        setTimeout(() => {\n            if(this.props.onClose) \n                this.props.onClose()\n        }, 350);\n    }\n\n    render() { \n        const options = {\n            onChange: this.handleIntersection,\n            root: '.ot-bottom-sheet',\n            rootMargin: `0% 0% -${window.innerHeight}px`,\n        };\n        const { visible, fixed, closing } = this.state;\n        let {contentLoaded, peekHeight} = this.props;\n        if(!peekHeight)\n            peekHeight = 300;\n\n        const tx = window.innerHeight - (peekHeight + 32);\n\n        return (\n            <div className={'ot-bottom-sheet ' + ( visible ? 'visible ' : '' ) + ( fixed ? 'fixed ' : '') + ( contentLoaded ? 'content-loaded ' : '' ) + ( closing ? 'closing' : '' ) }>\n                <div className=\"ot-bottom-sheet-bg\" onClick={ this.handleClose }></div>\n                <Observer {...options}>\n                    <div ref={this.contentWrapper} className=\"ot-bottom-sheet-content\"\n                        style={ { transform: `translateY( ${(tx)}px)` } }>\n                        <button className=\"ot-btn action back-btn\" onClick={ this.handleClose }>\n                            <svg viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\n                        </button>\n\n                        { this.props.children }\n                    </div>\n                </Observer>\n            </div>\n        );\n    }\n}\n \nexport default BottomSheet;","import React from 'react';\nimport './app.css';\n\nimport axios from \"axios\";\n\nimport Notifications, { notify, notification } from '../Notifications';\n\nimport Login from '../Login';\nimport Home from '../Home';\n\nimport UserProfile from '../UserProfile';\nimport BottomSheet from '../components/BottomSheet';\n\n// const profileUser = {display_name: \"Daniel Kindimba\", id: 290, dp: \"https://olbongo.blob.core.windows.net/olbongo/stuff_images/2018/12/01/takescripter.jpg\"}\n// const profileUser = {\"status\":\"wacky\",\"display_name\":\"walter\",\"id\":10,\"dp\":\"https://olbongo.blob.core.windows.net/olbongo/CACHE/images/stuff_images/2017/04/28/20170416_121348_s8ddhse/444c59972c18921ada293c2c40bfe2a4.png\",\"token\":\"51w-fe20639ab5c964bb1c15:@olb:dXE=\"}\nclass App extends React.Component {\n    state = {user: {}, profileUser: null, userProfilePostsLoaded: false, user_fetched: false};\n\n    componentWillMount(){\n        this.fetchUser();\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n        window.onpopstate = () => {\n            document.dispatchEvent(new CustomEvent('ot-popstate'));\n            console.log(\"State popped!\");\n        }\n    }\n\n    fetchUser = async () => {\n        const session_user = await localStorage.getItem('ot-user');\n        this.setState({user_fetched: true});\n\n        if(session_user != null){\n        this.setState({user: JSON.parse(session_user)});\n        }\n    }\n\n    handleProfilePostsLoaded = () => {\n        this.setState({userProfilePostsLoaded: true});\n    }\n\n    login = ({username, password}) => {\n        const params = {username, password}\n        axios({\n        method: 'POST',\n        url: \"https://www.olbongo.com/api/login/\",\n        params\n        })\n        .then( response => {\n            const result = response.data;\n\n            if(!result.status){    \n                notify( notification(\"Wrong credentials!\") )\n                return;\n            }\n\n            let { user, token } = result;\n            user.token = token;\n            localStorage.setItem('ot-user', JSON.stringify(user));\n            \n            this.setState({user});\n        })\n        .catch( err => {\n            console.error(\"Login Error\", err);\n            notify( notification(\"Wrong credentials!\") )\n        });\n    }\n\n    logout = () => {\n        localStorage.removeItem('ot-user');\n        this.setState({profileUser: null, user_fetched: true, user: null});\n    }\n\n    closeProfileUser = () => {\n        this.setState({profileUser: null});\n    }\n    \n    viewProfileUser = ( user ) => {\n        if(window.innerWidth < 541){\n            this.setState({profileUser: user});\n        }\n    }\n  \n    render() { \n        const { user, user_fetched, profileUser, userProfilePostsLoaded } = this.state;\n        const user_logged_in = user && user.id && user.token;\n        return (\n            <div className=\"ot-app-wrapper\" context=\"counter1\">\n                <Notifications />\n                <main>\n                    { !user_logged_in && user_fetched && ( \n                        <Login user={user} onLogin={this.login} /> \n                    )}\n\n                    { user_logged_in && \n                        <React.Fragment>\n                            <Home\n                                user={ user }\n                                onViewProfile={ () => this.viewProfileUser(user) }\n                                onViewUser={this.viewProfileUser} />\n                            \n                            { profileUser && \n                                <BottomSheet id=\"profileUser\" contentLoaded={userProfilePostsLoaded} peekHeight={320} onClose={this.closeProfileUser}>\n                                    <UserProfile onLogout={this.logout} onPostsLoaded={this.handleProfilePostsLoaded} sessionUser={ user } user={profileUser} />\n                                </BottomSheet>\n                            }\n                        </React.Fragment>\n                    }\n                </main>\n            </div>\n        );\n    }\n}\n\n// App.contextType = MyContext\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.43803f22.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.43803f22.png\";"],"sourceRoot":""}