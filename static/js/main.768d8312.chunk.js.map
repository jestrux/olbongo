{"version":3,"sources":["Notifications/NotificationItem.jsx","Notifications/index.jsx","Login/index.jsx","Header/index.jsx","constants.js","PostMedia/PostImages.jsx","PostMedia/PostVideo.jsx","PostMedia/index.jsx","Utils/index.jsx","PostComments/PostComment.jsx","PostComments/index.jsx","PostCommenter/index.jsx","PostItem/index.jsx","NewPost/NewPostImage/index.jsx","NewPost/NewPostVideo/index.jsx","NewPost/NewPostMedia.jsx","NewPost/NewPostMobile/NewPostCamera/Camera.jsx","NewPost/NewPostMobile/NewPostCamera/index.jsx","NewPost/NewPostMobile/index.jsx","NewPost/index.jsx","PostList/index.jsx","App/index.jsx","serviceWorker.js","index.js","Login/logo.png","Header/logo.png"],"names":["NotificationItem","props","notification","message","Object","objectWithoutProperties","react_default","a","createElement","className","dangerouslySetInnerHTML","__html","_len","arguments","length","rest","Array","_key","options","CustomEvent","detail","notify","event","document","dispatchEvent","Notifications","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","notifications","showNotification","_notification","setState","toConsumableArray","concat","setTimeout","_notifications","filter","n","id","wrapper","React","createRef","_this2","addEventListener","e","Math","random","toString","substr","reverse","map","i","Notifications_NotificationItem","key","Component","Login","username","password","inputChanged","defineProperty","target","name","value","_this$state","isValid","autoComplete","src","logo","height","alt","autoFocus","required","type","onChange","htmlFor","onClick","onLogin","Header","dp","onLogout","API_BASE_URL","PostImage","images","templateClass","extras","slice","photo","_parseYoutubeURL","str","test","match","PostVideo","video","is_youtube_url","embed","url","_getEmbedUrl","title","frameBorder","allow","allowFullScreen","controls","PostMedia","videos","PostImages","PostMedia_PostVideo","FavoritedIcon","fill","viewBox","d","FavoriteIcon","FavToggle","Fragment","faved","Utils_FavoritedIcon","Utils_FavoriteIcon","PostComment","comment","publisher","published_at","content","is_liked","display_name","indexOf","onToggleLiked","Utils_FavToggle","PostComments","initial_fetch","comments","_this$props","loading","index","PostComments_PostComment","onToggleCommentLiked","PostCommenter","handleChange","handleKeyup","sendComment","JSON","parse","stringify","onNewComment","animate_icon","user","animation_duration","placeholder","onKeyUp","lib","width","duration","rotation","PostItem","post","fetching_comments","owned","total_likes","total_comments","total_commenets","like_text","comment_text","xmlns","src_PostMedia","onShowComments","src_PostComments","src_PostCommenter","NewPostImage","was_setup","processImage","_callee","image","worker","regenerator_default","wrap","_context","prev","next","workerize","load","sent","onImageLoaded","stop","file","uploadImage","params","formData","FormData","append","config","headers","content-type","token","fileUpload","then","_ref2","response","data","console","log","onImageUploaded","catch","error","err","request","is_temp","onRemoveImage","NewPostVideo","videoUpload","_ref","NewPostMedia","readonly","NewPost_NewPostVideo","onVideoUploaded","res","onRemoveVideo","NewPost_NewPostImage","new_image","Camera","facingMode","setup","audio","navigator","mediaDevices","getUserMedia","mediaStream","srcObject","play","getVideoTracks","mediaStreamTrack","window","ImageCapture","takePhoto","_this3","style","children","ref","defaultProps","NewPostCamera","takePicture","camera","capture","blob","URL","createObjectURL","img","onload","revokeObjectURL","switchCameraMode","switchMode","handleRepeat","NewPostCamera_Camera","cam","onCancel","onAddPicture","NewPostMobile","takingPicture","closeCamera","onCloseCamera","inputField","current","textarea","focus","handleAddPicture","picture","posting","dist_default","enabled","NewPostCamera_NewPostCamera","onBackClicked","onSubmitClicked","react_autosize_textarea_lib_default","rows","NewPost_NewPostMedia","onFilesPicked","onOpenCamera","MAX_IMAGE_COUNT","NewPost","creatingOnMobile","dragover","focused","FileDragHover","stopPropagation","preventDefault","hovering","FileSelectHandler","files","dataTransfer","processFiles","openCamera","history","pushState","back","imageLoaded","new_images","splice","imageUpLoaded","videoUpLoaded","removeVideo","removeImage","pic","lastModifiedDate","Date","from","f","diff","forEach","fname","trim","setFocus","fromClick","innerWidth","openMobileCreate","creating","closeMobileCreate","video_index","replace","submitClicked","sendPost","aPost","asyncToGenerator","mark","form_data","set","status","onNewPost","_isMounted","onpopstate","hash","location","NewPost_NewPostMobile","onFocus","onBlur","PostList","posts","fetchUserPosts","axios","get","toggleCommentLiked","comment_index","isLiked","new_posts","comment_id","toggleLiked","post_id","_ref3","newPost","unshift","addComment","objectSpread","push","method","_ref4","showComments","_ref5","scrolled","src_NewPost","src_PostItem","App","user_fetched","fetchUser","session_user","localStorage","getItem","login","result","setItem","logout","removeItem","user_logged_in","context","src_Notifications","src_Header","src_Login","src_PostList","Boolean","hostname","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.768d8312.chunk.js","sourcesContent":["import React from 'react';\n\nconst NotificationItem = (props) => {\n    const { notification } = props\n    const { message, ...options } = notification;\n    return ( \n        <div className=\"notif show\" dangerouslySetInnerHTML={{ __html: message }}></div>\n    );\n}\n \nexport default NotificationItem;","import React from 'react';\n\nimport './notifications.css';\nimport NotificationItem from './NotificationItem';\n\nexport const notification = (message, ...rest) => {\n    const options = rest && rest.length ? rest[0] : {};\n    return new CustomEvent('ot-notification', { detail: { message, options: options } })\n}\n\nexport const notify = ( event ) => {\n    document.dispatchEvent(event);\n}\n\nclass Notifications extends React.Component {\n    state = { notifications: [] }\n    constructor(props){\n        super(props);\n        this.wrapper = React.createRef();\n    }\n\n    componentDidMount(){\n        document.addEventListener('ot-notification', (e) => {\n            const _notification = e.detail;\n            _notification.id = 'ot-notif-' + Math.random().toString(36).substr(2, 5);\n\n            this.showNotification(_notification)\n        }, false);\n    }\n\n    showNotification = (_notification) => {\n        this.setState({ notifications: [ ...this.state.notifications, _notification] }, () => {\n            setTimeout(() => {\n                const _notifications = [...this.state.notifications].filter( ( n ) => n.id !== _notification.id);\n                this.setState({ notifications: _notifications });\n            }, 3000);\n        });\n    }\n\n    render() { \n        const { notifications } = this.state;\n        return ( \n            <div className=\"ot-notifications-wrapper\">\n                { notifications.reverse().map( (n, i) => <NotificationItem key={i} notification={n} />) }\n            </div>\n        );\n    }\n}\n \nexport default Notifications;","import React from 'react';\n\nimport \"./login.css\";\nimport logo from \"./logo.png\";\n\nclass Login extends React.Component {\n    state = { username: \"\", password: \"\" }\n\n    inputChanged = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n    };\n\n    render() { \n        const { username, password } = this.state;\n        const isValid = username.length > 0 && password.length > 0;\n        return (\n            <div className=\"ot-login-page\">\n                <form className=\"ot-login-form\" autoComplete=\"off\">\n                    <div className=\"ot-login-title layout center\">\n                        <img src={logo} height=\"50px\" alt=\"\"/>\n                        Otalk Login\n                    </div>\n\n                    <div className=\"ot-input-box\">\n                        <input autoFocus autoComplete=\"off\" id=\"username\" className={ username.length ? 'valid' : '' }\n                            required type=\"text\" name=\"username\"\n                            value={username} \n                            onChange={this.inputChanged} />\n                        <label htmlFor=\"username\">Username</label>\n                    </div>\n\n                    <div className=\"ot-input-box\">\n                        <input autoComplete=\"off\" id=\"password\" className={ password.length ? 'valid' : '' }\n                            required type=\"password\" name=\"password\"\n                            value={password} \n                            onChange={this.inputChanged} />\n                        <label htmlFor=\"password\">Password</label>\n                    </div>\n\n                    <button type=\"button\" className={ 'ot-btn primary rounded ' + ( !isValid ? 'disabled' : '' ) }\n                        onClick={() => this.props.onLogin({username, password})}>LOGIN</button>\n                </form>\n            </div>\n        );\n    }\n}\n \nexport default Login;","import React from 'react';\nimport logo from \"./logo.png\"\n\nimport './header.css';\n\nconst Header = (props) => {\n    const { dp } = props;\n\n    return ( \n        <div className=\"ot-header layout center\">\n            <img className=\"ot-logo\" src={logo} alt=\"\"/>\n            &emsp;\n            <span className=\"ot-header-title\">\n                Otalk\n            </span>\n\n            <span className=\"flex\"></span>\n\n            <div className=\"ot-dp\">\n                <img src={dp} alt=\"\" onClick={props.onLogout} />\n            </div>\n        </div>\n    );\n}\n \nexport default Header;","export const LOGIN_URL = \"https://www.olbongo.com/api/login\"\nexport const API_BASE_URL = \"https://www.olbongo.com/api/otalk\"","import React from 'react';\n\nconst PostImage = ( props ) => {\n    const { images } = props;\n    let templateClass = '';\n    let extras = ''; \n\n    if(images.length > 1){\n        switch (images.length) {\n            case 2:\n                templateClass = 'two';\n                break;\n            case 3:\n                templateClass = 'three';\n                break;\n            case 4:\n                templateClass = 'four';\n                break;\n            case 5:\n                templateClass = 'five';\n                break;\n        \n            default:\n                break;\n        }\n        templateClass += '-image-grid';\n\n        if(images.length > 5)\n            templateClass += ' has-more';\n    \n        extras = images.length > 5 ? images.length - 5 : '';\n    }\n\n    return ( \n        <div className={'ot-post-images ' + templateClass } extras={extras}>\n            {   \n                images.slice(0, 5).map( i => \n                    <div key={i.id} className=\"ot-post-image\">\n                        <img src={i.photo} alt=\"\"/> \n                    </div>\n                )\n            }\n        </div>\n    );\n}\n \nexport default PostImage;","import React from 'react';\n\nexport function _parseYoutubeURL(str){\n    var pattern = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\n    \n    if(!pattern.test(str)) {\n        return false;\n    } else {\n        var reg = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/\n        return str.match(reg);\n    }\n}\n\nexport function _getEmbedUrl(url) {\n    return `https://www.youtube.com/embed/${url}?rel=0&amp;showinfo=0`;\n}\n\nconst PostVideo = ( props ) => {\n    const { video } = props;\n    const is_youtube_url = video ? _parseYoutubeURL(video.video) : false;\n\n    let url = \"\";\n    let embed = \"\";\n    \n    if(is_youtube_url){\n        url = is_youtube_url[2];\n        embed = _getEmbedUrl(url);\n    }\n\n    return ( \n        <div className={'ot-post-video ' + ( is_youtube_url ? 'for-youtube' : '' )}>\n            { is_youtube_url && <iframe title=\"post video\" src={embed} frameBorder=\"0\" allow=\"autoplay; encrypted-media\" allowFullScreen></iframe> }\n            { video && !is_youtube_url && \n                (\n                    <video controls>\n                        <source src={video.video} />\n                    </video>\n                )\n            }\n        </div>\n    );\n}\n \nexport default PostVideo;","import React from 'react';\n\nimport './post-media.css';\n\nimport PostImages from \"./PostImages\";\nimport PostVideo from \"./PostVideo\";\n\nconst PostMedia = (props) => {\n    const { images, videos } = props;\n\n    return ( \n        <div className=\"ot-post-media\">\n            {/* <PostImages images={images} /> */}\n            {/* <PostVideo videos={videos} /> */}\n            { images.length > 0 && (<PostImages images={images} /> ) }\n            { !images.length && videos.length > 0 && ( <PostVideo video={videos[0]} /> )}\n        </div>\n    );\n}\n \nexport default PostMedia;","import React from 'react';\n\nexport const FavoritedIcon = () => {\n    return (<svg fill=\"#ffa200\" className=\"ot-post-like-icon\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/></svg>);\n}\n \nexport const FavoriteIcon = () => {\n    return (<svg fill=\"#656565\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"/></svg>);\n}\n\nexport const FavToggle = (props) => {\n    return ( \n        <React.Fragment>{ props.faved ? <FavoritedIcon key=\"favorited_icon\" /> : <FavoriteIcon key=\"favorite_icon\" /> }</React.Fragment>\n    );\n}","import React from 'react';\nimport { FavToggle } from '../Utils';\n\nconst PostComment = ( props ) => {\n    const { comment } = props;\n    const { id, published_at, publisher, content, is_liked } = comment;\n    const { dp, display_name } = publisher;\n\n    return ( \n        <div className={'ot-post-comment layout ' + ( id.toString().indexOf('ot-temp-id') !== -1 ? 'temp' : '' )}>\n            <div className=\"ot-dp small\">\n                <img src={dp} alt=\"\"/>\n            </div>\n            <p>\n                <strong>{ display_name }</strong> { content }\n            </p>\n\n            <button className=\"ot-comment-liker ot-btn action\" onClick={ props.onToggleLiked }>\n                { <FavToggle faved={is_liked} /> }\n            </button>\n        </div>\n    );\n}\n \nexport default PostComment;","import React from 'react';\nimport './post-comments.css';\n\nimport PostComment from \"./PostComment\";\n\nclass PostComments extends React.Component {\n    state = { initial_fetch: false, comments: [] };\n\n    componentDidMount(){\n        const { comments, loading } = this.props;\n        this.setState({ comments });\n    }\n\n    render() { \n        const { comments, initial_fetch } = this.state;\n        const { loading } = this.props;\n\n        return ( \n            <div className=\"ot-post-comments\">\n                {!comments.length > 0 && !initial_fetch && <span>Fetching comments....</span>}\n\n                {(comments.length > 0 || initial_fetch) && (\n                    <React.Fragment>\n                        { comments.map( (comment, index) => \n                            <PostComment \n                                key={comment.id} \n                                comment={comment} \n                                onToggleLiked={() => this.props.onToggleCommentLiked(index) } />) \n                        }\n                    </React.Fragment>\n                )}\n\n                { loading && (\n                    <span className=\"ot-comments-loader\">\n                        { comments.length > 0 ? 'loading more comments....' : 'loading comments....'}\n                    </span>\n                ) }\n            </div>\n        );\n    }\n}\n \nexport default PostComments;","import React from 'react';\nimport { FavoriteIcon, FavoritedIcon } from '../Utils';\nimport { MorphReplace } from 'react-svg-morph';\n\nimport './post-commenter.css';\n\nclass PostCommenter extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = { comment: '', animate_icon: true };\n    }\n\n    handleChange = (event) => {\n        this.setState({comment: event.target.value});\n    }\n    \n    handleKeyup = (event) => {\n        if(event.key === 'Enter')\n            this.sendComment();\n    }\n\n    sendComment = () => {\n        const state_copy = JSON.parse(JSON.stringify(this.state));\n        const comment = state_copy.comment;\n\n        if(comment.length){\n            this.props.onNewComment(comment);\n            this.setState({comment : \"\"});\n        }\n    }\n\n    render(){\n        const { comment, animate_icon } = this.state;\n        const { user, faved } = this.props;\n\n        const animation_duration = animate_icon ? 500 : 0;\n\n        return (\n            <div className=\"ot-post-commenter layout center\">\n                <div className=\"ot-dp small\">\n                    <img src={user.dp} alt=\"\" />\n                </div>\n\n                <input className=\"flex\" type=\"text\" placeholder=\"Write a Comment\" \n                    value={comment} \n                    onChange={this.handleChange}\n                    onKeyUp={this.handleKeyup} />\n\n                <div className={'ot-post-commenter-actions' + ((!comment.length) ? ' can-like' : '')}>\n                    <button className=\"ot-btn flat\" onClick={ this.sendComment } >\n                        POST\n                    </button>\n                    <button className=\"ot-post-liker ot-btn action\" onClick={ this.props.onToggleLiked }>\n                        <MorphReplace width={20} height={20} duration={animation_duration} rotation={'none'}>\n                            { faved ? <FavoritedIcon key=\"favorited_icon\" /> : <FavoriteIcon key=\"favorite_icon\" /> }\n                        </MorphReplace>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default PostCommenter;","import React from 'react';\n\nimport './post-item.css';\n\nimport PostMedia from \"../PostMedia\";\n\nimport PostComments from \"../PostComments\";\nimport PostCommenter from \"../PostCommenter\";\n\nconst PostItem = (props) => {\n    const { user, post } = props;\n    const { fetching_comments, is_liked, publisher, owned, published_at, content, images, videos, comments, total_likes, total_commenets } = post;\n    const total_comments = total_commenets;\n    \n    let like_text = total_likes + ' Like';\n    like_text += ( total_likes != 1) ? 's' : '';\n    \n    let comment_text = total_comments + ' Comment';\n    comment_text += ( total_comments != 1) ? 's' : '';\n\n    function handleShowComments(){\n        if(comments && total_comments > 0 && total_comments !== comments.length)\n            props.onShowComments()\n    }\n\n    return ( \n        <div className=\"ot-post-item\">\n            <div className=\"ot-post-item-title layout center\">\n                <div className=\"ot-dp\">\n                    <img src={publisher.dp} alt=\"\" />\n                </div>\n                \n                <div>\n                    <span className=\"ot-post-item-owner\">\n                        { publisher.display_name }\n                    </span>\n                    <span className=\"ot-post-item-date\">\n                        { published_at }\n                    </span>\n                </div>\n\n                {/* { !owned && \n                    (\n                        <button className=\"ot-btn ot-follow-btn flat primary\">\n                            Follow\n                        </button>\n                    )\n                } */}\n\n                <span className=\"flex\"></span>\n\n                <button className=\"ot-post-options-btn ot-btn action\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\n                </button>\n            </div>\n            \n            <p className=\"ot-post-item-content\">\n                { content }\n            </p>\n\n            { (images.length > 0 || videos.length > 0) && (<PostMedia images={images} videos={videos} />) }\n\n            <div className=\"ot-post-reactions\">\n                <small>{ like_text }</small>\n                <span></span>\n                <small className={total_comments > 0 ? 'can-click' : ''}\n                    onClick={ handleShowComments }>{ comment_text }</small>\n            </div>\n\n            { ((comments && comments.length > 0) || fetching_comments) && (\n                <PostComments comments={comments} loading={fetching_comments}\n                    onToggleCommentLiked={props.onToggleCommentLiked} />\n            ) }\n\n            <PostCommenter \n                user={user} faved={is_liked}\n                onToggleLiked={ props.onToggleLiked }\n                onNewComment = { props.onNewComment } />\n        </div>\n    );\n}\n \nexport default PostItem;","import React from 'react';\nimport workerize from 'workerize'\nimport axios, { post } from 'axios'\n\nimport { API_BASE_URL } from \"../../constants\";\n\nclass NewPostImage extends React.Component {\n    state = { was_setup: false };\n    // ctx;\n    // constructor(props){\n    //     super(props);\n    //     this.canvas = React.createRef();\n    //     this.ctx = this.canvas.getContext('2d')\n    // }\n\n    componentWillReceiveProps(props){\n        const { image } = props;\n        const { file, src } = image;\n\n        if(!this.state.was_setup && image){\n            this.setState({ image, was_setup: true })\n\n            if(file){\n                this.processImage(file);\n                this.uploadImage(file);\n                // loader(file).then(img => {\n                    // console.log(\"Loaded image\", img);\n                    // this.props.onImageLoaded(img);\n                    // this.ctx.drawImage(img, 0, 0, ctx.canvas.width, ctx.canvas.height);\n                // });\n            }else{\n                this.uploadImage(src);\n            }\n        }\n    }\n\n    processImage = async ( image ) => {\n        let worker = workerize(`\n            export function load(file) {\n                return new Promise((resolve, reject) => {\n                    var reader = new FileReader();\n                    reader.onload = function(e) {\n                        resolve(e.target.result);\n                    }\n                    reader.readAsDataURL(file);\n                });\n            }\n        `);\n        const src = await worker.load(image);\n        this.props.onImageLoaded(src);\n    }\n\n    fileUpload(url, file, name, params){\n        const formData = new FormData();\n        formData.append(name, file)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            },\n            params\n        }\n        return  post(url, formData, config)\n    }\n\n    uploadImage(file){\n        const params = { token: this.props.token };\n        this.fileUpload(API_BASE_URL + '/upload_post_images/', file, 'photo', params)\n            .then(({data}) => {\n                const response = data.images[0];\n                console.log(\"Upload image result: \", response);\n                this.props.onImageUploaded( response );\n            })\n            .catch((error) => {\n                let err = \"\";\n                if (error.response) {\n                    err = error.response.data;\n                } else if (error.request) {\n                    err = error.request;\n                } else {\n                    err = error.message;\n                }\n\n                console.error(\"Upload image Error\", err);;\n            });\n    }\n\n    render() {\n        const { image } = this.props;\n        const { id, src, loading } = image;\n        const is_temp = id.toString().indexOf('ot-temp-id') !== -1;\n        // const is_temp = false;\n        return ( \n            <div className={'ot-new-post-image ' + ( loading ? 'loading' : '' ) + ( is_temp ? ' is-temp' : '' )}>\n                <img src={src} alt=\"\"/>\n                <button className=\"ot-btn action\" onClick={this.props.onRemoveImage}>\n                    <svg viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\n                </button>\n            </div>\n        );\n    }\n}\n \nexport default NewPostImage;","import React from 'react';\nimport workerize from 'workerize'\nimport axios, { post } from 'axios'\n\nimport { API_BASE_URL } from \"../../constants\";\nimport PostVideo from '../../PostMedia/PostVideo';\n\nclass NewPostVideo extends React.Component {\n    state = { was_setup: false };\n\n    componentWillReceiveProps(props){\n        const { video } = props;\n\n        // if(!this.state.was_setup && video){\n        //     this.setState({ video, was_setup: true })\n        //     this.uploadVideo(video.video);\n        // }\n    }\n\n    videoUpload(url, video, params){\n        const formData = new FormData();\n        formData.append('video', video)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            },\n            params\n        }\n        return  post(url, formData, config)\n    }\n\n    uploadVideo(video){\n        const params = { token: this.props.token };\n        this.videoUpload(API_BASE_URL + '/upload_post_videos/', video, params)\n            .then(({data}) => {\n                // const response = data.videos[0];\n                console.log(\"Upload video result: \", data);\n                // this.props.onVideoUploaded( response );\n            })\n            .catch((error) => {\n                let err = \"\";\n                if (error.response) {\n                    err = error.response.data;\n                } else if (error.request) {\n                    err = error.request;\n                } else {\n                    err = error.message;\n                }\n\n                console.error(\"Upload video Error\", err);;\n            });\n    }\n\n    render() {\n        const { video } = this.props;\n        const { id, loading } = video;\n        // const is_temp = id.toString().indexOf('ot-temp-id') !== -1;\n        const is_temp = false;\n        return ( \n            <div className={'ot-new-post-video ' + ( loading ? 'loading' : '' ) + ( is_temp ? ' is-temp' : '' )}>\n                <PostVideo video={video} />\n                {/* <button className=\"ot-btn action\" onClick={this.props.onRemoveVideo}>\n                    <svg viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\n                </button> */}\n            </div>\n        );\n    }\n}\n \nexport default NewPostVideo;","import React from 'react';\n\nimport NewPostImage from \"./NewPostImage\";\nimport NewPostVideo from \"./NewPostVideo\";\n\nconst NewPostMedia = ( props ) => {\n    const { readonly, images, videos, token } = props;\n    const video = videos && videos.length ? videos[0] : null;\n\n    return ( \n        <div className=\"ot-new-post-media\">\n            { videos && videos.length > 0 && \n                <NewPostVideo video={video}\n                    token={token}\n                    onVideoUploaded={ ( res ) => { if(!readonly) props.onVideoUploaded(res) } }\n                    onRemoveVideo={ props.onRemoveVideo } />\n            }\n            { images && images.length > 0 &&\n                <div className=\"layout ot-new-post-images\">\n                    { images.map( (image, index) => \n                        <NewPostImage key={ index } image={image}\n                            token={token}\n                            onImageLoaded={ (src) => { if(!readonly) props.onImageLoaded(image, index, src) } }\n                            onImageUploaded={ (new_image) => { if(!readonly) props.onImageUploaded(image, index, new_image) } }\n                            onRemoveImage={ () =>  props.onRemoveImage(index) } />\n                    )}\n                </div>\n            }\n        </div>\n    );\n}\n \nexport default NewPostMedia;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Camera extends Component {\n  state = { facingMode: \"user\" };\n  componentWillMount() {\n    this.setup();\n  }\n\n  componentWillUnmount(){\n    this.state.mediaStream.getVideoTracks()[0].stop();\n  }\n\n  setup = () => {\n    const { video, audio } = this.props;\n    if (navigator.mediaDevices) {\n      navigator.mediaDevices\n      // .getUserMedia({ video, audio, facingMode: this.state.facingMode })\n      .getUserMedia({ video: { facingMode: this.state.facingMode }, audio })\n      .then((mediaStream) => {\n        this.setState({ mediaStream });\n        this.video.srcObject = mediaStream;\n        this.video.play();\n      })\n      .catch(error => error);\n    }\n  }\n\n  capture() {\n    const mediaStreamTrack = this.state.mediaStream.getVideoTracks()[0];\n    const imageCapture = new window.ImageCapture(mediaStreamTrack);\n\n    return imageCapture.takePhoto();\n  }\n  \n  switchMode() {\n    const facingMode = this.state.facingMode === \"environment\" ? \"user\" : \"environment\";\n    this.setState({facingMode}, () => {\n      this.state.mediaStream.getVideoTracks()[0].stop();\n      this.setState({ mediaStream: null });\n      // return this.setState({ mediaStream: null });\n      setTimeout(() => {\n        this.setup();\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div style={this.props.style}>\n        { this.props.children }\n        <video ref={(video) => { this.video = video; }} />\n      </div>\n    );\n  }\n}\n\nCamera.propTypes = {\n  audio: PropTypes.bool,\n  video: PropTypes.bool,\n  children: PropTypes.element\n};\n\nCamera.defaultProps = {\n  audio: false,\n  video: true,\n  style: {},\n  children: null\n};\n\nexport default Camera;\n\n\nconst styles = {\n  base: {\n    width: '100%',\n    height: '100%'\n  }\n};","import React, { Component } from 'react';\n// import Camera from 'react-camera';\nimport Camera from './Camera';\n\nexport default class NewPostCamera extends Component {\n  state = { image: null }\n\n  takePicture = () => {\n    this.camera.capture()\n    .then(blob => {\n      const src = URL.createObjectURL(blob);\n      this.img.src = src;\n      this.setState({image: blob});\n      console.log(src);\n      this.img.onload = () => { URL.revokeObjectURL(this.src); }\n    })\n  }\n\n  switchCameraMode = () => {\n    this.camera.switchMode()\n  }\n\n  handleRepeat = () => {\n    this.setState({image: null});\n  }\n\n  render() {\n    const { image } = this.state;\n    return (\n      <div id=\"newPostCamera\">\n        { !image &&\n          <Camera\n            ref={(cam) => { this.camera = cam; }}>\n\n            <div id=\"captureContainer\">\n              <button className=\"ot-btn flat\" onClick={this.props.onCancel}>\n                CANCEL\n              </button>\n              <div id=\"captureButton\" onClick={this.takePicture} />\n              <button className=\"ot-btn action\" onClick={this.switchCameraMode}>\n                <svg viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M20 4h-3.17L15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 11.5V13H9v2.5L5.5 12 9 8.5V11h6V8.5l3.5 3.5-3.5 3.5z\"/></svg>\n              </button>\n            </div>\n\n          </Camera>\n        }\n\n        <img id=\"captureImage\" className={!image ? 'hidden': ''}\n          ref={(img) => { this.img = img; }}\n          alt=\"\"\n        />\n\n        { image && \n          <div id=\"captureContainer\">\n            <button className=\"ot-btn flat\" onClick={this.handleRepeat}>\n              REPEAT\n            </button>\n            \n            \n            <button className=\"ot-btn flat\" onClick={() => this.props.onAddPicture(image)}>\n              CONTINUE\n            </button>\n          </div>\n        }\n      </div>\n    );\n  }\n}","import React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\nimport Fullscreen from \"react-full-screen\";\n\nimport './new-post-mobile.css'\nimport NewPostMedia from '../NewPostMedia';\nimport NewPostCamera from './NewPostCamera';\n\nclass NewPostMobile extends React.Component {\n    state = { takingPicture: false }\n\n    constructor(props){\n        super(props);\n        this.inputField = React.createRef();\n    }\n\n    componentDidMount(){\n        if(this.inputField){\n            this.inputField.current.textarea.focus();\n        }\n    }\n\n    closeCamera = () => {\n        this.props.onCloseCamera();\n        if(this.inputField){\n            this.inputField.current.textarea.focus();\n        }\n    }\n\n    handleAddPicture = (picture) => {\n        this.closeCamera();\n        this.props.onAddPicture(picture);\n    }\n\n    render() { \n        const { takingPicture, posting, user, content, videos, images } = this.props;\n        return (\n            <React.Fragment>\n                { takingPicture && \n                    <Fullscreen\n                        enabled={takingPicture}>\n                        <NewPostCamera\n                            onCancel={this.closeCamera}\n                            onAddPicture={this.handleAddPicture} /> \n                    </Fullscreen>\n                }\n                <div className={'ot-new-post-mobile ' + ( posting ? 'posting ' : ' ')}>\n                    <div className=\"ot-new-post-mobile-nav layout center\">\n                        <button className=\"ot-btn action\" onClick={this.props.onBackClicked}>\n                            <svg viewBox=\"0 0 24 24\"><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"/></svg>\n                        </button>\n\n                        <span>New Post</span>\n\n                        <span className=\"flex\"></span>\n\n                        <button className=\"ot-btn flat\" onClick={this.props.onSubmitClicked}>\n                            SEND\n                        </button>\n                    </div>\n\n                    <div className=\"ot-new-post-mobile-content\">\n                        <div className=\"ot-new-post-wrapper layout\">\n                            <div className=\"ot-dp\">\n                                <img src={user.dp} alt=\"\"/>\n                            </div>\n\n                            <TextareaAutosize\n                                ref={this.inputField} \n                                placeholder=\"Share your inisights...\" className=\"ot-new-post-text\" rows={1}\n                                value={content}\n                                onChange={this.props.onChange}\n                                onKeyUp={this.props.onKeyUp} />\n\n                        </div>\n                        \n                        <NewPostMedia\n                            readonly\n                            token={user.token}\n                            videos={videos}\n                            images={images}\n                            onRemoveImage={this.props.onRemoveImage} />\n                    </div>\n                    \n                    <div className=\"ot-new-post-mobile-actions layout center-center\">\n                        <input type=\"file\" id=\"mobileImages\" onChange={this.props.onFilesPicked}/>\n                        <label className=\"ot-btn flat\" htmlFor=\"mobileImages\">\n                            {/* <svg viewBox=\"0 0 24 24\"><path d=\"M19 7v2.99s-1.99.01-2 0V7h-3s.01-1.99 0-2h3V2h2v3h3v2h-3zm-3 4V8h-3V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-8h-3zM5 19l3-4 2 3 3-4 4 5H5z\"/></svg> */}\n                            ADD FILES\n                        </label>\n                        &emsp;&emsp;\n                        <button className=\"ot-btn flat\" onClick={this.props.onOpenCamera}>\n                            {/* <svg viewBox=\"0 0 24 24\"><path d=\"M19 7v2.99s-1.99.01-2 0V7h-3s.01-1.99 0-2h3V2h2v3h3v2h-3zm-3 4V8h-3V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-8h-3zM5 19l3-4 2 3 3-4 4 5H5z\"/></svg> */}\n                            TAKE PICTURE\n                        </button>\n                    </div>\n                </div>\n            </React.Fragment> \n        );\n    }\n}\n \nexport default NewPostMobile;","import React from 'react';\n\nimport './new-post.css';\n\nimport { slice } from 'lodash'\n\nimport axios, { post as aPost } from 'axios';\n\nimport PostVideo, { _parseYoutubeURL, _getEmbedUrl } from \"../PostMedia/PostVideo\";\n\nimport TextareaAutosize from 'react-autosize-textarea';\nimport NewPostMobile from \"./NewPostMobile\";\nimport NewPostMedia from \"./NewPostMedia\";\n\nimport { notification, notify } from '../Notifications';\nimport { API_BASE_URL } from '../constants';\n\nconst MAX_IMAGE_COUNT = 5;\nclass NewPost extends React.Component {\n    state = { creatingOnMobile: false, takingPicture: false, posting: false, dragover: false, focused: false, content: '', images: [], videos: [] }\n\n    constructor(props){\n        super(props);\n        this.wrapper = React.createRef();\n    }\n\n    componentDidMount(){\n        window.addEventListener(\"dragover\", this.FileDragHover, false);\n        window.addEventListener(\"dragleave\", this.FileDragHover, false);\n        window.addEventListener(\"drop\", this.FileSelectHandler, false);\n\n        this._isMounted = true;\n        window.onpopstate = () => {\n            console.log(\"State popped!\");\n            if(this._isMounted) {\n                const { hash } = window.location;\n                console.log(\"Popstate hash: \", hash, hash.indexOf('creatingOnMobile'));\n                if(hash.indexOf('creatingOnMobile') === -1 && this.state.creatingOnMobile)\n                    this.setState({creatingOnMobile: false})\n\n                if(hash.indexOf('takingPicture') === -1 && this.state.takingPicture)\n                    this.setState({takingPicture: false})\n            }\n        }\n    }\n\n    FileDragHover = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const hovering = e.type !== \"dragleave\" && e.type !== \"drop\";\n        \n        setTimeout(() => {\n            this.setState({dragover: hovering});\n        }, 20);\n    }\n\n    FileSelectHandler = (e) => {\n        this.FileDragHover(e);\n    \n        var files = e.target.files || e.dataTransfer.files;\n    \n        if(!files || !files.length)\n            return;\n    \n        this.processFiles(files);\n    }\n\n    openCamera = () => {\n        console.log(\"Opening camera....\");\n        window.history.pushState({takingPicture: true}, 'takingPicture', '#creatingOnMobile/takingPicture');\n        this.setState({takingPicture: true})\n    }\n\n    closeCamera = () => {\n        window.history.back();\n        this.setState({takingPicture: false});\n    }\n\n    imageLoaded = (image, index, src) => {\n        let new_images = [...this.state.images]\n\n        image.src = src;\n        image.loading = false;\n\n        new_images.splice(index, 1, image);\n\n        this.setState({ images: new_images });\n    }\n    \n    imageUpLoaded = (image, index, res) => {\n        let new_images = [...this.state.images]\n\n        image.id = res.id;\n        image.photo = res.photo;\n\n        new_images.splice(index, 1, image);\n\n        this.setState({ images: new_images });\n    }\n    \n    videoUpLoaded = (res) => {\n        let new_videos = [...this.state.videos];\n        let video = new_videos[0];\n        video.id = res.id;\n\n        this.setState({ videos: [video] });\n    }\n    \n    removeVideo = () => {\n        this.setState({ videos: [] });\n    }\n    \n    removeImage = (index) => {\n        let new_images = [...this.state.images]\n\n        new_images.splice(index, 1);\n\n        this.setState({ images: new_images });\n    }\n\n    handleAddPicture = (pic) => {\n        if(this.state.images.length === MAX_IMAGE_COUNT){\n            notify( notification(`You can not upload more than ${MAX_IMAGE_COUNT} images`) );\n            return;\n        }\n\n        const id = 'ot-temp-id' + Math.random().toString(36).substr(2, 5);\n        pic.lastModifiedDate = new Date();\n        pic.name = 'ot-file-' + Math.random().toString(36).substr(2, 5);\n        this.setState({ images: [...this.state.images, { id, file: pic, loading: true, src: \"\"}] });\n    }\n\n    processFiles = (files) => {\n        const valid_files = Array.from(files).filter(f => f.type.indexOf(\"image\") !== -1);\n        const images = valid_files.map( f => { \n            const id = 'ot-temp-id' + Math.random().toString(36).substr(2, 5);\n            return { id, file: f, loading: true, src: \"\"}; \n        });\n\n        let diff = MAX_IMAGE_COUNT - this.state.images.length;\n        if(diff < 0)\n            diff = 0;\n        \n        if(diff < images.length){\n            notify( notification(`You can not upload more than ${MAX_IMAGE_COUNT} images`) )\n        }\n        this.setState({ images: this.state.images.concat(slice(images, 0, diff)) });\n        \n        Array.from(files).filter(f => f.type.indexOf(\"image\") === -1)\n            .forEach( f => {\n                let fname = f.name.substr(0, 15).trim();\n                fname += f.name.length > 15 ? '...' : '';\n                notify( notification(`<strong>${fname}</strong> is not an image`) )\n            });\n    }\n\n    setFocus = (state, fromClick) => {\n        if(!fromClick)\n            this.setState({focused: state});\n        \n        if(state && fromClick && window.innerWidth < 541){\n            this.openMobileCreate();\n        }\n    }\n\n    openMobileCreate = () => {\n        window.history.pushState({creating: true}, 'creating', '#creatingOnMobile');\n        this.setState({creatingOnMobile: true})\n    }\n\n    closeMobileCreate = () => {\n        window.history.back();\n        this.setState({creatingOnMobile: false})\n    }\n    \n    handleChange = (event) => {\n        let content = event.target.value;\n        const video_index = content.indexOf(\"https\");\n        const src = content.substr(video_index, content.length);\n\n        this.setState({content}, () => {\n            if(video_index !== -1 && _parseYoutubeURL(src)){\n                const id = 'ot-temp-id' + Math.random().toString(36).substr(2, 5);\n                const videos = [ { id, video: src } ];\n                content = content.replace(src, \"\");\n\n                this.setState({ content, videos });\n            }\n        });\n    }\n    \n    handleKeyup = (event) => {\n        if(event.key === 'Enter' && this.state.content.length)\n            this.submitClicked();\n    }\n\n    sendPost = (url, formData, params) => {\n        const config = {\n            headers: {\n                'content-type': 'application/x-www-form-urlencode'\n            },\n            params\n        }\n        return aPost(url, formData, config)\n    }\n\n    submitClicked = async () => {\n        this.setState({posting: true})\n\n        let form_data = new FormData();\n        form_data.append('content', this.state.content);\n\n        if(this.state.images.length){\n            await this.state.images.map( i => { \n                i.photo = i.file;\n                console.log(i.id);\n                form_data.append('photo_list', i.id);\n                return i.id;\n            });\n        }\n        \n        if(this.state.videos.length && !this.state.images.length){\n            const video = this.state.videos[0];\n            // if(video.id)\n            //     form_data.append('video_list', video.id);\n            // else\n            //     form_data.set('content', this.state.content + video);\n\n            form_data.set('content', this.state.content + video.video);\n        }\n\n        const params = { token: this.props.user.token };\n        this.sendPost(API_BASE_URL + '/publish_post/', form_data, params)\n            .then(({data}) => {\n                this.setState({posting: false});\n                const response = data[0];\n                console.log(\"Submit post result: \", response);\n                // this.props.onImageUpLoaded( response );\n\n                if(response.status){\n                    this.props.onNewPost(response.post);\n                    if(this.state.creatingOnMobile){\n                        this.closeMobileCreate();\n                    }\n                    this.setState({ posting: false, dragover: false, focused: false, content: '', images: [], videos: [] });\n                }\n            })\n            .catch((error) => {\n                this.setState({posting: false});\n                notify( notification(`Error submitting post`) )\n\n                let err = \"\";\n                if (error.response) {\n                    err = error.response.data;\n                } else if (error.request) {\n                    err = error.request;\n                } else {\n                    err = error.message;\n                }\n\n                console.error(\"Submit post Error\", err);;\n            });\n    }\n\n    render() {\n        const { user } = this.props;\n        const { creatingOnMobile, takingPicture, posting, dragover, focused, content, images, videos } = this.state;\n        const has_media = images.length || videos.length;\n        const media_type = has_media ? images.length ? 'image' : 'video' : null;\n\n        return (\n            <React.Fragment>\n                { creatingOnMobile && \n                    <NewPostMobile\n                        user={user}\n                        content={content}\n                        images={images} \n                        videos={videos}\n                        takingPicture={takingPicture}\n                        posting={posting}\n                        onChange={this.handleChange}\n                        onKeyUp={this.handleKeyup}\n                        onFilesPicked={this.FileSelectHandler}\n                        onRemoveImage={this.removeImage}\n                        onRemoveVideo={this.removeVideo}\n                        onSubmitClicked={this.submitClicked}\n                        onBackClicked={this.closeMobileCreate}\n                        onOpenCamera={this.openCamera}\n                        onCloseCamera={this.closeCamera}\n                        onAddPicture={this.handleAddPicture} />\n                }\n\n                <div ref={this.wrapper} className={ 'ot-new-post ' + ( posting ? 'posting ' : ' ') + ( dragover ? images.length ? 'dragging has-images' : 'dragging' : '' ) }>\n                    <div className=\"ot-new-post-wrapper layout\">\n                        <div className=\"ot-dp\">\n                            <img src={user.dp} alt=\"\"/>\n                        </div>\n\n                        <TextareaAutosize \n                            placeholder=\"Share your inisights...\" className=\"ot-new-post-text\" rows={1}\n                            onClick={ () => this.setFocus(true, true) }\n                            onFocus={ () => this.setFocus(true) }\n                            onBlur={ () => this.setFocus(false) }\n                            onChange={this.handleChange}\n                            onKeyUp={this.handleKeyup}\n                            value={content} />\n                    </div>\n\n                    <NewPostMedia\n                        token={user.token}\n                        videos={videos}\n                        images={images}\n                        onImageLoaded={this.imageLoaded}\n                        onImageUploaded={this.imageUpLoaded}\n                        onRemoveImage={this.removeImage}\n                        onVideoUploaded={this.videoUpLoaded}\n                        onRemoveVideo={this.removeVideo} />\n\n                    <div className={'layout end-justified ot-new-post-button-wrapper' + (content.length || focused ? ' visible' : '')}>\n                        <button className={'ot-btn flat' + (!content.length ? ' disabled' : '') }\n                            onClick={ this.submitClicked }>\n                            POST\n                        </button>\n                    </div>\n                </div>\n\n                <button className=\"ot-btn fab ot-post-creator-fab\" onClick={this.openMobileCreate}>\n                    <svg viewBox=\"0 0 24 24\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/></svg>\n                </button>\n            </React.Fragment> \n        );\n    }\n}\n \nexport default NewPost;","import React from 'react';\nimport axios from 'axios';\n\nimport './post-list.css';\n\nimport sample_posts from './posts';\n\nimport { API_BASE_URL } from '../constants';\n\nimport PostItem from \"../PostItem\";\nimport NewPost from '../NewPost';\nimport { notification, notify } from '../Notifications';\n\nclass PostList extends React.Component {\n    state = { initial_fetch: false, posts: [] };\n\n    componentDidMount(){\n        const { user } = this.props;\n        // this.setState({user, posts: sample_posts, initial_fetch: true});\n        this.setState({token: user.token}, () => {\n            this.fetchUserPosts();\n        });\n    }\n\n    fetchUserPosts = () => {\n        // console.log(`Fetching posts for ${id}, with token ${token}`);\n        // setTimeout(() => {\n        //     this.setState({posts: sample_posts, initial_fetch: true});\n        // }, 2000);\n        const params = { token: this.state.token };\n            \n        axios.get(API_BASE_URL + '/wall/', { params })\n        .then(({data}) => {\n            console.log(\"Fetch posts result\", data);\n            this.setState({posts: data, initial_fetch: true})\n        })\n        .catch((err) => {\n            console.error(\"Fetch posts Error\", err);\n            this.setState({initial_fetch: true});\n        });\n\n    }\n\n    toggleCommentLiked = (post, index, comment_index) => {\n        let comment = JSON.parse(JSON.stringify(post.comments[comment_index]));\n        const isLiked = comment.is_liked;\n        let new_posts = [...this.state.posts]\n\n\n        comment.is_liked = !isLiked;\n        // comment.total_likes += isLiked ? -1 : 1;\n        post.comments.splice(comment_index, 1, comment);\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const url = API_BASE_URL + ( isLiked ? '/unlike_comment/' : '/like_comment/' );\n        const params = { token: this.state.token, comment_id: comment.id };\n        axios.get(url, { params })\n            .then(({data}) => {\n                const response = data[0];\n                console.log(\"Toggle Comment like response\", response);\n                if(!response.status){\n                    comment.is_liked = isLiked;\n                    post.comments.splice(comment_index, 1, comment);\n                    \n                    new_posts.splice(index, 1, post);\n                    this.setState({ posts: new_posts });\n                }\n            })\n            .catch((error) => {\n                console.error(\"Toggle comment like Error\", error);\n                comment.is_liked = isLiked;\n                post.comments.splice(comment_index, 1, comment);\n                \n                new_posts.splice(index, 1, post);\n                this.setState({ posts: new_posts });\n            });\n    }\n    \n    toggleLiked = (post, index) => {\n        const isLiked = post.is_liked;\n        let new_posts = [...this.state.posts]\n\n        post.is_liked = !isLiked;\n        post.total_likes += isLiked ? -1 : 1;\n\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const url = API_BASE_URL + ( isLiked ? '/unlike_post/' : '/like_post/' );\n        const params = { token: this.state.token, post_id: post.id };\n        axios.get(url, { params })\n            .then(({data}) => {\n                const response = data[0];\n                if(!response.status){\n                    post.is_liked = isLiked;\n                    \n                    new_posts.splice(index, 1, post);\n                    this.setState({ posts: new_posts });\n                }\n            })\n            .catch((error) => {\n                console.error(\"Toggle like Error\", error);\n                post.is_liked = isLiked;\n                \n                new_posts.splice(index, 1, post);\n                this.setState({ posts: new_posts });\n            });\n    }\n    \n    newPost = (post) => {\n        let new_posts = [...this.state.posts];\n        new_posts.unshift(post);\n\n        console.log(post, new_posts);\n        notify( notification(`Your post has been submitted`) )\n\n        this.setState({ posts: new_posts });\n    }\n\n    addComment = (post, index, content) => {\n        let post_copy = {...post}\n        const comment_index = post_copy.comments.length;\n        \n        console.log(post.comments.length);\n        post.total_comments += 1;\n        post.total_commenets += 1;\n\n        const comment = {\n            id: 'ot-temp-id' + Math.random().toString(36).substr(2, 5),\n            content,\n            published_at: new Date(),\n            is_liked: false,\n            publisher: this.props.user\n        }\n\n        post.comments.push(comment);\n\n        let new_posts = [...this.state.posts]\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const params = { token: this.state.token };\n\n        axios({\n            method: 'POST',\n            url: API_BASE_URL + '/publish_comment/',\n            params,\n            data: { post_id: post.id, content }\n        })\n        .then(({data}) => {\n            const response = data[0];\n            console.log(\"Comment result: \", response);\n            \n            if(!response.status){\n                post.comments.splice(comment_index, 1);\n                post.total_comments -= 1;\n                post.total_commenets -= 1;\n            }else{\n                comment.id = comment.id.replace('ot-temp-id', '');\n            }\n\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        })\n        .catch((error) => {\n            let err = \"\";\n            if (error.response) {\n                err = error.response.data;\n            } else if (error.request) {\n                err = error.request;\n            } else {\n                err = error.message;\n            }\n\n            console.error(\"Comment Error\", err);\n\n            post.comments.splice(comment_index, 1);\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        });\n    }\n    \n    showComments = (post, index) => {\n        post.fetching_comments = true;\n\n        let new_posts = [...this.state.posts]\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const params = { token: this.state.token, post_id: post.id };\n\n        axios.get(API_BASE_URL + '/comments/', { params })\n        .then(({data}) => {\n            const response = data[0];\n            console.log(\"Post Comments result: \", response);\n            \n            if(response.status){\n                post.comments = data;\n            }\n\n            post.fetching_comments = false;\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        })\n        .catch((error) => {\n            let err = \"\";\n            if (error.response) {\n                err = error.response.data;\n            } else if (error.request) {\n                err = error.request;\n            } else {\n                err = error.message;\n            }\n\n            console.error(\"Post Comments Error\", err);\n\n            post.fetching_comments = false;\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        });\n    }\n\n    render() { \n        const { scrolled, posts, initial_fetch } = this.state;\n        const { user } = this.props;\n\n        return ( \n            <div className={ 'ot-post-list-wrapper ' + ( scrolled ? 'scrolled' : '' )}>\n                <NewPost user={ user } onNewPost={ this.newPost } />\n            \n                <div className=\"ot-post-list\">\n                    {!initial_fetch && <span>Fetching posts....</span>}\n\n                    {initial_fetch && (\n                        <React.Fragment>\n                            { posts.map( (post, index) => \n                                <PostItem key={post.id} post={post} user={user}\n                                    onToggleLiked={ () => this.toggleLiked(post, index) }\n                                    onNewComment={ (comment) => this.addComment(post, index, comment) }\n                                    onToggleCommentLiked={ (comment_index) => this.toggleCommentLiked(post, index, comment_index) }\n                                    onShowComments={ () => this.showComments(post, index) } />\n                            )}\n                        </React.Fragment>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default PostList;","import React from 'react';\nimport './app.css';\n\nimport axios from \"axios\";\n\nimport Notifications, { notify, notification } from '../Notifications';\n\nimport Login from '../Login';\nimport Header from '../Header';\nimport PostList from '../PostList';\n\nclass App extends React.Component {\n    state = {user: {}, user_fetched: false};\n\n    componentWillMount(){\n        this.fetchUser();\n    }\n\n    fetchUser = async () => {\n        const session_user = await localStorage.getItem('ot-user');\n        this.setState({user_fetched: true});\n\n        if(session_user != null){\n        this.setState({user: JSON.parse(session_user)});\n        }\n    }\n\n    login = ({username, password}) => {\n        const params = {username, password}\n        axios({\n        method: 'POST',\n        url: \"https://www.olbongo.com/api/login/\",\n        params\n        })\n        .then( response => {\n            const result = response.data;\n\n            if(!result.status){    \n                notify( notification(\"Wrong credentials!\") )\n                return;\n            }\n\n            let { user, token } = result;\n            user.token = token;\n            localStorage.setItem('ot-user', JSON.stringify(user));\n            \n            this.setState({user});\n        })\n        .catch( err => {\n            console.error(\"Login Error\", err);\n            notify( notification(\"Wrong credentials!\") )\n        });\n    }\n\n    logout = () => {\n        localStorage.removeItem('ot-user');\n        this.setState({user_fetched: true, user: null});\n    }\n  \n    render() { \n        const { user, user_fetched } = this.state;\n        const user_logged_in = user && user.id && user.token;\n        return (\n            <div className=\"ot-app-wrapper\" context=\"counter1\">\n                <Notifications />\n                { user_logged_in && ( \n                    <Header dp={user.dp} onLogout={ this.logout } />\n                )}\n\n                <main>\n                    { !user_logged_in && user_fetched && ( \n                        <Login user={user} onLogin={this.login} /> \n                    )}\n\n                    { user_logged_in && <PostList user={ user } /> }\n                </main>\n            </div>\n        );\n    }\n}\n\n// App.contextType = MyContext\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.43803f22.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.43803f22.png\";"],"sourceRoot":""}