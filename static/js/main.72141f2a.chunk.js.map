{"version":3,"sources":["Notifications/NotificationItem.jsx","Notifications/index.jsx","Login/index.jsx","Header/index.jsx","PostList/posts.js","constants.js","PostMedia/PostImages.jsx","PostMedia/PostVideo.jsx","PostMedia/index.jsx","Utils/index.jsx","PostComments/PostComment.jsx","PostComments/index.jsx","PostCommenter/index.jsx","PostItem/index.jsx","NewPost/NewPostImage/index.jsx","NewPost/NewPostMedia.jsx","NewPost/NewPostMobile/index.jsx","NewPost/index.jsx","PostList/index.jsx","App/index.jsx","serviceWorker.js","index.js","Login/logo.png","Header/logo.png"],"names":["NotificationItem","props","notification","message","Object","objectWithoutProperties","react_default","a","createElement","className","dangerouslySetInnerHTML","__html","_len","arguments","length","rest","Array","_key","options","CustomEvent","detail","notify","event","document","querySelector","dispatchEvent","Notifications","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","notifications","showNotification","_notification","setState","toConsumableArray","concat","setTimeout","_notifications","filter","n","id","wrapper","React","createRef","_this2","addEventListener","e","_e$detail","objectSpread","Math","random","toString","substr","reverse","map","i","Notifications_NotificationItem","key","Component","Login","username","password","inputChanged","defineProperty","target","name","value","_this$state","isValid","autoComplete","src","logo","height","alt","autoFocus","required","type","onChange","htmlFor","onClick","onLogin","Header","dp","onViewProfile","PostList_posts","published_at","content","owner","images","videos","comments","total_likes","total_comments","is_liked","image","publisher","display_name","video","API_BASE_URL","PostImage","templateClass","extras","slice","photo","_parseYoutubeURL","str","test","match","PostVideo","is_youtube_url","embed","url","_getEmbedUrl","title","frameBorder","allow","allowFullScreen","controls","PostMedia","PostImages","PostMedia_PostVideo","FavoritedIcon","fill","viewBox","d","FavoriteIcon","FavToggle","Fragment","faved","Utils_FavoritedIcon","Utils_FavoriteIcon","PostComment","comment","indexOf","onToggleLiked","Utils_FavToggle","PostComments","initial_fetch","_this$props","loading","index","PostComments_PostComment","onToggleCommentLiked","PostCommenter","handleChange","handleKeyup","sendComment","JSON","parse","stringify","onNewComment","animate_icon","user","animation_duration","placeholder","onKeyUp","lib","width","duration","rotation","PostItem","post","fetching_comments","owned","total_commenets","like_text","comment_text","xmlns","src_PostMedia","onShowComments","src_PostComments","src_PostCommenter","NewPostImage","was_setup","processImage","_callee","worker","regenerator_default","wrap","_context","prev","next","workerize","load","sent","onImageLoaded","stop","file","params","formData","FormData","append","config","headers","content-type","token","fileUpload","then","_ref2","data","console","log","catch","error","err","response","request","onRemoveImage","NewPostMedia","readonly","NewPost_NewPostImage","onImageUpLoaded","new_image","NewPostMobile","onBackClicked","onSubmitClicked","react_autosize_textarea_lib_default","rows","onFocus","onBlur","NewPost_NewPostMedia","onFilesPicked","NewPost","creatingOnMobile","dragover","focused","closeCreate","window","history","back","FileDragHover","stopPropagation","preventDefault","hovering","FileSelectHandler","files","dataTransfer","processFiles","imageLoaded","new_images","splice","imageUpLoaded","res","removeImage","from","f","diff","forEach","fname","trim","setFocus","innerWidth","openMobileCreate","pushState","video_index","new_videos","push","replace","submitClicked","sendPost","aPost","set","_ref","status","onNewPost","_isMounted","onpopstate","hash","location","_this3","NewPost_NewPostMobile","ref","PostList","posts","fetchUserPosts","axios","get","sample_posts","toggleCommentLiked","comment_index","isLiked","new_posts","comment_id","toggleLiked","post_id","_ref3","newPost","unshift","addComment","Date","method","_ref4","showComments","_ref5","scrolled","src_NewPost","src_PostItem","App","user_fetched","fetchUser","session_user","localStorage","getItem","login","result","setItem","alert","viewProfile","user_logged_in","context","src_Notifications","src_Header","src_Login","src_PostList","Boolean","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.72141f2a.chunk.js","sourcesContent":["import React from 'react';\n\nconst NotificationItem = (props) => {\n    const { notification } = props\n    const { message, ...options } = notification;\n    return ( \n        <div className=\"notif show\" dangerouslySetInnerHTML={{ __html: message }}></div>\n    );\n}\n \nexport default NotificationItem;","import React from 'react';\n\nimport './notifications.css';\nimport NotificationItem from './NotificationItem';\n\nexport const notification = (message, ...rest) => {\n    const options = rest && rest.length ? rest[0] : {};\n    return new CustomEvent('notification', { detail: { message, options: options } })\n}\n\nexport const notify = ( event ) => {\n    document.querySelector(\".ot-notifications-wrapper\").dispatchEvent(event);\n}\n\nclass Notifications extends React.Component {\n    state = { notifications: [] }\n    constructor(props){\n        super(props);\n        this.wrapper = React.createRef();\n    }\n\n    componentDidMount(){\n        document.querySelector(\".ot-notifications-wrapper\").addEventListener('notification', (e) => {\n            const { message, options } = e.detail;\n            const _notification = { message, ...options };\n            _notification.id = 'ot-notif-' + Math.random().toString(36).substr(2, 5);\n\n            this.showNotification(_notification)\n        }, false);\n    }\n\n    showNotification = (_notification) => {\n        this.setState({ notifications: [ ...this.state.notifications, _notification] }, () => {\n            setTimeout(() => {\n                const _notifications = [...this.state.notifications].filter( ( n ) => n.id !== _notification.id);\n                this.setState({ notifications: _notifications });\n            }, 3000);\n        });\n    }\n\n    render() { \n        const { notifications } = this.state;\n        return ( \n            <div className=\"ot-notifications-wrapper\">\n                { notifications.reverse().map( (n, i) => <NotificationItem key={i} notification={n} />) }\n            </div>\n        );\n    }\n}\n \nexport default Notifications;","import React from 'react';\n\nimport \"./login.css\";\nimport logo from \"./logo.png\";\n\nclass Login extends React.Component {\n    state = { username: \"\", password: \"\" }\n\n    inputChanged = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n    };\n\n    render() { \n        const { username, password } = this.state;\n        const isValid = username.length > 0 && password.length > 0;\n        return (\n            <div className=\"ot-login-page\">\n                <form className=\"ot-login-form\" autoComplete=\"off\">\n                    <div className=\"ot-login-title layout center\">\n                        <img src={logo} height=\"50px\" alt=\"\"/>\n                        Otalk Login\n                    </div>\n\n                    <div className=\"ot-input-box\">\n                        <input autoFocus autoComplete=\"off\" id=\"username\" className={ username.length ? 'valid' : '' }\n                            required type=\"text\" name=\"username\"\n                            value={username} \n                            onChange={this.inputChanged} />\n                        <label htmlFor=\"username\">Username</label>\n                    </div>\n\n                    <div className=\"ot-input-box\">\n                        <input autoComplete=\"off\" id=\"password\" className={ password.length ? 'valid' : '' }\n                            required type=\"password\" name=\"password\"\n                            value={password} \n                            onChange={this.inputChanged} />\n                        <label htmlFor=\"password\">Password</label>\n                    </div>\n\n                    <button type=\"button\" className={ 'ot-btn primary rounded ' + ( !isValid ? 'disabled' : '' ) }\n                        onClick={() => this.props.onLogin({username, password})}>LOGIN</button>\n                </form>\n            </div>\n        );\n    }\n}\n \nexport default Login;","import React from 'react';\nimport logo from \"./logo.png\"\n\nimport './header.css';\n\nconst Header = (props) => {\n    const { dp } = props;\n\n    return ( \n        <div className=\"ot-header layout center\">\n            <img className=\"ot-logo\" src={logo} alt=\"\"/>\n            &emsp;\n            <span className=\"ot-header-title\">\n                Otalk\n            </span>\n\n            <span className=\"flex\"></span>\n\n            <div className=\"ot-dp\">\n                <img src={dp} alt=\"\" onClick={props.onViewProfile} />\n            </div>\n        </div>\n    );\n}\n \nexport default Header;","export default [\n    {\n        id: \"q3agaaf\",\n        published_at: \"May 14th\",\n        content: \"Chaba.. Walter.. Sharif.. noni.. the dude named sinbad... tabia hii muache... malizen kazi moja moja... wote apa mna star moja moja github lakini mna very potential projects ambazo zingeweza kuwapa stars za kutosha tu and make people know you. But I guess it's the curse of watu wanaojua, wanataka wafanye kila kitu and then when something interesting comes up jump to that and so forth and so on.\",\n        owner: {\n            name: \"Oneka\",\n            dp: \"https://olbongo.blob.core.windows.net/olbongo/cache/b5/c8/b5c81cea5d71c612d1eda7b3f53e30ab.png\"\n        },\n        images: [],\n        videos: [],\n        comments: [],\n        total_likes: 17,\n        total_comments: 0,\n        is_liked: true\n    },\n    {\n        id: \"323vqf\",\n        published_at: \"May 7th\",\n        content: \"Custom made, no bootstrap....who says a #finalYearProject can't be pretty?🤣🤣\",\n        owner: {\n            name: \"Walter Kimaro\",\n            dp: \"https://olbongo.blob.core.windows.net/olbongo/cache/7e/ba/7ebad99ccf6338b0eac074fe092511ca.jpg\"\n        },\n        images: [\n            {\n                id: \"53141\",\n                image: 'https://olbongo.blob.core.windows.net/olbongo/CACHE/images/post_photos/2018/05/19/fyp2/757fd5eda0e86e4102abf5bd03c72301.jpeg'\n            },\n            {\n                id: \"98675\",\n                image: 'https://olbongo.blob.core.windows.net/olbongo/CACHE/images/post_photos/2018/05/19/fyp1/cb5072e9e9ba82bfdc86ea2bb01b475e.jpeg'\n            },\n            {\n                id: \"pr023\",\n                image: 'https://scontent.fnbo1-1.fna.fbcdn.net/v/t1.0-9/46511215_2278042062253182_1726256465611587584_n.jpg?_nc_cat=108&_nc_eui2=AeF0Y5PqMxU_rHD1u4hKqcQ9iclWB89H0jbXyxi2hI5gaqgvazO0ItPPrrGWE7pSM1MAN6ZcU66fqh3kYNtCH5BwkeKKZX0Rvbqc0NSTnLSgIg&_nc_ht=scontent.fnbo1-1.fna&oh=5388b4398c099aa416f0d46de73bb483&oe=5C7B3640'\n            },\n            {\n                id: \"fb90023\",\n                image: 'https://scontent.fnbo1-1.fna.fbcdn.net/v/t1.0-9/46790425_2278042028919852_3478896021969305600_o.jpg?_nc_cat=100&_nc_ht=scontent.fnbo1-1.fna&oh=9849b187c6dc15a991f84e89421d1c12&oe=5C7E9564'\n            },\n            {\n                id: \"bufb90023\",\n                image: 'https://scontent.fnbo1-1.fna.fbcdn.net/v/t1.0-9/46508670_2278051698918885_7509086100363673600_o.jpg?_nc_cat=102&_nc_ht=scontent.fnbo1-1.fna&oh=de7ab2498d6fee182d43db28ca2e08e7&oe=5C653A40'\n            }\n        ],\n        videos: [],\n        comments: [\n            {\n                \"id\": \"f513q\",\n                \"content\": \"Wote apa mna star moja moja github lakini mna very potential projects ambazo zingeweza kuwapa stars za kutosha tu and make people know you. But I guess it's the curse of watu wanaojua, wanataka wafanye kila kitu and then when something interesting comes up jump to that and so forth and so on.\",\n                \"published_at\": \"May 7th\",\n                \"is_liked\": true,\n                \"publisher\": {\n                    \"id\": \"0gjo9a\",\n                    \"display_name\": \"Daniel Kindimba\",\n                    \"dp\": \"https://olbongo.blob.core.windows.net/olbongo/cache/9f/d3/9fd3db161a11cdb3e7ef8f9cd6a49948.jpg\",\n                }\n            },\n            {\n                \"id\": \"lk213q\",\n                \"content\": \"it looks awesome ....\",\n                \"published_at\": \"May 7th\",\n                \"is_liked\": true,\n                \"publisher\": {\n                    \"id\": \"0gjo9a\",\n                    \"display_name\": \"Daniel Kindimba\",\n                    \"dp\": \"https://olbongo.blob.core.windows.net/olbongo/cache/9f/d3/9fd3db161a11cdb3e7ef8f9cd6a49948.jpg\",\n                }\n            },\n            {\n                \"id\": \"qw413q\",\n                \"content\": \"Nicee man\",\n                \"published_at\": \"May 7th\",\n                \"is_liked\": false,\n                \"publisher\": {\n                    \"id\": \"0gjo9a\",\n                    \"display_name\": \"Kelvin Bulikya\",\n                    \"dp\": \"https://olbongo.blob.core.windows.net/olbongo/cache/02/d5/02d509d2bb912d445cc50ad2c69e851e.png\",\n                }\n            }\n        ],\n        total_likes: 3,\n        total_comments: 2,\n        is_liked: false\n    },\n    {\n        id: \"zavhr7\",\n        published_at: \"Mar 1st\",\n        content: \"Page Lifecycle API - HTTP203\",\n        owner: {\n            name: \"Gift Kiravu\",\n            dp: \"https://olbongo.blob.core.windows.net/olbongo/cache/9b/b6/9bb64db4dbb1a9e702d99757156b4c60.png\"\n        },\n        images: [],\n        videos: [\n            {\n                id: \"53141\",\n                video: 'https://www.youtube.com/watch?v=UlLQPguE7UQ'\n            }\n        ],\n        comments: [\n            {\n                \"id\": \"qw413q\",\n                \"content\": \"What's this for?\",\n                \"published_at\": \"May 7th\",\n                \"is_liked\": true,\n                \"publisher\": {\n                    \"id\": \"0gjo9a\",\n                    \"display_name\": \"Ramadhani\",\n                    \"dp\": \"https://www.olbongo.com/static/uthumb.png\",\n                }\n            }\n        ],\n        total_likes: 1,\n        total_comments: 1,\n        is_liked: false\n    }\n];\n","export const LOGIN_URL = \"https://www.olbongo.com/api/login\"\nexport const API_BASE_URL = \"https://www.olbongo.com/api/otalk\"","import React from 'react';\n\nconst PostImage = ( props ) => {\n    const { images } = props;\n    let templateClass = '';\n    let extras = ''; \n\n    if(images.length > 1){\n        templateClass = ( images.length > 2 ) ? 'three-image' : 'two-image';\n        templateClass += '-grid';\n        if(images.length > 3)\n            templateClass += ' has-more';\n    \n        extras = images.length > 4 ? images.length - 4 : '';\n    }\n\n    return ( \n        <div className={'ot-post-images ' + templateClass } extras={extras}>\n            {   \n                images.slice(0, 4).map( i => \n                    <div key={i.id} className=\"ot-post-image\">\n                        <img src={i.photo} alt=\"\"/> \n                    </div>\n                )\n            }\n        </div>\n    );\n}\n \nexport default PostImage;","import React from 'react';\n\nexport function _parseYoutubeURL(str){\n    var pattern = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\n    \n    if(!pattern.test(str)) {\n        return false;\n    } else {\n        var reg = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/\n        return str.match(reg);\n    }\n}\n\nexport function _getEmbedUrl(url) {\n    return `https://www.youtube.com/embed/${url}?rel=0&amp;showinfo=0`;\n}\n\nconst PostVideo = ( props ) => {\n    const { videos } = props;\n    const video = videos.length ? videos[0] : null;\n    const is_youtube_url = videos.length ? _parseYoutubeURL(video.video) : false;\n\n    let url = \"\";\n    let embed = \"\";\n    \n    if(is_youtube_url){\n        url = is_youtube_url[2];\n        embed = _getEmbedUrl(url);\n    }\n\n    return ( \n        <div className={'ot-post-video ' + ( is_youtube_url ? 'for-youtube' : '' )}>\n            { is_youtube_url && <iframe title=\"post video\" src={embed} frameBorder=\"0\" allow=\"autoplay; encrypted-media\" allowFullScreen></iframe> }\n            { video && !is_youtube_url && \n                (\n                    <video controls>\n                        <source src={video.video} />\n                    </video>\n                )\n            }\n        </div>\n    );\n}\n \nexport default PostVideo;","import React from 'react';\n\nimport './post-media.css';\n\nimport PostImages from \"./PostImages\";\nimport PostVideo from \"./PostVideo\";\n\nconst PostMedia = (props) => {\n    const { images, videos } = props;\n\n    return ( \n        <div className=\"ot-post-media\">\n            {/* <PostImages images={images} /> */}\n            {/* <PostVideo videos={videos} /> */}\n            { images.length > 0 && (<PostImages images={images} /> ) }\n            { !images.length && videos.length > 0 && ( <PostVideo videos={videos} /> )}\n        </div>\n    );\n}\n \nexport default PostMedia;","import React from 'react';\n\nexport const FavoritedIcon = () => {\n    return (<svg fill=\"#ffa200\" className=\"ot-post-like-icon\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/></svg>);\n}\n \nexport const FavoriteIcon = () => {\n    return (<svg fill=\"#656565\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"/></svg>);\n}\n\nexport const FavToggle = (props) => {\n    return ( \n        <React.Fragment>{ props.faved ? <FavoritedIcon key=\"favorited_icon\" /> : <FavoriteIcon key=\"favorite_icon\" /> }</React.Fragment>\n    );\n}","import React from 'react';\nimport { FavToggle } from '../Utils';\n\nconst PostComment = ( props ) => {\n    const { comment } = props;\n    const { id, published_at, publisher, content, is_liked } = comment;\n    const { dp, display_name } = publisher;\n\n    return ( \n        <div className={'ot-post-comment layout ' + ( id.toString().indexOf('ot-temp-id') !== -1 ? 'temp' : '' )}>\n            <div className=\"ot-dp small\">\n                <img src={dp} alt=\"\"/>\n            </div>\n            <p>\n                <strong>{ display_name }</strong> { content }\n            </p>\n\n            <button className=\"ot-comment-liker ot-btn action\" onClick={ props.onToggleLiked }>\n                { <FavToggle faved={is_liked} /> }\n            </button>\n        </div>\n    );\n}\n \nexport default PostComment;","import React from 'react';\nimport './post-comments.css';\n\nimport PostComment from \"./PostComment\";\n\nclass PostComments extends React.Component {\n    state = { initial_fetch: false, comments: [] };\n\n    componentDidMount(){\n        const { comments, loading } = this.props;\n        this.setState({ comments });\n    }\n\n    render() { \n        const { comments, initial_fetch } = this.state;\n        const { loading } = this.props;\n\n        return ( \n            <div className=\"ot-post-comments\">\n                {!comments.length > 0 && !initial_fetch && <span>Fetching comments....</span>}\n\n                {(comments.length > 0 || initial_fetch) && (\n                    <React.Fragment>\n                        { comments.map( (comment, index) => \n                            <PostComment \n                                key={comment.id} \n                                comment={comment} \n                                onToggleLiked={() => this.props.onToggleCommentLiked(index) } />) \n                        }\n                    </React.Fragment>\n                )}\n\n                { loading && (\n                    <span className=\"ot-comments-loader\">\n                        { comments.length > 0 ? 'loading more comments....' : 'loading comments....'}\n                    </span>\n                ) }\n            </div>\n        );\n    }\n}\n \nexport default PostComments;","import React from 'react';\nimport { FavoriteIcon, FavoritedIcon } from '../Utils';\nimport { MorphReplace } from 'react-svg-morph';\n\nimport './post-commenter.css';\n\nclass PostCommenter extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = { comment: '', animate_icon: true };\n    }\n\n    handleChange = (event) => {\n        this.setState({comment: event.target.value});\n    }\n    \n    handleKeyup = (event) => {\n        if(event.key === 'Enter')\n            this.sendComment();\n    }\n\n    sendComment = () => {\n        const state_copy = JSON.parse(JSON.stringify(this.state));\n        const comment = state_copy.comment;\n\n        if(comment.length){\n            this.props.onNewComment(comment);\n            this.setState({comment : \"\"});\n        }\n    }\n\n    render(){\n        const { comment, animate_icon } = this.state;\n        const { user, faved } = this.props;\n\n        const animation_duration = animate_icon ? 500 : 0;\n\n        return (\n            <div className=\"ot-post-commenter layout center\">\n                <div className=\"ot-dp small\">\n                    <img src={user.dp} alt=\"\" />\n                </div>\n\n                <input className=\"flex\" type=\"text\" placeholder=\"Write a Comment\" \n                    value={comment} \n                    onChange={this.handleChange}\n                    onKeyUp={this.handleKeyup} />\n\n                <div className={'ot-post-commenter-actions' + ((!comment.length) ? ' can-like' : '')}>\n                    <button className=\"ot-btn flat\" onClick={ this.sendComment } >\n                        POST\n                    </button>\n                    <button className=\"ot-post-liker ot-btn action\" onClick={ this.props.onToggleLiked }>\n                        <MorphReplace width={20} height={20} duration={animation_duration} rotation={'none'}>\n                            { faved ? <FavoritedIcon key=\"favorited_icon\" /> : <FavoriteIcon key=\"favorite_icon\" /> }\n                        </MorphReplace>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default PostCommenter;","import React from 'react';\n\nimport './post-item.css';\n\nimport PostMedia from \"../PostMedia\";\n\nimport PostComments from \"../PostComments\";\nimport PostCommenter from \"../PostCommenter\";\n\nconst PostItem = (props) => {\n    const { user, post } = props;\n    const { fetching_comments, is_liked, publisher, owned, published_at, content, images, videos, comments, total_likes, total_commenets } = post;\n    const total_comments = total_commenets;\n    \n    let like_text = total_likes + ' Like';\n    like_text += ( total_likes != 1) ? 's' : '';\n    \n    let comment_text = total_comments + ' Comment';\n    comment_text += ( total_comments != 1) ? 's' : '';\n\n    function handleShowComments(){\n        if(comments && total_comments > 0 && total_comments !== comments.length)\n            props.onShowComments()\n    }\n\n    return ( \n        <div className=\"ot-post-item\">\n            <div className=\"ot-post-item-title layout center\">\n                <div className=\"ot-dp\">\n                    <img src={publisher.dp} alt=\"\" />\n                </div>\n                \n                <div>\n                    <span className=\"ot-post-item-owner\">\n                        { publisher.display_name }\n                    </span>\n                    <span className=\"ot-post-item-date\">\n                        { published_at }\n                    </span>\n                </div>\n\n                {/* { !owned && \n                    (\n                        <button className=\"ot-btn ot-follow-btn flat primary\">\n                            Follow\n                        </button>\n                    )\n                } */}\n\n                <span className=\"flex\"></span>\n\n                <button className=\"ot-post-options-btn ot-btn action\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\n                </button>\n            </div>\n            \n            <p className=\"ot-post-item-content\">\n                { content }\n            </p>\n\n            { (images.length > 0 || videos.length > 0) && (<PostMedia images={images} videos={videos} />) }\n\n            <div className=\"ot-post-reactions\">\n                <small>{ like_text }</small>\n                <span></span>\n                <small className={total_comments > 0 ? 'can-click' : ''}\n                    onClick={ handleShowComments }>{ comment_text }</small>\n            </div>\n\n            { ((comments && comments.length > 0) || fetching_comments) && (\n                <PostComments comments={comments} loading={fetching_comments}\n                    onToggleCommentLiked={props.onToggleCommentLiked} />\n            ) }\n\n            <PostCommenter \n                user={user} faved={is_liked}\n                onToggleLiked={ props.onToggleLiked }\n                onNewComment = { props.onNewComment } />\n        </div>\n    );\n}\n \nexport default PostItem;","import React from 'react';\nimport workerize from 'workerize'\nimport axios, { post } from 'axios'\n\nimport { API_BASE_URL } from \"../../constants\";\n\nclass NewPostImage extends React.Component {\n    state = { was_setup: false };\n    // ctx;\n    // constructor(props){\n    //     super(props);\n    //     this.canvas = React.createRef();\n    //     this.ctx = this.canvas.getContext('2d')\n    // }\n\n    componentWillReceiveProps(props){\n        const { image } = props;\n        const { file } = image;\n\n        if(!this.state.was_setup && image){\n            this.setState({ image, was_setup: true })\n            this.processImage(file);\n            // this.uploadImage(file);\n            // loader(file).then(img => {\n                // console.log(\"Loaded image\", img);\n                // this.props.onImageLoaded(img);\n                // this.ctx.drawImage(img, 0, 0, ctx.canvas.width, ctx.canvas.height);\n            // });\n        }\n    }\n\n    processImage = async ( image ) => {\n        let worker = workerize(`\n            export function load(file) {\n                return new Promise((resolve, reject) => {\n                    var reader = new FileReader();\n                    reader.onload = function(e) {\n                        resolve(e.target.result);\n                    }\n                    reader.readAsDataURL(file);\n                });\n            }\n        `);\n        const src = await worker.load(image);\n        this.props.onImageLoaded(src);\n    }\n\n    fileUpload(url, file, name, params){\n        const formData = new FormData();\n        formData.append(name, file)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            },\n            params\n        }\n        return  post(url, formData, config)\n    }\n\n    uploadImage(file){\n        const params = { token: this.props.token };\n        this.fileUpload(API_BASE_URL + '/upload_post_images/', file, 'photo', params)\n            .then(({data}) => {\n                // const response = data[0];\n                console.log(\"Upload image result: \", data);\n                // this.props.onImageUpLoaded( response );\n            })\n            .catch((error) => {\n                let err = \"\";\n                if (error.response) {\n                    err = error.response.data;\n                } else if (error.request) {\n                    err = error.request;\n                } else {\n                    err = error.message;\n                }\n\n                console.error(\"Upload image Error\", err);;\n            });\n    }\n\n    render() {\n        const { image } = this.props;\n        const { id, src, loading } = image;\n        // const is_temp = id.toString().indexOf('ot-temp-id') !== -1;\n        const is_temp = false;\n        return ( \n            <div className={'ot-new-post-image ' + ( loading ? 'loading' : '' ) + ( is_temp ? ' is-temp' : '' )}>\n                <img src={src} alt=\"\"/>\n                <button className=\"ot-btn action\" onClick={this.props.onRemoveImage}>\n                    <svg viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\n                </button>\n            </div>\n        );\n    }\n}\n \nexport default NewPostImage;","import React from 'react';\n\nimport NewPostImage from \"./NewPostImage\";\nimport PostVideo from '../PostMedia/PostVideo';\n\nconst NewPostMedia = ( props ) => {\n    const { readonly, images, videos, token } = props;\n\n    return ( \n        <div className=\"ot-new-post-media\">\n            { videos && videos.length > 0 && <PostVideo videos={videos} /> }\n            { images && images.length > 0 &&\n                <div className=\"layout ot-new-post-images\">\n                    { images.map( (image, index) => \n                        <NewPostImage key={ index } image={image}\n                            token={token}\n                            onImageLoaded={ (src) => { if(!readonly) props.onImageLoaded(image, index, src) } }\n                            onImageUpLoaded={ (new_image) => { if(!readonly) props.onImageUpLoaded(image, index, new_image) } }\n                            onRemoveImage={ () =>  props.onRemoveImage(index) } />\n                    )}\n                </div>\n            }\n        </div>\n    );\n}\n \nexport default NewPostMedia;","import React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\n\nimport './new-post-mobile.css'\nimport NewPostMedia from '../NewPostMedia';\n\nclass NewPostMobile extends React.Component {\n    state = {  }\n    render() { \n        const { user, content, videos, images } = this.props;\n        return ( \n            <div className=\"ot-new-post-mobile\">\n                <div className=\"ot-new-post-mobile-nav layout center\">\n                    <button className=\"ot-btn action\" onClick={this.props.onBackClicked}>\n                        <svg viewBox=\"0 0 24 24\"><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"/></svg>\n                    </button>\n\n                    <span>New Post</span>\n\n                    <span className=\"flex\"></span>\n\n                    <button className=\"ot-btn flat\" onClick={this.props.onSubmitClicked}>\n                        SEND\n                    </button>\n                </div>\n\n                <div className=\"ot-new-post-mobile-content\">\n                    <div className=\"ot-new-post-wrapper layout\">\n                        <div className=\"ot-dp\">\n                            <img src={user.dp} alt=\"\"/>\n                        </div>\n\n                        <TextareaAutosize \n                            placeholder=\"Share your inisights...\" className=\"ot-new-post-text\" rows={1}\n                            value={content}\n                            onFocus={ () => this.props.onFocus(true) }\n                            onBlur={ () => this.props.onBlur(false) }\n                            onChange={this.props.onChange}\n                            onKeyUp={this.props.onKeyUp} />\n\n                    </div>\n                    \n                    <NewPostMedia\n                        readonly\n                        token={user.token}\n                        videos={videos}\n                        images={images}\n                        onRemoveImage={this.props.onRemoveImage} />\n                </div>\n                \n                <div className=\"ot-new-post-mobile-actions layout center\">\n                    <input type=\"file\" id=\"mobileImages\" onChange={this.props.onFilesPicked}/>\n                    <label className=\"ot-btn action\" htmlFor=\"mobileImages\">\n                        <svg viewBox=\"0 0 24 24\"><path d=\"M19 7v2.99s-1.99.01-2 0V7h-3s.01-1.99 0-2h3V2h2v3h3v2h-3zm-3 4V8h-3V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-8h-3zM5 19l3-4 2 3 3-4 4 5H5z\"/></svg>\n                    </label>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default NewPostMobile;","import React from 'react';\n\nimport './new-post.css';\n\nimport { slice } from 'lodash'\n\nimport axios, { post as aPost } from 'axios';\n\nimport PostVideo, { _parseYoutubeURL, _getEmbedUrl } from \"../PostMedia/PostVideo\";\n\nimport TextareaAutosize from 'react-autosize-textarea';\nimport NewPostMobile from \"./NewPostMobile\";\nimport NewPostMedia from \"./NewPostMedia\";\n\nimport { notification, notify } from '../Notifications';\nimport { API_BASE_URL } from '../constants';\n\nclass NewPost extends React.Component {\n    state = { creatingOnMobile: false, dragover: false, focused: false, content: '', images: [], videos: [] }\n\n    constructor(props){\n        super(props);\n        this.wrapper = React.createRef();\n    }\n\n    componentDidMount(){\n        window.addEventListener(\"dragover\", this.FileDragHover, false);\n        window.addEventListener(\"dragleave\", this.FileDragHover, false);\n        window.addEventListener(\"drop\", this.FileSelectHandler, false);\n\n        this._isMounted = true;\n        window.onpopstate = () => {\n            console.log(\"State popped!\");\n            if(this._isMounted) {\n                const { hash } = window.location;\n                console.log(\"Popstate hash: \", hash);\n                if(hash.indexOf('creatingOnMobile') === -1 && this.state.creatingOnMobile)\n                    this.setState({creatingOnMobile: false})\n            }\n        }\n    }\n\n    closeCreate = () => {\n        window.history.back();\n    }\n\n    FileDragHover = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const hovering = e.type !== \"dragleave\" && e.type !== \"drop\";\n        \n        setTimeout(() => {\n            this.setState({dragover: hovering});\n        }, 20);\n    }\n\n    FileSelectHandler = (e) => {\n        this.FileDragHover(e);\n    \n        var files = e.target.files || e.dataTransfer.files;\n    \n        if(!files || !files.length)\n            return;\n    \n        this.processFiles(files);\n    }\n\n    imageLoaded = (image, index, src) => {\n        let new_images = [...this.state.images]\n\n        image.src = src;\n        image.loading = false;\n\n        new_images.splice(index, 1, image);\n\n        this.setState({ images: new_images });\n    }\n    \n    imageUpLoaded = (image, index, res) => {\n        let new_images = [...this.state.images]\n\n        image.id = res.id;\n        image.photo = res.photo;\n\n        new_images.splice(index, 1, image);\n\n        this.setState({ images: new_images });\n    }\n    \n    removeImage = (index) => {\n        let new_images = [...this.state.images]\n\n        new_images.splice(index, 1);\n\n        this.setState({ images: new_images });\n    }\n\n    processFiles = (files) => {\n        const valid_files = Array.from(files).filter(f => f.type.indexOf(\"image\") !== -1);\n        const images = valid_files.map( f => { \n            const id = 'ot-temp-id' + Math.random().toString(36).substr(2, 5);\n            return { id, file: f, loading: true, src: \"\"}; \n        });\n\n        let diff = 4 - this.state.images.length;\n        if(diff < 0)\n            diff = 0;\n        \n        if(diff < images.length){\n            notify( notification(`You can not upload more than 4 images`) )\n        }\n        this.setState({ images: this.state.images.concat(slice(images, 0, diff)) });\n        \n        Array.from(files).filter(f => f.type.indexOf(\"image\") === -1)\n            .forEach( f => {\n                let fname = f.name.substr(0, 15).trim();\n                fname += f.name.length > 15 ? '...' : '';\n                notify( notification(`<strong>${fname}</strong> is not an image`) )\n            });\n    }\n\n    setFocus = (state) => {\n        this.setState({focused: state});\n\n        if(state){\n            if(window.innerWidth < 541){\n                this.openMobileCreate();\n            }\n        }\n    }\n\n    openMobileCreate = () => {\n        window.history.pushState({}, '', '#creatingOnMobile');\n        this.setState({creatingOnMobile: true})\n    }\n    \n    handleChange = (event) => {\n        const content = event.target.value;\n        const video_index = content.indexOf(\"https\");\n        const video = content.substr(video_index, content.length);\n\n        this.setState({content}, () => {\n            if(video_index !== -1 && _parseYoutubeURL(video)){\n                let new_videos = [...this.state.videos];\n                new_videos.push({ video });\n    \n                this.setState({ videos: new_videos });\n    \n                this.setState({content: content.replace(video, \"\")});\n            }\n        });\n    }\n    \n    handleKeyup = (event) => {\n        if(event.key === 'Enter' && this.state.content.length)\n            this.submitClicked();\n    }\n\n    sendPost = (url, formData, params) => {\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            },\n            params\n        }\n        return aPost(url, formData, config)\n    }\n\n    submitClicked = () => {\n        const formData = new FormData();\n        formData.append('content', this.state.content);\n        this.closeCreate();\n\n        if(this.state.images.length){\n            // const photos = this.state.images.map( i => { \n            //     i.photo = i.file;\n            //     return i;\n            // });\n            // formData.append('photo_list', photos);\n\n            const photo = this.state.images[0].file;\n            formData.append('photo', photo);\n        }\n        \n        if(this.state.videos.length){\n            // const photos = this.state.images.map( i => { \n            //     i.photo = i.file;\n            //     return i;\n            // });\n            // formData.append('photo_list', photos);\n\n            const video = this.state.videos[0].video;\n            // console.log(\"Post vidfeo: \", video);\n            // formData.append('video', video);\n            formData.set('content', this.state.content + video);\n        }\n\n        const params = { token: this.props.user.token };\n        this.sendPost(API_BASE_URL + '/publish_post/', formData, params)\n            .then(({data}) => {\n                const response = data[0];\n                console.log(\"Submit post result: \", response);\n                // this.props.onImageUpLoaded( response );\n\n                if(response.status){\n                    this.props.onNewPost(response.post);\n\n                    this.setState({ dragover: false, focused: false, content: '', images: [], videos: [] });\n                }\n            })\n            .catch((error) => {\n                let err = \"\";\n                if (error.response) {\n                    err = error.response.data;\n                } else if (error.request) {\n                    err = error.request;\n                } else {\n                    err = error.message;\n                }\n\n                console.error(\"Submit post Error\", err);;\n            });\n    }\n\n    render() {\n        const { user } = this.props;\n        const { creatingOnMobile, dragover, focused, content, images, videos } = this.state;\n        const has_media = images.length || videos.length;\n        const media_type = has_media ? images.length ? 'image' : 'video' : null;\n\n        return (\n            <React.Fragment>\n                { creatingOnMobile && \n                    <NewPostMobile\n                        user={user}\n                        content={content}\n                        images={images} \n                        videos={videos}\n                        onFocus={ () => this.setFocus(true) }\n                        onBlur={ () => this.setFocus(false) }\n                        onChange={this.handleChange}\n                        onKeyUp={this.handleKeyup}\n                        onFilesPicked={this.FileSelectHandler}\n                        onRemoveImage={this.removeImage}\n                        onSubmitClicked={this.submitClicked}\n                        onBackClicked={this.closeCreate} />\n                }\n\n                <div ref={this.wrapper} className={ 'ot-new-post ' + ( dragover ? images.length ? 'dragging has-images' : 'dragging' : '' ) }>\n                    <div className=\"ot-new-post-wrapper layout\">\n                        <div className=\"ot-dp\">\n                            <img src={user.dp} alt=\"\"/>\n                        </div>\n\n                        <TextareaAutosize \n                            placeholder=\"Share your inisights...\" className=\"ot-new-post-text\" rows={1}\n                            onFocus={ () => this.setFocus(true) }\n                            onBlur={ () => this.setFocus(false) }\n                            onChange={this.handleChange}\n                            onKeyUp={this.handleKeyup}\n                            value={content} />\n                    </div>\n\n                    <NewPostMedia\n                        token={user.token}\n                        videos={videos}\n                        images={images}\n                        onImageLoaded={this.imageLoaded}\n                        onImageUpLoaded={this.imageUpLoaded}\n                        onRemoveImage={this.removeImage} />\n\n                    <div className={'layout end-justified ot-new-post-button-wrapper' + (content.length || focused ? ' visible' : '')}>\n                        <button className={'ot-btn flat' + (!content.length ? ' disabled' : '') }\n                            onClick={ this.submitClicked }>\n                            POST\n                        </button>\n                    </div>\n                </div>\n\n                <button className=\"ot-btn fab ot-post-creator-fab\" onClick={this.openMobileCreate}>\n                    <svg viewBox=\"0 0 24 24\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/></svg>\n                </button>\n            </React.Fragment> \n        );\n    }\n}\n \nexport default NewPost;","import React from 'react';\nimport axios from 'axios';\n\nimport './post-list.css';\n\nimport sample_posts from './posts';\n\nimport { API_BASE_URL } from '../constants';\n\nimport PostItem from \"../PostItem\";\nimport NewPost from '../NewPost';\nimport { notification, notify } from '../Notifications';\n\nclass PostList extends React.Component {\n    state = { initial_fetch: false, posts: [] };\n\n    componentDidMount(){\n        const { user } = this.props;\n        this.setState({user});\n        this.setState({token: user.token}, () => {\n            this.fetchUserPosts();\n        });\n    }\n\n    fetchUserPosts = () => {\n        // console.log(`Fetching posts for ${id}, with token ${token}`);\n        // setTimeout(() => {\n        //     this.setState({posts: sample_posts, initial_fetch: true});\n        // }, 2000);\n        const params = { token: this.state.token };\n            \n        axios.get(API_BASE_URL + '/wall/', { params })\n        .then(({data}) => {\n            console.log(\"Fetch posts result\", data);\n            this.setState({posts: data, initial_fetch: true})\n        })\n        .catch((err) => {\n            console.error(\"Fetch posts Error\", err);\n            this.setState({posts: sample_posts, initial_fetch: true});\n        });\n\n    }\n\n    toggleCommentLiked = (post, index, comment_index) => {\n        let comment = JSON.parse(JSON.stringify(post.comments[comment_index]));\n        const isLiked = comment.is_liked;\n        let new_posts = [...this.state.posts]\n\n\n        comment.is_liked = !isLiked;\n        // comment.total_likes += isLiked ? -1 : 1;\n        post.comments.splice(comment_index, 1, comment);\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const url = API_BASE_URL + ( isLiked ? '/unlike_comment/' : '/like_comment/' );\n        const params = { token: this.state.token, comment_id: comment.id };\n        axios.get(url, { params })\n            .then(({data}) => {\n                const response = data[0];\n                console.log(\"Toggle Comment like response\", response);\n                if(!response.status){\n                    comment.is_liked = isLiked;\n                    post.comments.splice(comment_index, 1, comment);\n                    \n                    new_posts.splice(index, 1, post);\n                    this.setState({ posts: new_posts });\n                }\n            })\n            .catch((error) => {\n                console.error(\"Toggle comment like Error\", error);\n                comment.is_liked = isLiked;\n                post.comments.splice(comment_index, 1, comment);\n                \n                new_posts.splice(index, 1, post);\n                this.setState({ posts: new_posts });\n            });\n    }\n    \n    toggleLiked = (post, index) => {\n        const isLiked = post.is_liked;\n        let new_posts = [...this.state.posts]\n\n        post.is_liked = !isLiked;\n        post.total_likes += isLiked ? -1 : 1;\n\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const url = API_BASE_URL + ( isLiked ? '/unlike_post/' : '/like_post/' );\n        const params = { token: this.state.token, post_id: post.id };\n        axios.get(url, { params })\n            .then(({data}) => {\n                const response = data[0];\n                if(!response.status){\n                    post.is_liked = isLiked;\n                    \n                    new_posts.splice(index, 1, post);\n                    this.setState({ posts: new_posts });\n                }\n            })\n            .catch((error) => {\n                console.error(\"Toggle like Error\", error);\n                post.is_liked = isLiked;\n                \n                new_posts.splice(index, 1, post);\n                this.setState({ posts: new_posts });\n            });\n    }\n    \n    newPost = (post) => {\n        let new_posts = [...this.state.posts];\n        new_posts.unshift(post);\n\n        console.log(post, new_posts);\n        notify( notification(`Your post has been submitted`) )\n\n        this.setState({ posts: new_posts });\n    }\n\n    addComment = (post, index, content) => {\n        let post_copy = {...post}\n        const comment_index = post_copy.comments.length;\n        \n        console.log(post.comments.length);\n        post.total_comments += 1;\n        post.total_commenets += 1;\n\n        const comment = {\n            id: 'ot-temp-id' + Math.random().toString(36).substr(2, 5),\n            content,\n            published_at: new Date(),\n            is_liked: false,\n            publisher: this.props.user\n        }\n\n        post.comments.push(comment);\n\n        let new_posts = [...this.state.posts]\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const params = { token: this.state.token, post_id: post.id, content };\n\n        axios({\n            method: 'POST',\n            url: API_BASE_URL + '/publish_comment/',\n            params\n        })\n        .then(({data}) => {\n            const response = data[0];\n            console.log(\"Comment result: \", response);\n            \n            if(!response.status){\n                post.comments.splice(comment_index, 1);\n                post.total_comments -= 1;\n                post.total_commenets -= 1;\n            }else{\n                comment.id = comment.id.replace('ot-temp-id', '');\n            }\n\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        })\n        .catch((error) => {\n            let err = \"\";\n            if (error.response) {\n                err = error.response.data;\n            } else if (error.request) {\n                err = error.request;\n            } else {\n                err = error.message;\n            }\n\n            console.error(\"Comment Error\", err);\n\n            post.comments.splice(comment_index, 1);\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        });\n    }\n    \n    showComments = (post, index) => {\n        post.fetching_comments = true;\n\n        let new_posts = [...this.state.posts]\n        new_posts.splice(index, 1, post);\n\n        this.setState({ posts: new_posts });\n\n        const params = { token: this.state.token, post_id: post.id };\n\n        axios.get(API_BASE_URL + '/comments/', { params })\n        .then(({data}) => {\n            const response = data[0];\n            console.log(\"Post Comments result: \", response);\n            \n            if(response.status){\n                post.comments = data;\n            }\n\n            post.fetching_comments = false;\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        })\n        .catch((error) => {\n            let err = \"\";\n            if (error.response) {\n                err = error.response.data;\n            } else if (error.request) {\n                err = error.request;\n            } else {\n                err = error.message;\n            }\n\n            console.error(\"Post Comments Error\", err);\n\n            post.fetching_comments = false;\n            new_posts.splice(index, 1, post);\n            this.setState({ posts: new_posts });\n        });\n    }\n\n    render() { \n        const { scrolled, posts, initial_fetch } = this.state;\n        const { user } = this.props;\n\n        return ( \n            <div className={ 'ot-post-list-wrapper ' + ( scrolled ? 'scrolled' : '' )}>\n                <NewPost user={ user } onNewPost={ this.newPost } />\n            \n                <div className=\"ot-post-list\">\n                    {!initial_fetch && <span>Fetching posts....</span>}\n\n                    {initial_fetch && (\n                        <React.Fragment>\n                            { posts.map( (post, index) => \n                                <PostItem key={post.id} post={post} user={user}\n                                    onToggleLiked={ () => this.toggleLiked(post, index) }\n                                    onNewComment={ (comment) => this.addComment(post, index, comment) }\n                                    onToggleCommentLiked={ (comment_index) => this.toggleCommentLiked(post, index, comment_index) }\n                                    onShowComments={ () => this.showComments(post, index) } />\n                            )}\n                        </React.Fragment>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default PostList;","import React from 'react';\nimport './app.css';\n\nimport axios from \"axios\";\n\nimport Notifications from '../Notifications';\n\nimport Login from '../Login';\nimport Header from '../Header';\nimport PostList from '../PostList';\n\nclass App extends React.Component {\n    state = {user: {}, user_fetched: false};\n\n    componentWillMount(){\n        this.fetchUser();\n    }\n\n    fetchUser = async () => {\n        const session_user = await localStorage.getItem('ot-user');\n        this.setState({user_fetched: true});\n\n        if(session_user != null){\n        this.setState({user: JSON.parse(session_user)});\n        }\n    }\n\n    login = ({username, password}) => {\n        const params = {username, password}\n        axios({\n        method: 'POST',\n        url: \"https://www.olbongo.com/api/login/\",\n        params\n        })\n        .then( response => {\n            const result = response.data;\n\n            if(!result.status){\n            alert(\"Wrong credentials!\");\n            return;\n            }\n\n            let { user, token } = result;\n            user.token = token;\n            localStorage.setItem('ot-user', JSON.stringify(user));\n            \n            this.setState({user});\n        })\n        .catch( err => {\n            console.error(\"Login Error\", err);\n            alert(\"Wrong credentials\");\n        });\n    }\n\n    viewProfile = () => {\n        console.log(\"View profile\");\n    }\n  \n    render() { \n        const { user, user_fetched } = this.state;\n        const user_logged_in = user && user.id && user.token;\n        return (\n            <div className=\"ot-app-wrapper\" context=\"counter1\">\n                <Notifications />\n                { user_logged_in && ( \n                    <Header dp={user.dp} onViewProfile={ this.viewProfile } />\n                )}\n\n                <main>\n                    { !user_logged_in && user_fetched && ( \n                        <Login user={user} onLogin={this.login} /> \n                    )}\n\n                    { user_logged_in && <PostList user={ user } /> }\n                </main>\n            </div>\n        );\n    }\n}\n\n// App.contextType = MyContext\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.43803f22.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.43803f22.png\";"],"sourceRoot":""}